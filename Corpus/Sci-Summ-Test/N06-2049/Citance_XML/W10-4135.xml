<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">For the competition of Chinese word segmentation held in the first CIPSSIGHNA joint conference.</S>
		<S sid ="2" ssid = "2">We applied a subword- based word segmenter using CRFs and extended the segmenter with OOV words recognized by Accessor Variety.</S>
		<S sid ="3" ssid = "3">Moreover, we proposed several post-processing rules to improve the performance.</S>
		<S sid ="4" ssid = "4">Our system achieved promising OOV recall among all the participants.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="5" ssid = "5">Chinese word segmentation is deemed to be a prerequisite for Chinese language processing.</S>
			<S sid ="6" ssid = "6">The competition in the first CIPSSIGHAN joint conference put the task of Chinese word segmentation in a more challengeable setting, where training and test data are obtained from different domains.</S>
			<S sid ="7" ssid = "7">This setting is widely known as domain adaptation.</S>
			<S sid ="8" ssid = "8">For domain adaptation, either a large-scale unlabeled target domain data or a small size of labeled target domain data is required to adapt a system built on source domain data to the target domain.</S>
			<S sid ="9" ssid = "9">In this word segmentation competition, unfortunately, only a small size of unlabeled target domain data is available.</S>
			<S sid ="10" ssid = "10">Thus we focus on handling out-of-vocabulary (OOV) words.</S>
			<S sid ="11" ssid = "11">For this purpose, our system is based on a combination of subword-based tagging method (Zhang et al., 2006) and accessor variety-based new word recognition method (Feng et al., 2004).</S>
			<S sid ="12" ssid = "12">In more detail, we adopted and extended subword-based method.</S>
			<S sid ="13" ssid = "13">Subword list is augmented with new- word list recognized by accessor variety method.</S>
			<S sid ="14" ssid = "14">Feature Template Description a) cn (−2, −1, 0, 1, 2) unigram of characters b) cn cn+1 (−2, −1, 0, 1) bigram of characters c) cn−1 cn cn+1 (−1, 0, 1) trigram of characters d) Pu (C0 ) whether punctuation e) T (C−1)T (C0 )T (C+1) type of characters Table 1: Basic Features for CRF-based Segmenter We participated in the close track of the word segmentation competition, on all the four test datasets, in two of which our system is ranked at the 1st position with respect to the metric of OOV recall.</S>
	</SECTION>
	<SECTION title="System Description. " number = "2">
			<S sid ="15" ssid = "1">2.1 Subword-based Tagging with CRFs.</S>
			<S sid ="16" ssid = "2">The backbone of our system is a character-based segmenter with the application of Conditional Random Fields (CRFs) (Zhao and Kit, 2008).</S>
			<S sid ="17" ssid = "3">In detail, we apply a six-tag tagging scheme, as in (Zhao et al., 2006).</S>
			<S sid ="18" ssid = "4">That is , each Chinese character can be assigned to one of the tags in {B, B2 , B3, M , E, S }.</S>
			<S sid ="19" ssid = "5">Refer to (Zhao et al., 2006) for detailed meaning of the tags.</S>
			<S sid ="20" ssid = "6">Table 1 shows basic feature templates used in our system, where feature templates a, b, d, e are also used in (Zhu et al., 2006) for SVM-based word segmentation.</S>
			<S sid ="21" ssid = "7">In order to extend basic CRF-based segmenter, we first collect 2k most frequent words from training data.</S>
			<S sid ="22" ssid = "8">Hereafter, the list of such words is referred to as subword list.</S>
			<S sid ="23" ssid = "9">Moreover, single- character words 1, if they are not contained in the subword list, are also added.</S>
			<S sid ="24" ssid = "10">Such proce 1 By single-character word, we refer to words that consist solely of a Chinese character.</S>
			<S sid ="25" ssid = "11">Feature Template Description f) in(str, subword-list) is str in subword list g) in(str, confident-word-list) is str in confident-word list Table 2: Subword Features for CRF-based Segmenter dure for constructing a subword list is similar to the one used in (Zhang et al., 2006).</S>
			<S sid ="26" ssid = "12">To enhance the effect of subwords, we go one step further to build a list, named confident-word list here and below, which contains words that are not a portion of other words and are never segmented in the training data.</S>
			<S sid ="27" ssid = "13">In the competition, 400 most frequent words in the confident-word list are used.</S>
			<S sid ="28" ssid = "14">With subword list and confident-word list, both training and test data are segmented with forward maximum match method by using the union of subword list and confident-word list.</S>
			<S sid ="29" ssid = "15">Each segmentation unit (single-character or multi- character unit) in the segmentation results are regarded as “pseudo character” and thus can be represented with the basic features in Table 1 and two additional features as shown in Table 2.</S>
			<S sid ="30" ssid = "16">See the details of subword-based Chinese word segmentation in (Zhang et al., 2006) 2.2 OOV Recognition with Accessor Variety.</S>
			<S sid ="31" ssid = "17">Accessor variety (AV) (Feng et al., 2004) is a simple and effective unsupervised method for extraction of new Chinese words.</S>
			<S sid ="32" ssid = "18">Given a unsegmented text, each substring (candidate word) in the text can be assigned a value according to the following equation: AV (s) = min{Lav (s), Rav (s)} (1) where the left and right AV values, Lav (s) and Rav (s) are defined to be the number of distinct character types appearing on the left and right, respectively.</S>
			<S sid ="33" ssid = "19">Candidate words are sorted in the descending order of AV values and most highly ranked ones can be chosen as new words.</S>
			<S sid ="34" ssid = "20">In practical applications, heuristic filtering rules are generally needed (Feng et al., 2004).</S>
			<S sid ="35" ssid = "21">We re- implemented the AV method and filtering rules, as in (Feng et al., 2004).</S>
			<S sid ="36" ssid = "22">Moreover, we filter out candidate words that have AV values less than 3.</S>
			<S sid ="37" ssid = "23">Unfortunately, candidate word list generated this way still contains many noisy words (substrings that are not words).</S>
			<S sid ="38" ssid = "24">One possible reason is that unlabeled data (test data) used in the competition is extremely small in size.</S>
			<S sid ="39" ssid = "25">In order to refine the results derived from the AV method, we make use of the training data to filter the results from two different perspectives.</S>
			<S sid ="40" ssid = "26">• Segment test data with the CRF-based segmenter described above.</S>
			<S sid ="41" ssid = "27">Then we collect (candidate) words that are in the CRF-based segmentation results, but not appear in the training data.</S>
			<S sid ="42" ssid = "28">Such words are called CRFOOV words hereafter.</S>
			<S sid ="43" ssid = "29">We retain the intersection of CRFOOV words and AV-based results as the set of candidate words to be processed by the following step.</S>
			<S sid ="44" ssid = "30">• Any candidate word in the intersection of CRF-based and AV-based results will be filtered out if they satisfy one of the following conditions: 1) the candidate word is a part of some word in the training data; 2) the candidate word is formed by connection of consecutive words in the training data; 3) the candidate word contains position words, such as 上 (up), 下 (down), 左 (left), 右 (right), etc. Moreover, we take all English words in test data as OOV words.</S>
			<S sid ="45" ssid = "31">A simple heuristic rule is defined for the purpose of English word recognition: an English word is a consecutive sequence of English characters and punctuations between two English characters (including these two characters).</S>
			<S sid ="46" ssid = "32">We finally add all the OOV words into subword list and confident-word list.</S>
	</SECTION>
	<SECTION title="Post-Processing Rules. " number = "3">
			<S sid ="47" ssid = "1">In the results of subword-based word segmentation with CRFs, we found some errors could be corrected with heuristic rules.</S>
			<S sid ="48" ssid = "2">For this purpose, we propose following post-processing rules, for handling OOV and in-vocabulary (IV) words, respectively.</S>
			<S sid ="49" ssid = "3">3.1 OOV Rules.</S>
			<S sid ="50" ssid = "4">3.1.1 Annotation-Standard Independent Rules We assume the phenomena discussed in the following are general across all kinds of annotation standards.</S>
			<S sid ="51" ssid = "5">Thus corresponding rules can be applied without considering annotation standards of training data.</S>
			<S sid ="52" ssid = "6">• A punctuation tends to be a single-character word.</S>
			<S sid ="53" ssid = "7">If a punctation’s previous character and next character are both Chinese characters, i.e. not punctuation, digit, or English character, we always regard the punctuation as a word.</S>
			<S sid ="54" ssid = "8">• Consecutive and identical punctuations tend to be joined together as a word.</S>
			<S sid ="55" ssid = "9">For example, “—” represents a Chinese hyphen which consists of three “-”, and “!!!” is used to show emphasizing.</S>
			<S sid ="56" ssid = "10">Inspired by this observations, we would like to unite consecutive and identical punctuations as a single word.</S>
			<S sid ="57" ssid = "11">• When the character “·” appears in the training data, it is generally used as a connections symbol in a foreign person name, suchas “圣·约翰 (Saint John)”.</S>
			<S sid ="58" ssid = "12">Taking this ob servation into consideration, we always unite the character “·” and its previous and next segment units into a single word.</S>
			<S sid ="59" ssid = "13">A similar rule is designed to unite consecutive digits on the sides of the symbol “.”, ex.</S>
			<S sid ="60" ssid = "14">“1.11”.</S>
			<S sid ="61" ssid = "15">• We notice that four consecutive characters which are in the pattern of AABB generally form a single word in Chinese, for example ”平平淡淡 (dull)”.</S>
			<S sid ="62" ssid = "16">Taking this observation into account, we always unite consecutive characters in the AABB into a single word.</S>
			<S sid ="63" ssid = "17">3.1.2 Templates with Generalized Digits Words containing digits generally belong to a open class, for example, the word “2012年 (AD2012）” means a date.</S>
			<S sid ="64" ssid = "18">Thus CRF-based seg menter has difficulties in recognizing such words since they are frequently OOV words.</S>
			<S sid ="65" ssid = "19">To attack this challenge, we first generalize digits in the training data.</S>
			<S sid ="66" ssid = "20">In detail, we replaced consecutive digits with ”*”.</S>
			<S sid ="67" ssid = "21">For example, the word “2012年”will be transformed into “*年”.</S>
			<S sid ="68" ssid = "22">Second, we col lect word templates which consist of three consecutive words on condition that at least one of the words in a template contains the character “*” and that the template appears in the training data more than 4 times.</S>
			<S sid ="69" ssid = "23">For example, we can get a template like “*月(month) *日(day) 电(publish)”.</S>
			<S sid ="70" ssid = "24">With such templates, we are able to correct errors, say “10月 17日电” into “10月 17日 电”.</S>
			<S sid ="71" ssid = "25">3.2 IV Rules.</S>
			<S sid ="72" ssid = "26">We notice that long words have less ambiguity than short words in the sense of being words.</S>
			<S sid ="73" ssid = "27">For example, characters in “人 才 济 济 （full of talents)” always form a word in the training data, whereas “人 才” have two plausible splitting forms, as “人才 (talent)” or “人 (people) 才 (only)”.</S>
			<S sid ="74" ssid = "28">In our system, we collect words that have at least four characters and filter out words which belong to one of following cases: 1) the word is a part of other words; 2) the word consists solely of punctation and/or digit.</S>
			<S sid ="75" ssid = "29">For example, “唯 物 主 义 (materialism)” and “一 百 二 十 (120)” are discarded, since the former is a substring of the word “唯物主义者 (materialist)” and the latter is a word of digits.</S>
			<S sid ="76" ssid = "30">Finally we get a list containing about 6k words.</S>
			<S sid ="77" ssid = "31">If a character sequence in the test data is a member in the list, it is retained as a word in the final segmentation results.</S>
			<S sid ="78" ssid = "32">Another group of IV rules concern character sequences that have unique splitting in the training data.</S>
			<S sid ="79" ssid = "33">For example, “女人们 (women)” is al ways split as “女人 (woman) 们 (s)”.</S>
			<S sid ="80" ssid = "34">Hereafter, we refer to such character sequences as unique- split-sequence (USS).</S>
			<S sid ="81" ssid = "35">In our system, we are concerned with UUSs which are composed of less than 5 words.</S>
			<S sid ="82" ssid = "36">In order to apply UUSs for post- processing, we first collect word sequence of variable length (word number) from training data.</S>
			<S sid ="83" ssid = "37">In detail, we collect word sequences of two words, three words, and four words.</S>
			<S sid ="84" ssid = "38">Second, word sequences that have more than one splitting cases in the training data are filtered out.</S>
			<S sid ="85" ssid = "39">Third, spaces between words are removed to form USSs.</S>
			<S sid ="86" ssid = "40">For example, the words “女人 (woman) 们 (s)” will form the USS “女人们 ”.</S>
			<S sid ="87" ssid = "41">Finally, we search the test data for each USS.</S>
			<S sid ="88" ssid = "42">If the searching succeeds, the USS will be replaced with the corresponding word sequence.</S>
	</SECTION>
	<SECTION title="Evaluation Results. " number = "4">
			<S sid ="89" ssid = "1">We evaluated our Chinese word segmenter in the close track, in four domain: literature (Lit), com Do ma in B a s i c + O O V +OOV+ IV RO V RI V F RO V RI V F RO V RI V F L i t .64 3 .94 6 .92 7 .65 2 .94 7 .92 9 .64 8 .95 2 .93 4 C o m .83 9 .96 1 .93 8 .85 0 .96 1 .94 1 .85 2 .96 5 .94 7 M e d .72 5 .93 8 .91 2 .75 4 .93 9 .91 7 .75 6 .94 4 .92 3 F i n .76 1 .95 6 .93 2 .85 4 .95 8 .95 0 .87 1 .96 1 .95 5 Table 3: Effectiveness of post-processing rules puter (Com), medicine (Med) and finance (Fin).</S>
			<S sid ="90" ssid = "2">The results are depicted in Table 4, where R, P and F refer to Recall, Precision, F measure respectively, and ROOV and RI V refer to recall of OOV and IV words respectively.</S>
			<S sid ="91" ssid = "3">Since OOV words are the obstacle for practical Chinese word segmenters to achieve high accuracy, we have special interest in the metric of OOV recall.</S>
			<S sid ="92" ssid = "4">We found that our system achieved high OOV recall 2.</S>
			<S sid ="93" ssid = "5">Actually, OOV recall of our system in the do-.</S>
			<S sid ="94" ssid = "6">mains of computer and finance are both ranked at the 1st position among all the participants.</S>
			<S sid ="95" ssid = "7">Compared with the systems ranked second in these two domains, our system achieved OOV recall .853 vs. .827 and .871 vs. .857 respectively.</S>
			<S sid ="96" ssid = "8">We also examined the effectiveness of post- processing rules, as shown in Table 3, where Basic represents the performance achieved before post-processing, +OOV represents the results achieved after applying OOV post-processing rules, and +OOV+IV denotes the results achieved after using all the post-processing rules, including both OOV and IV rules.</S>
			<S sid ="97" ssid = "9">As the table shows, designed post-processing rules can improve both IV and OOV recall significantly.</S>
			<S sid ="98" ssid = "10">Do ma in R P F RO OV RI V L i t .93 1 .93 6 .93 4 .6 4 8 .95 2 C o m .94 8 .94 5 .94 7 .8 5 3 .96 5 M e d .92 4 .92 2 .92 3 .7 5 6 .94 4 F i n .95 3 .95 6 .95 5 .8 7 1 .96 1 Table 4: Performance of our system in the competition 2 For the test data from the domain of literature, we actually use combination of our system and forward maximum match, so we will omit the results on this test dataset in our discussion.</S>
	</SECTION>
	<SECTION title="Conclusions and Future Work. " number = "5">
			<S sid ="99" ssid = "1">We proposed an approach to refine new words recognized with the accessor variety method, and incorporated such words into a subword-based word segmenter.</S>
			<S sid ="100" ssid = "2">We found that such method could achieve high OOV recall.</S>
			<S sid ="101" ssid = "3">Moreover, we designed effective post-processing rules to further enhance the performance of our systems.</S>
			<S sid ="102" ssid = "4">Our system finally achieved satisfactory results in the competition.</S>
	</SECTION>
	<SECTION title="Acknowledgments">
			<S sid ="103" ssid = "5">This work was supported in part by the National Science Foundation of China (60873091).</S>
	</SECTION>
</PAPER>
