<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">In this paper we approach word sense disambiguation and information extraction as a unified tagging problem.</S>
		<S sid ="2" ssid = "2">The task consists of annotating text with the tagset defined by the 41 Wordnet super- sense classes for nouns and verbs.</S>
		<S sid ="3" ssid = "3">Since the tagset is directly related to Wordnet synsets, the tagger returns partial word sense disambiguation.</S>
		<S sid ="4" ssid = "4">Furthermore, since the noun tags include the standard named entity detection classes – person, location, organization, time, etc. – the tagger, as a byproduct, returns extended named entity information.</S>
		<S sid ="5" ssid = "5">We cast the problem of supersense tagging as a sequential labeling task and investigate it empirically with a discriminatively-trained Hidden Markov Model.</S>
		<S sid ="6" ssid = "6">Experimental evaluation on the main sense-annotated datasets available, i.e., Semcor and Senseval, shows considerable improvements over the best known “first-sense” baseline.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Named entity recognition (NER) is the most studied information extraction (IE) task.</S>
			<S sid ="8" ssid = "8">NER typically focuses on detecting instances of “person”, “location”, “organization” names and optionally instances of “miscellaneous” or “time” categories.</S>
			<S sid ="9" ssid = "9">The scalability of statistical NER allowed researchers to apply it successfully on large collections of newswire text, in several languages, and biomedical literature.</S>
			<S sid ="10" ssid = "10">Newswire NER performance, in terms of F-score, is in the upper 80s (Carreras et al., 2002; Florian et al., 2003), while BioNER accuracy ranges between the low 70s and 80s, depending on the data-set used for training/evaluation (Dingare et al., 2005).</S>
			<S sid ="11" ssid = "11">One shortcoming of NER is its oversimplified onto- logical model, leaving instances of other potentially informative categories unidentified.</S>
			<S sid ="12" ssid = "12">Hence, the utility of named entity information is limited.</S>
			<S sid ="13" ssid = "13">In addition, instances to be detected are mainly restricted to (sequences of) proper nouns.</S>
			<S sid ="14" ssid = "14">Word sense disambiguation (WSD) is the task of deciding the intended sense for ambiguous words in context.</S>
			<S sid ="15" ssid = "15">With respect to NER, WSD lies at the other end of the semantic tagging spectrum, since the dictionary defines tens of thousand of very specific word senses, including NER categories.</S>
			<S sid ="16" ssid = "16">Wordnet (Fellbaum, 1998)1, possibly the most used resource for WSD, defines word senses for verbs, common and proper nouns.</S>
			<S sid ="17" ssid = "17">Word sense disambiguation, at this level of granularity, is a complex task which resisted all attempts of robust broad-coverage solutions.</S>
			<S sid ="18" ssid = "18">Many distinctions are too subtle to be captured automatically, and the magnitude of the class space – several orders larger than NER’s – makes it hard to approach the problem with sophisticated, but scal- able, machine learning methods.</S>
			<S sid ="19" ssid = "19">Lastly, even if the methods would scale up, there are not enough manually tagged data, at the word sense level, for training a model.</S>
			<S sid ="20" ssid = "20">The performance of state of the art WSD systems on realistic evaluations is only comparable to the “first sense” baseline (cf.</S>
			<S sid ="21" ssid = "21">Section 5.3).</S>
			<S sid ="22" ssid = "22">Notwithstanding much research, the benefits of disambiguated lexical information for language processing are still mostly speculative.This paper presents a novel approach to broad ∗The first author is now at Yahoo!</S>
			<S sid ="23" ssid = "23">Research.</S>
			<S sid ="24" ssid = "24">The tag- ger described in this paper is free software and can be downloaded from http://www.loacnr.it/ciaramita.html.</S>
			<S sid ="25" ssid = "25">1 When referring to Wordnet, throughout the paper, we.</S>
			<S sid ="26" ssid = "26">mean Wordnet version 2.0.</S>
			<S sid ="27" ssid = "27">594 Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), pages 594–602, Sydney, July 2006.</S>
			<S sid ="28" ssid = "28">Qc 2006 Association for Computational Linguistics NOUNS SUPERSENSE NOUNS DENOTING SUPERSENSE NOUNS DENOTING act animal artifact attribute body cognition communication event feeling food group location motive acts or actions animals man-made objects attributes of people and objects body parts cognitive processes and contents communicative processes and contents natural events feelings and emotions foods and drinks groupings of people or objects spatial position goals object quantity phenomenon plant possession process person relation shape state substance time Tops natural objects (not man-made) quantities and units of measure natural phenomena plants possession and transfer of possession natural processes people relations between people or things or ideas two and three dimensional shapes stable states of affairs substances time and temporal relations abstract terms for unique beginners VERBS SUPERSENSE VERBS OF SUPERSENSE VERBS OF body change cognition communication competition consumption contact creation grooming, dressing and bodily care size, temperature change, intensifying thinking, judging, analyzing, doubting telling, asking, ordering, singing fighting, athletic activities eating and drinking touching, hitting, tying, digging sewing, baking, painting, performing emotion motion perception possession social stative weather feeling walking, flying, swimming seeing, hearing, feeling buying, selling, owning political and social activities and events being, having, spatial relations raining, snowing, thawing, thundering Table 1.</S>
			<S sid ="29" ssid = "29">Nouns and verbs supersense labels, and short description (from the Wordnet documentation).</S>
			<S sid ="30" ssid = "30">coverage information extraction and word sense disambiguation.</S>
			<S sid ="31" ssid = "31">Our goal is to simplify the disambiguation task, for both nouns and verbs, to a level at which it can be approached as any other tagging problem, and can be solved with state of the art methods.</S>
			<S sid ="32" ssid = "32">As a byproduct, this task includes and extends NER.</S>
			<S sid ="33" ssid = "33">We define a tagset based on Word- net’s lexicographers classes, or supersenses (Ciaramita and Johnson, 2003), cf.</S>
			<S sid ="34" ssid = "34">Table 1.</S>
			<S sid ="35" ssid = "35">The size of the supersense tagset allows us to adopt a structured learning approach, which takes local dependencies between labels into account.</S>
			<S sid ="36" ssid = "36">To this extent, we cast the supersense tagging problem as a sequence labeling task and train a discriminative Hidden Markov Model (HMM), based on that of Collins (2002), on the manually annotated Semcor corpus (Miller et al., 1993).</S>
			<S sid ="37" ssid = "37">In two experiments we evaluate the accuracy of the tagger on the Semcor corpus itself, and on the English “all words” Senseval 3 shared task data (Snyder and Palmer, 2004).</S>
			<S sid ="38" ssid = "38">The model outperforms remarkably the best known baseline, the first sense heuristic – to the best of our knowledge, for the first time on the most realistic “all words” evaluation setting.</S>
			<S sid ="39" ssid = "39">The paper is organized as follows.</S>
			<S sid ="40" ssid = "40">Section 2 introduces the tagset, Section 3 discusses related work and Section 4 the learning model.</S>
			<S sid ="41" ssid = "41">Section 5 reports on experimental settings and results.</S>
			<S sid ="42" ssid = "42">In Section 6 we summarize our contribution and consider directions for further research.</S>
	</SECTION>
	<SECTION title="Supersense tagset. " number = "2">
			<S sid ="43" ssid = "1">Wordnet (Fellbaum, 1998) is a broad-coverage machine-readable dictionary which includes 11,306 verbs mapped to 13,508 word senses, called synsets, and 114,648 common and proper nouns mapped to 79,689 synsets.</S>
			<S sid ="44" ssid = "2">Each noun or verb synset is associated with one of 41 broad semantic categories, in order to organize the lexicographer’s work of updating and managing the lexicon (see Table 1).</S>
			<S sid ="45" ssid = "3">Since each lexicographer category groups together many synsets they have been also called supersenses (Ciaramita and Johnson, 2003).</S>
			<S sid ="46" ssid = "4">There are 26 supersenses for nouns, 15 for verbs.</S>
			<S sid ="47" ssid = "5">This coarse-grained ontology has a number of attractive features, for the purpose of natural language processing.</S>
			<S sid ="48" ssid = "6">First, the small size of the set makes it possible to build a single tagger which has positive consequences on robustness.</S>
			<S sid ="49" ssid = "7">Second, classes, although fairly general, are easily recognizable and not too abstract or vague.</S>
			<S sid ="50" ssid = "8">More importantly, similar word senses tend to be merged together.</S>
			<S sid ="51" ssid = "9">As an example, Table 2 summarizes all senses of the noun “box”.</S>
			<S sid ="52" ssid = "10">The 10 synsets are mapped to 6 supersenses: “artifact”, “quantity”, “shape”, “state”, “plant”, and “act”.</S>
			<S sid ="53" ssid = "11">Three similar senses (2), (7) and (9), and the probably related (8), are merged in the “artifact” supersense.</S>
			<S sid ="54" ssid = "12">This process can help disambiguation because it removes sub 1.</S>
			<S sid ="55" ssid = "13">{box} (container) ”he rummaged through a box of spare parts” - n.artifact 2.</S>
			<S sid ="56" ssid = "14">{box, loge} (private area in a theater or grandstand where a small group can watch the performance) ”the royal box was empty” - n.artifact 3.</S>
			<S sid ="57" ssid = "15">{box, boxful} (the quantity contained in a box) ”he gave her a box of chocolates” - n.quantity 4.</S>
			<S sid ="58" ssid = "16">{corner, box} (a predicament from which a skillful or graceful escape is impossible) ”his lying got him into a tight corner” - n.state 5.</S>
			<S sid ="59" ssid = "17">{box} (a rectangular drawing) ”the flowchart contained many boxes” - n.shape 6.</S>
			<S sid ="60" ssid = "18">{box, boxwood} (evergreen shrubs or small trees) - n.plant 7.</S>
			<S sid ="61" ssid = "19">{box} (any one of several designated areas on a ball field where the batter or catcher or coaches are positioned) ”the umpire warned the batter to stay in the batter’s box” - n.artifact 8.</S>
			<S sid ="62" ssid = "20">{box, box seat} (the driver’s seat on a coach) ”an armed guard sat in the box with the driver” - n.artifact 9.</S>
			<S sid ="63" ssid = "21">{box} (separate partitioned area in a public place for a few people) ”the sentry stayed in his box to avoid the cold” - n.artifact 10.</S>
			<S sid ="64" ssid = "22">{box} (a blow with the hand (usually on the ear)) ”I gave him a good box on the ear” - n.act Table 2.</S>
			<S sid ="65" ssid = "23">The noun “box” in Wordnet: each line lists one synset, the set of synonyms, a definition, an optional example sentence, and the supersense label.</S>
			<S sid ="66" ssid = "24">tle distinctions, which are hard to discriminate and increase the size of the class space.</S>
			<S sid ="67" ssid = "25">One possible drawback is that senses which one might want to keep separate, e.g., the most common sense box/container (1), can be collapsed with others.</S>
			<S sid ="68" ssid = "26">One might argue that all “artifact” senses share semantic properties which differentiate them from the other senses and can support useful semantic inferences.</S>
			<S sid ="69" ssid = "27">Unfortunately, there are no general solutions to the problem of sense granularity.</S>
			<S sid ="70" ssid = "28">However, major senses identified by Wordnet are maintained at the supersense level.</S>
			<S sid ="71" ssid = "29">Hence, supersensedisambiguated words are also, at least partially, synsetdisambiguated.</S>
			<S sid ="72" ssid = "30">Since Wordnet includes both proper and common nouns, the new tagset suggests an extended notion of named entity.</S>
			<S sid ="73" ssid = "31">As well as the usual NER categories, “person”, “group”, “location”, and “time”2, supersenses include categories such as artifacts, which can be fairly frequent, but usually neglected.</S>
			<S sid ="74" ssid = "32">To a greater extent than in standard NER, research in BioNER has focused on the adoption of richer ontologies for information extraction.</S>
			<S sid ="75" ssid = "33">Genia (Ohta et al., 2002), for example, is an ontology of 46 classes – with annotated 2 The supersense category “group” is rather a superordinate of “organization” and has wider scope.</S>
			<S sid ="76" ssid = "34">corpus – designed for supporting information extraction in the molecular biology domain.</S>
			<S sid ="77" ssid = "35">In addition, there is growing interest for extracting relations between entities, as a more useful type of IE (cf.</S>
			<S sid ="78" ssid = "36">(Rosario and Hearst, 2004)).</S>
			<S sid ="79" ssid = "37">Supersense tagging is inspired by similar considerations, but in a domain-independent setting; e.g., verb supersenses can label semantic interactions between nominal concepts.</S>
			<S sid ="80" ssid = "38">The following sentence (Example 1), extracted from the data – further described in Section 5.1 – shows the information captured by the supersense tagset: (1) Clara Harrisn.person, one of the guestsn.person in the boxn.artif act, stood upv.motion and demandedv.communication watern.substance.</S>
			<S sid ="81" ssid = "39">As Example 1 shows there is more information that can be extracted from a sentence than just the names; e.g. the fact that “Clara Harris” and the following “guests” are both tagged as “person” might suggest some sort of coreferentiality, while the coordination of verbs of motion and communication, as in “stood up and demanded”, might be useful for language modeling purposes.</S>
			<S sid ="82" ssid = "40">In such a setting, structured learning methods, e.g., sequential, can help tagging by taking the senses of the neighboring words into account.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "3">
			<S sid ="83" ssid = "1">Sequential models are common in NER, POS tagging, shallow parsing, etc..</S>
			<S sid ="84" ssid = "2">Most of the work in WSD, instead, has focused on labeling each word individually, possibly revising the assignments of senses at the document level; e.g., following the “one sense per discourse” hypothesis (Gale et al., 1992).</S>
			<S sid ="85" ssid = "3">Although it seems reasonable to assume that occurrences of word senses in a sentence can be correlated, hence that structured learning methods could be successful, there has not been much work on sequential WSD.</S>
			<S sid ="86" ssid = "4">Segond et al.</S>
			<S sid ="87" ssid = "5">(1997) are possibly the first to have applied an HMM tag- ger to semantic disambiguation.</S>
			<S sid ="88" ssid = "6">Interestingly, to make the method more tractable, they also used the supersense tagset and estimated the model on Semcor.</S>
			<S sid ="89" ssid = "7">By cross-validation they show a marked improvement over the first sense baseline.</S>
			<S sid ="90" ssid = "8">However, in (Segond et al., 1997) the tagset is used differently, by defining equivalence classes of words with the same set of senses.</S>
			<S sid ="91" ssid = "9">From a similar perspective, de Loupy et al.</S>
			<S sid ="92" ssid = "10">(de Loupy et al., 1998) also investigated the potential advantages of using HMMs for disambiguation.</S>
			<S sid ="93" ssid = "11">More recently, variants of the generative HMM have been applied to WSD (Molina et al., 2002; Molina et al., 2004) and evaluated also on Senseval data, showing performance comparable to the first sense baseline.</S>
			<S sid ="94" ssid = "12">Previous work on prediction at the supersense level (Ciaramita and Johnson, 2003; Curran, 2005) has focused on lexical acquisition (nouns exclusively), thus aiming at word type classification rather than tagging.</S>
			<S sid ="95" ssid = "13">As far as applications are concerned, it has been shown that supersense information can support supervised WSD, by providing a partial disambiguation step (Ciaramita et al., 2003).</S>
			<S sid ="96" ssid = "14">In syntactic parse re-ranking supersenses have been used to build useful latent semantic features (Koo and Collins, 2005).</S>
			<S sid ="97" ssid = "15">We believe that supersense tagging has the potential to be useful, in combination with other sources of information such as part of speech, domain-specific NER models, chunking or shallow parsing, in tasks such as question answering and information extraction and retrieval, where large amounts of text need to be processed.</S>
			<S sid ="98" ssid = "16">It is also possible that this kind of shallow semantic information can help build vation/label sequence (x, y), is defined as: P (y, x) = n P (yi|yi−1)P (xi|yi)), (2) i where yi is the ith label in the sequence and xi is the ith word.</S>
			<S sid ="99" ssid = "17">In the NLP literature, a common approach is to model the conditional distribution of label sequences given the label sequences.</S>
			<S sid ="100" ssid = "18">These models have several advantages over generative models, such as not requiring questionable independence assumptions, optimizing the conditional likelihood directly and employing richer feature representations.</S>
			<S sid ="101" ssid = "19">This task can be represented as learning a discriminant function F : X × Y → IR, on a training data of observation/label sequences, where F is linear in a feature representation Φ defined over the joint input/output space F (x, y; w) = (w, Φ(x, y)).</S>
			<S sid ="102" ssid = "20">(3) Φ is a global feature representation, mapping each (x, y) pair to a vector of feature counts Φ(x, y) ∈ IRd, where d is the total number of features.</S>
			<S sid ="103" ssid = "21">This vector is given by d |y| ing more sophisticated linguistic analysis as in full syntactic parsing and semantic role labeling.</S>
			<S sid ="104" ssid = "22">Φ(x, y) = φi(yj i=1 j=1 −1, yj , x).</S>
			<S sid ="105" ssid = "23">(4)</S>
	</SECTION>
	<SECTION title="Sequence Tagging. " number = "4">
			<S sid ="106" ssid = "1">We take a sequence labeling approach to learning a model for supersense tagging.</S>
			<S sid ="107" ssid = "2">Our goal is to learn a function from input vectors, the observations from labeled data, to response variables, the supersense labels.</S>
			<S sid ="108" ssid = "3">POS tagging, shallow parsing, NPchunking and NER are all examples of sequence labeling tasks in which performance can be significantly improved by optimizing the choice of labeling over whole sequences of words, rather than individual words.</S>
			<S sid ="109" ssid = "4">The limitations of the generative approach to sequence tagging, i. e. Hidden Markov Models, have been overcome by discriminative approaches proposed in recent years (McCallum et al., 2000; Lafferty et al., 2001; Collins, 2002; Altun et al., 2003).</S>
			<S sid ="110" ssid = "5">In this paper we apply perceptron trained HMMs originally proposed in (Collins, 2002).</S>
			<S sid ="111" ssid = "6">4.1 Perceptron-trained HMM.</S>
			<S sid ="112" ssid = "7">HMMs define a probabilistic model for observation/label sequences.</S>
			<S sid ="113" ssid = "8">The joint model of an obser Each individual feature φi typically represents a morphological, contextual, or syntactic property, or also the interdependence of consecutive labels.</S>
			<S sid ="114" ssid = "9">These features are described in detail in Section 4.2.</S>
			<S sid ="115" ssid = "10">Given an observation sequence x, we make a prediction by maximizing F over the response variables: fw (x) = arg max F (x, y; w).</S>
			<S sid ="116" ssid = "11">(5) y∈Y This involves computing the Viterbi decoding with respect to the parameter vector w ∈ IRd.</S>
			<S sid ="117" ssid = "12">The complexity of the Viterbi algorithm scales linearly with the length of the sequence.</S>
			<S sid ="118" ssid = "13">There are different ways of estimating w for the described model.</S>
			<S sid ="119" ssid = "14">We use the perceptron algorithm for sequence tagging (Collins, 2002).</S>
			<S sid ="120" ssid = "15">The per- ceptron algorithm focuses on minimizing the error rate, without involving any normalization factors.</S>
			<S sid ="121" ssid = "16">This property makes it very efficient which is a desirable feature in a task dealing with a large tagset such as ours.</S>
			<S sid ="122" ssid = "17">Additionally, the performance of perceptron-trained HMMs is very competitive on a number of tasks; e.g., in shallow parsing, where Algorithm 1 Hidden Markov average perceptron algorithm.</S>
			<S sid ="123" ssid = "18">1: Initialize w0 = --0 2: for t = 1...., T do 3: Choose xi 4: Compute yˆ = arg maxy∈Y F (x , y; w) Word features (1) are morphologically simplified using the morphological functions of the Word- net library.</S>
			<S sid ="124" ssid = "19">The first sense feature (2) is the label predicted for xi by the baseline model, cf.</S>
			<S sid ="125" ssid = "20">Section 5.3.</S>
			<S sid ="126" ssid = "21">POS labels (4) were generated using Brants’ TnT tagger (Brants, 2002).</S>
			<S sid ="127" ssid = "22">POS features [0] extract the first character from 5: if yi /= yˆ then of the form posi 6: wt+1 ← wt + Φ(xi, yi) − Φ(xi, yˆ) 7: end if 8: w = 1 2:t wt 9: end for 10: return w the perceptron performance is comparable to that of Conditional Random Field models (Sha and Pereira, 2003), The tendency to overfit of the per- ceptron can be mitigated in a number of ways including regularization and voting.</S>
			<S sid ="128" ssid = "23">Here we apply averaging and straightforwardly extended Collins algorithm, summarized in Algorithm 1.</S>
			<S sid ="129" ssid = "24">4.2 Features.</S>
			<S sid ="130" ssid = "25">We used the following combination of spelling/morphological and contextual features.</S>
			<S sid ="131" ssid = "26">For each observed word xi in the data φ extracts the following features: 1.</S>
			<S sid ="132" ssid = "27">Words: xi, xi−1, xi−2, xi+1, xi+2;.</S>
			<S sid ="133" ssid = "28">2.</S>
			<S sid ="134" ssid = "29">First sense: supersense baseline prediction.</S>
			<S sid ="135" ssid = "30">for xi, fs(xi), cf.</S>
			<S sid ="136" ssid = "31">Section 5.3; 3.</S>
			<S sid ="137" ssid = "32">Combined (1) and (2): xi + fs(xi);.</S>
			<S sid ="138" ssid = "33">4.</S>
			<S sid ="139" ssid = "34">Pos: posi (the POS of xi), posi−1, posi−2,.</S>
			<S sid ="140" ssid = "35">posi+1, posi+2, posi[0], posi−1[0], posi−2[0], posi+1[0], posi+2[0], pos commi if xi’s POS tags is “NN” or “NNS” (common nouns), and pos propi if xi’s POS is “NNP” or “NNPS” (proper nouns);</S>
	</SECTION>
	<SECTION title="Word shape: sh(xi),  sh(xi−1),  sh(xi−2),. " number = "5">
			<S sid ="141" ssid = "1">sh(xi+1), sh(xi+2), where sh(xi) is as described below.</S>
			<S sid ="142" ssid = "2">In addition shi = low if the first character of xi is lowercase, shi = cap brk if the first character of xi is uppercase and xi−1 is a full stop, question or exclamation mark, or xi is the first word of the sentence, shi = cap nobrk otherwise;</S>
	</SECTION>
	<SECTION title="Previous label: supersense label yi−1.. " number = "6">
			<S sid ="143" ssid = "1">the POS label, thus providing a simplified repre sentation of the POS tag.</S>
			<S sid ="144" ssid = "2">Finally, word shape features (5) are regular expression-like transformation in which each character c of a string s is substituted with X if c is uppercase, if lowercase, c is substituted with x, if c is a digit it is substituted with d and left as it is otherwise.</S>
			<S sid ="145" ssid = "3">In addition each sequence of two or more identical characters c is substituted with c∗.</S>
			<S sid ="146" ssid = "4">For example, for s = “Merrill Lynch&amp; Co.”, sh(s) = Xx ∗ Xx ∗ &amp;Xx..</S>
			<S sid ="147" ssid = "5">Exploratory experiments with richer feature sets, including syntactic information, affixes, and topic labels associated with words, did not result in improvements in terms of performance.</S>
			<S sid ="148" ssid = "6">While more experiments are needed to investigate the usefulness of other sources of information, the feature set described above, while basic, offers good generalization properties.</S>
			<S sid ="149" ssid = "7">5 Experiments.</S>
			<S sid ="150" ssid = "8">5.1 Data.</S>
			<S sid ="151" ssid = "9">We experimented with the following data-sets3.</S>
			<S sid ="152" ssid = "10">The Semcor corpus (Miller et al., 1993), a fraction of the Brown corpus (Kuc˘era and Francis, 1967) which has been manually annotated with Wordnet synset labels.</S>
			<S sid ="153" ssid = "11">Named entities of the categories “person”, “location” and “group” are also annotated.</S>
			<S sid ="154" ssid = "12">The original annotation with Wordnet 1.6 synset IDs has been converted to the most recent version 2.0 of Wordnet.</S>
			<S sid ="155" ssid = "13">Semcor is divided in three parts: “brown1” and “brown2”, here referred to as “SEM”, in which nouns, verbs, adjectives and adverbs are annotated.</S>
			<S sid ="156" ssid = "14">In addition, the section “brownv”, “SEMv” here, contains annotations only for verbs.</S>
			<S sid ="157" ssid = "15">We also experimented with the Senseval3 English all-words tasks data (Snyder and Palmer, 2004), here called “SE3”.</S>
			<S sid ="158" ssid = "16">The Senseval all-words task evaluates the performance of WSD systems on all open class words in complete documents.</S>
			<S sid ="159" ssid = "17">The Senseval3 data consists of two Wall Street Journal Articles, “wsj 1778” and 3 These datasets are available in a consistent format and can be downloaded from http://www.cs.unt.edu/ rada/downloads.html Dataset Counts SE3 SEM SEMv Sentences Tokens Supersenses Verbs Nouns Avgpoly-N-WS Avgpoly-N-SS Avgpoly-V-WS Avgpoly-V-SS 300 20,138 17,038 5,630 434,774 385,546 1,617 135,135 40,911 725 47,710 40,911 892 87,425 0 4.66 4.41 4.33 2.86 2.75 2.66 11.17 10.87 11.05 4.20 4.11 4.16 Table 3.</S>
			<S sid ="160" ssid = "18">Statistics of the datasets.</S>
			<S sid ="161" ssid = "19">The row “Super- senses” lists the number of instances of supersense labels, partitioned, in the following two rows, between verb and noun supersense labels.</S>
			<S sid ="162" ssid = "20">The lowest four rows summarize average polysemy figures at the synset and supersense level for both nouns and verbs.</S>
			<S sid ="163" ssid = "21">“wsj 1695”, and a fiction excerpt, “cl 23”, from the unannotated portion of the Brown corpus.</S>
			<S sid ="164" ssid = "22">Table 3 summarizes a few statistics about the composition of the datasets.</S>
			<S sid ="165" ssid = "23">The four lower rows report the average polysemy of nouns (“N”) and verbs (“V”), in each dataset, both at the synset level (“WS”) and supersense (“SS”) level.</S>
			<S sid ="166" ssid = "24">The average number of senses decreases significantly when the more general sense inventory is considered.</S>
			<S sid ="167" ssid = "25">We substituted the corresponding supersense to each noun and verb synset in all three data-sets: SEM, SEMv and SE3.</S>
			<S sid ="168" ssid = "26">All other tokens were labeled “0”.</S>
			<S sid ="169" ssid = "27">The supersense label “noun.Tops” refers to 45 synsets which lie at the very top of the Wordnet noun hierarchy.</S>
			<S sid ="170" ssid = "28">Some of these synsets are expressed by very general nouns such as “biont”, “benthos”, “whole”, and “nothing”.</S>
			<S sid ="171" ssid = "29">However, others undoubtedly refer to other super- senses, for which they provide the label, such as “food”, “person”, “plant” or “animal”.</S>
			<S sid ="172" ssid = "30">Since these nouns tend to be fairly frequent, it is confusing and inconsistent to label them “noun.Tops”; e.g., nouns such as “chowder” and “Swedish meatball” would be tagged as “noun.food”, but the noun “food” would be tagged as “noun.Tops”.</S>
			<S sid ="173" ssid = "31">For this reason, in all obvious cases, we substituted the “noun.Tops” label with the more specific super- sense label for the noun4.</S>
			<S sid ="174" ssid = "32">The SEMv dataset only includes supersense labels for verbs.</S>
			<S sid ="175" ssid = "33">In order to avoid unwanted false negatives, that is, thousands of nouns labeled “0”, we applied the following procedure.</S>
			<S sid ="176" ssid = "34">Rather than using the full sentences from the SEMv dataset, from each sentence we generated the fragments including a verb but no common or proper nouns; e.g., from a sentence such as “Karns’ ruling per- tainedverb.stative to eight of the 10 cases.” only the fragment “pertainedverb.stative to eight of the 10” is extracted and used for training.</S>
			<S sid ="177" ssid = "35">Sometimes more than one label is assigned to a word, in all data-sets.</S>
			<S sid ="178" ssid = "36">In these cases we adopted the heuristic of only using the first label in the data as the correct synset/supersense.</S>
			<S sid ="179" ssid = "37">We leave the extension of the tagger to the multilabel case for future research.</S>
			<S sid ="180" ssid = "38">As for now, we can expect that this solution will simply lower, somewhat, both the baseline and the tagger performance.</S>
			<S sid ="181" ssid = "39">Finally, we adopted a beginning (B) and continuation of entity (I) plus no label (0), encoding; i.e., the actual class space defines 83 labels.</S>
			<S sid ="182" ssid = "40">5.2 Setup.</S>
			<S sid ="183" ssid = "41">The supersense tagger was trained on the Semcor datasets SEM and SEMv.</S>
			<S sid ="184" ssid = "42">The only free parameter to set in evaluation is the number of iterations to perform T (cf.</S>
			<S sid ="185" ssid = "43">Algorithm 1).</S>
			<S sid ="186" ssid = "44">We evaluated the model’s accuracy on Semcor by splitting the SEM data randomly in training, development and evaluation.</S>
			<S sid ="187" ssid = "45">In a 5-fold cross-validation setup the tagger was trained on 4/5 of the SEM data, the remaining data was split in two halves, one used to fix T the other for evaluating performance on test.</S>
			<S sid ="188" ssid = "46">The full SEMv data was always added to the training portion of SEM.</S>
			<S sid ="189" ssid = "47">We also evaluated the model on the Senseval3 data, using the same value for T set by cross-validation on the SEM data5.</S>
			<S sid ="190" ssid = "48">The ordering of the training instances is randomized across different runs, therefore the algorithm outputs different results after each run, even if the evaluation set is fixed, as is the case for the Senseval evaluation.</S>
			<S sid ="191" ssid = "49">The variance in the results on the SE3 data was measured in this way.</S>
			<S sid ="192" ssid = "50">5.3 Baseline tagger.</S>
			<S sid ="193" ssid = "51">The first sense baseline is the supersense of the most frequent synset for a word, according to Wordnet’s sense ranking.</S>
			<S sid ="194" ssid = "52">This baseline is very competitive in WSD tasks, and it is extremely hard to improve upon even slightly.</S>
			<S sid ="195" ssid = "53">In fact, the baseline has been proposed as a good alternative to WSD 4 The nouns which are left with the “noun.Top” label are:.</S>
			<S sid ="196" ssid = "54">entity, thing, anything, something, nothing, object, living thing, organism, benthos, heterotroph, life, and biont.</S>
			<S sid ="197" ssid = "55">5 On average T is equal to 12 times the size of the training.</S>
			<S sid ="198" ssid = "56">data.</S>
			<S sid ="199" ssid = "57">Semcor Senseval3 Method Recall Precision F-score [σ] Recall Precision F-score [σ] Rand Baseline SupersenseTagger 42.99 38.17 40.44 69.25 63.90 66.47 77.71 76.65 77.18 0.45 42.09 35.84 38.70 68.65 60.10 64.09 73.74 67.60 70.54 0.21 Table 4.</S>
			<S sid ="200" ssid = "58">Summary of results for random and first sense baselines and supersense tagger, σ is the standard error computed on the five trials results.</S>
			<S sid ="201" ssid = "59">altogether (cf.</S>
			<S sid ="202" ssid = "60">(McCarthy et al., 2004)).</S>
			<S sid ="203" ssid = "61">For this reason we include the first sense prediction as one of the features of our tagging model.</S>
			<S sid ="204" ssid = "62">We apply the heuristic as follows.</S>
			<S sid ="205" ssid = "63">First, in each sentence, we identify the longest sequence which has an entry in Wordnet as either noun or verb.</S>
			<S sid ="206" ssid = "64">We carry out this step using the Wordnet’s library functions, which perform also morphological simplification.</S>
			<S sid ="207" ssid = "65">Hence, in Example 1 the entry “stand up” is detected, although also “stand” has an entry in Wordnet.</S>
			<S sid ="208" ssid = "66">Then, each word identified in this way is assigned its most frequent sense – the only one available if the word is unambiguous.</S>
			<S sid ="209" ssid = "67">To reduce the number of candidate supersenses we distinguish between common and proper nouns; e.g. “Savannah” (city/river) is distinguished from “savannah” (grassland).</S>
			<S sid ="210" ssid = "68">This method improves slightly the accuracy of the baseline which does not distinguish between different types of nouns.</S>
			<S sid ="211" ssid = "69">5.4 Results.</S>
			<S sid ="212" ssid = "70">Table 4 summarizes overall performance6.</S>
			<S sid ="213" ssid = "71">The first line shows the accuracy of a baseline which assigns possible supersenses of identified words at random.</S>
			<S sid ="214" ssid = "72">The second line shows the performance of the first sense baseline (cf.</S>
			<S sid ="215" ssid = "73">Section 5.3), the marked difference between the two is a measure of the robustness of the first sense heuristic.</S>
			<S sid ="216" ssid = "74">On the Semcor data the tagger improves over the baseline by 10.71%, 31.19% error reduction, while on Senseval3 the tagger improves over the baseline by 6.45%, 17.96% error reduction.</S>
			<S sid ="217" ssid = "75">We can put these results in context, although indirectly, by comparison with the results of the Senseval 3 all words task systems.</S>
			<S sid ="218" ssid = "76">There, with a baseline of 62.40%, only 4 out of 26 systems performed above the baseline, with the two best systems (Mihalcea and Faruque, 2004; Decadt et al., 2004) achieving an F-score of 65.2% (2.8% improvement, 7.45% error reduction).</S>
			<S sid ="219" ssid = "77">The system based on the HMM tagger (Molina et al., 2004), 6 Scoring was performed with a re-implementation of the.</S>
			<S sid ="220" ssid = "78">“conlleval” script . achieved an F-score of 60.9%.</S>
			<S sid ="221" ssid = "79">The supersense tagger improves mostly on precision, while also improving on recall.</S>
			<S sid ="222" ssid = "80">Overall the tagger achieves F-scores between 70.5 and 77.2%.</S>
			<S sid ="223" ssid = "81">If we compare these figures with the accuracy of NER taggers the results are very encouraging.</S>
			<S sid ="224" ssid = "82">Given the considerably larger – one order of magnitude – class space some loss has to be expected.</S>
			<S sid ="225" ssid = "83">Experiments with augmented tagsets in the biomedical domain also show performance loss with respect to smaller tagsets; e.g., Kazama et al.</S>
			<S sid ="226" ssid = "84">(2002) report an F- score of 56.2% on a tagset of 25 Genia classes, compared to the 75.9% achieved on the simplest binary case.</S>
			<S sid ="227" ssid = "85">The sequence fragments from SEMv contribute about 1% F-score improvement.</S>
			<S sid ="228" ssid = "86">Table 5 focuses on subsets of the evaluation.</S>
			<S sid ="229" ssid = "87">The upper part summarizes the results on Semcor for the classes comparable to standard NER’s: “person”, “group”, “location” and “time”.</S>
			<S sid ="230" ssid = "88">However, these categories here are composed of common nouns as well as proper names/named entities.</S>
			<S sid ="231" ssid = "89">On this four tags the tagger achieves an average 82.46% F-score, not too far from NER results.</S>
			<S sid ="232" ssid = "90">The lower portion of Table 5 summarizes the results on the five most frequent noun and verb supersense labels on the Senseval3 data, providing more specific evidence for the supersense tagger’s disambiguation accuracy.</S>
			<S sid ="233" ssid = "91">The tagger outperforms the first sense baseline on all categories, with the exception of “verb.cognition” and “noun.person”.</S>
			<S sid ="234" ssid = "92">The latter case has a straightforward explanation, named entities (e.g., “Phil Haney”, “Chevron” or “Marina District”) are not annotated in the Sense- val data, while they are in Semcor.</S>
			<S sid ="235" ssid = "93">Hence the tag- ger learns a different model for nouns than the one used to annotate the Senseval data.</S>
			<S sid ="236" ssid = "94">Because of this discrepancy the tagger tends to return false positives for some categories.</S>
			<S sid ="237" ssid = "95">In fact, the other noun categories on which the tagger performs poorly in SE3 are “group” and “location” (baseline 52.10 tagger 44.72 and baseline 47.62% tagger 47.54% F-score).</S>
			<S sid ="238" ssid = "96">Naturally, the lower performance on Senseval is also explained by the fact that the eval NER supersenses in Semcor SupersenseTagger Baseline Supersense # Supersenses R P F R P F n.person n.group n.location n.time 1526 665 459 412 92.04 87.94 75.38 79.56 77.21 75.37 88.36 84.30 89.94 77.40 76.25 86.27 56.29 77.35 62.42 66.81 67.88 63.33 78.26 83.88 65.16 64.54 65.53 80.98 5 most frequent verb supersenses in Senseval3 Supersense # Supersenses R P F R P F v.stative v.communication v.motion v.cognition v.change 184 88 81 61 60 80.33 81.30 77.53 83.36 69.63 64.54 73.44 67.91 68.33 67.47 80.81 80.33 66.98 70.56 67.89 72,83 63.81 71.91 74.42 58.02 60.26 75.41 71.87 56.67 57.63 68.02 73.14 59.12 73.60 57.14 5 most frequent noun supersenses in Senseval3 Supersense # Supersenses R P F R P F n.person n.artifact n.act n.cognition n.event 148 131 96 67 60 92.24 60.49 80.91 77.73 61.46 72.37 45.80 52.87 70.33 89.83 73.06 79.29 66.45 49.06 78.87 89.12 79.39 74.24 75.97 58.33 65.12 49.28 46.58 71.67 75.44 83.97 75.10 61.54 47.89 73.50 Table 5.</S>
			<S sid ="239" ssid = "97">Summary of results of baseline and tagger on selected subsets of labels: NER categories evaluated on Semcor (upper section), and 5 most frequent verb (middle) and noun (bottom) categories evaluated on Senseval.</S>
			<S sid ="240" ssid = "98">uation comes from different sources than training.</S>
			<S sid ="241" ssid = "99">6 Conclusions.</S>
			<S sid ="242" ssid = "100">In this paper we presented a novel approach to broad-coverage word sense disambiguation and information extraction.</S>
			<S sid ="243" ssid = "101">We defined a tagset based on Wordnet supersenses, a much simpler and general semantic model than Wordnet which, however, preserves significant polysemy information and includes standard named entity recognition categories.</S>
			<S sid ="244" ssid = "102">We showed that in this framework it is possible to perform accurate broad-coverage tagging with state of the art sequence learning methods.</S>
			<S sid ="245" ssid = "103">The tagger considerably outperformed the most competitive baseline on both Semcor and Senseval data.</S>
			<S sid ="246" ssid = "104">To the best of our knowledge the results on Senseval data provide the first convincing evidence of the possibility of improving by considerable amounts over the first sense baseline.</S>
			<S sid ="247" ssid = "105">We believe both the tagset and the structured learning approach contribute to these results.</S>
			<S sid ="248" ssid = "106">The simplified representation obviously helps by reducing the number of possible senses for each word (cf.</S>
			<S sid ="249" ssid = "107">Table 3).</S>
			<S sid ="250" ssid = "108">Interestingly, the relative improvement in performance is not as large as the relative reduction in polysemy.</S>
			<S sid ="251" ssid = "109">This indicates that sense granularity is only one of the problems in WSD.</S>
			<S sid ="252" ssid = "110">More needs to be understood concerning sources of information, and processes, that affect word sense selection in context.</S>
			<S sid ="253" ssid = "111">As far as the tag- ger is concerned, we applied the simplest feature representation, more sophisticated features can be used, e.g., based on kernels, which might contribute significantly by allowing complex feature combinations.</S>
			<S sid ="254" ssid = "112">These results also suggest new directions of research within this model.</S>
			<S sid ="255" ssid = "113">In particular, the labels occurring in each sequence tend to coincide with predicates (verbs) and arguments (nouns and named entities).</S>
			<S sid ="256" ssid = "114">A sequential dependency model might not be the most accurate at capturing the grammatical dependencies between these elements.</S>
			<S sid ="257" ssid = "115">Other conditional models, e.g., designed on head to head, or similar, dependencies could prove more appropriate.</S>
			<S sid ="258" ssid = "116">Another interesting issue is the granularity of the tagset.</S>
			<S sid ="259" ssid = "117">Supersenses seem more practical then synsets for investigating the impact of broad- coverage semantic tagging, but they define a very simplistic ontological model.</S>
			<S sid ="260" ssid = "118">A natural evolution of this kind of approach might be one which starts by defining a semantic model at an intermediate level of abstraction (cf.</S>
			<S sid ="261" ssid = "119">(Ciaramita et al., 2005)).</S>
	</SECTION>
</PAPER>
