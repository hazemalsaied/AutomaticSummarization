<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">In this paper we argue that comparative evaluation in anaphora resolution has to be performed using the same pre-processing tools and on the same set of data.</S>
		<S sid ="2" ssid = "2">The paper proposes an evaluation environment for comparing anaphora resolution algorithms which is illustrated by presenting the results of the comparative evaluation of three methods on the basis of several evaluation measures.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="3" ssid = "3">The evaluation of any NLP algorithm or system should indicate not only its efficiency or performance, but should also help us discover what a new approach brings to the current state of play in the field.</S>
			<S sid ="4" ssid = "4">To this end, a comparative evaluation with other well-known or similar approaches would be highly desirable.</S>
			<S sid ="5" ssid = "5">We have already voiced concern (Mitkov, 1998a), (Mitkov, 2000b) that the evaluation of anaphora resolution algorithms and systems is bereft of any common ground for comparison due not only to the difference of the evaluation data, but also due to the diversity of pre-processing tools employed by each anaphora resolution system.</S>
			<S sid ="6" ssid = "6">The evaluation picture would not be accurate even if we compared anaphora resolution systems on the basis of the same data since the pre-processing errors which would be carried over to the systems’ outputs might vary.</S>
			<S sid ="7" ssid = "7">As a way forward we have proposed the idea of the evaluation workbench (Mitkov, 2000b) - an open-ended architecture which allows the incorporation of different algorithms and their comparison on the basis of the same pre-processing tools and the same data.</S>
			<S sid ="8" ssid = "8">Our paper discusses a particular configuration of this new evaluation environment incorporating three approaches sharing a common ”knowledge-poor philosophy”: Kennedy and Boguraev’s (1996) parser-free algorithm, Baldwin’s (1997) CogNiac and Mitkov’s (1998b) knowledge-poor approach.</S>
	</SECTION>
	<SECTION title="The evaluation workbench for. " number = "2">
			<S sid ="9" ssid = "1">anaphora resolution In order to secure a ”fair”, consistent and accurate evaluation environment, and to address the problems identified above, we have developed an evaluation workbench for anaphora resolution which allows the comparison of anaphora resolution approaches sharing common principles (e.g. similar pre-processing or resolution strategy).</S>
			<S sid ="10" ssid = "2">The workbench enables the ”plugging in” and testing of anaphora resolution algorithms on the basis of the same pre-processing tools and data.</S>
			<S sid ="11" ssid = "3">This development is a time-consuming task, given that we have to re-implement most of the algorithms, but it is expected to achieve a clearer assessment of the advantages and disadvantages of the different approaches.</S>
			<S sid ="12" ssid = "4">Developing our own evaluation environment (and even reimplementing some of the key algorithms) also alleviates the impracticalities associated with obtaining the codes of original programs.</S>
			<S sid ="13" ssid = "5">Another advantage of the evaluation workbench is that all approaches incorporated can operate either in a fully automatic mode or on human annotated corpora.</S>
			<S sid ="14" ssid = "6">We believe that this is a consistent way forward because it would not be fair to compare the success rate of an approach which operates on texts which are perfectly analysed by humans, with the success rate of an anaphora resolution system which has to process the text at different levels before activating its anaphora resolution algorithm.</S>
			<S sid ="15" ssid = "7">In fact, the evaluations of many anaphora resolution approaches have focused on the accuracy of resolution algorithms and have not taken into consideration the possible errors which inevitably occur in the pre-processing stage.</S>
			<S sid ="16" ssid = "8">In the real- world, fully automatic resolution must deal with a number of hard pre-processing problems such as morphological analysis/POS tagging, named entity recognition, unknown word recognition, NP extraction, parsing, identification of pleonastic pronouns, selectional constraints, etc. Each one of these tasks introduces errors and thus contributes to a drop in the performance of the anaphora resolution system.1 As a result, the vast majority of anaphora resolution approaches rely on some kind of pre-editing of the text which is fed to the resolution algorithm, and some of the methods have only been manually simulated.</S>
			<S sid ="17" ssid = "9">By way of illustration, Hobbs’ naive approach (1976; 1978) was not implemented in its original version.</S>
			<S sid ="18" ssid = "10">In (Dagan and Itai, 1990; Dagan and Itai, 1991; Aone and Bennett, 1995; Kennedy and Boguraev, 1996) pleonastic pronouns are removed manually2 , whereas in (Mitkov, 1998b; Ferrandez et al., 1997) the outputs of the part-of- speech tagger and the NP extractor/ partial parser are post-edited similarly to Lappin and Leass (1994) where the output of the Slot Unification Grammar parser is corrected manually.</S>
			<S sid ="19" ssid = "11">Finally, Ge at al’s (1998) and Tetrault’s systems (1999) 1 For instance, the accuracy of tasks such as robust parsing and identification of pleonastic pronouns is far below 100% See (Mitkov, 2001) for a detailed discussion.</S>
			<S sid ="20" ssid = "12">2 In addition, Dagan and Itai (1991) undertook additional pre-editing such as the removal of sentences for which the parser failed to produce a reasonable parse, cases where the antecedent was not an NP etc.; Kennedy and Boguraev (1996) manually removed 30 occurrences of pleonastic make use of annotated corpora and thus do not perform any pre-processing.</S>
			<S sid ="21" ssid = "13">One of the very few systems3 that is fully automatic is MARS, the latest version of Mitkov’s knowledge-poor approach implemented by Evans.</S>
			<S sid ="22" ssid = "14">Recent work on this project has demonstrated that fully automatic anaphora resolution is more difficult than previous work has suggested (Ora˘san et al., 2000).</S>
			<S sid ="23" ssid = "15">2.1 Pre-processing tools.</S>
			<S sid ="24" ssid = "16">Parser The current version of the evaluation workbench employs one of the high performance ”super-taggers” for EnglishConexor’s FDG Parser (Tapanainen and Ja¨rvinen, 1997).</S>
			<S sid ="25" ssid = "17">This super-tagger gives morphological information and the syntactic roles of words (in most of the cases).</S>
			<S sid ="26" ssid = "18">It also performs a surface syntactic parsing of the text using dependency links that show the head-modifier relations between words.</S>
			<S sid ="27" ssid = "19">This kind of information is used for extracting complex NPs.</S>
			<S sid ="28" ssid = "20">In the table below the output of the FDG parser run over the sentence: ”This is an input file.” is shown.</S>
			<S sid ="29" ssid = "21">1 This this subj:&gt;2 @SUBJ PRON SG.</S>
			<S sid ="30" ssid = "22">2 is be main:&gt;0 @+FMAINV V 3 an an det:&gt;5 @DN&gt; DET SG 4 input input attr:&gt;5 @A&gt; N SG 5 file file comp:&gt;2 @PCOMPL-S N SG $.</S>
			<S sid ="31" ssid = "23">$&lt;s&gt; Example 1: FDG output for the text This is an input file.</S>
			<S sid ="32" ssid = "24">Noun phrase extractor Although FDG does not identify the noun phrases in the text, the dependencies established between words have played an important role in building a noun phrase extractor.</S>
			<S sid ="33" ssid = "25">In the example above, the dependency relations help identifying the sequence ”an input file”.</S>
			<S sid ="34" ssid = "26">Every noun phrase is associated with some features as identified by FDG (number, part of speech, grammatical function) and also the linear position of the verb that they are arguments of, and the number of the sentence they appear in. The result of the NP pronouns (which could not be recognised by their pleonastic recogniser) as well as 6 occurrences of it which referred to a VP or prepositional constituent.</S>
	</SECTION>
	<SECTION title="Apart from MUC coreference resolution systems which. " number = "3">
			<S sid ="35" ssid = "1">operated in a fully automatic mode.</S>
			<S sid ="36" ssid = "2">extractor is an XML annotated file.</S>
			<S sid ="37" ssid = "3">We chose this format for several reasons: it is easily read, it allows a unified treatment of the files used for training and of those used for evaluation (which are already annotated in XML format) and it is also useful if the file submitted for analysis to FDG already contains an XML annotation; in the latter case, keeping the FDG format together with the previous XML annotation would lead to a more difficult processing of the input file.</S>
			<S sid ="38" ssid = "4">It also keeps the implementation of the actual workbench independent of the pre-processing tools, meaning that any shallow parser can be used instead of FDG, as long as its output is converted to an agreed XML format.</S>
			<S sid ="39" ssid = "5">An example of the overall output of the pre- processing tools is given below.</S>
			<S sid ="40" ssid = "6">&lt;P&gt;&lt;S&gt;&lt;w ID=0 SENT=0 PAR=1 LEMMA=&quot;this&quot; DEP=&quot;2&quot; GFUN=&quot;SUBJ&quot; POS=&quot;PRON&quot; NR=&quot;SG&quot;&gt;This&lt;/w&gt;&lt;w ID=1 SENT=0 PAR=1 LEMMA=&quot;be&quot; DEP=&quot;0&quot; GFUN=&quot;+FMAINV&quot; POS=&quot;V&quot;&gt; is &lt;/w&gt;&lt;COREF ID=&quot;ref1&quot;&gt;&lt;NP&gt; &lt;w ID=2 SENT=0 PAR=1 LEMMA=&quot;an&quot; DEP=&quot;5&quot; GFUN=&quot;DN&quot; POS=&quot;DET&quot; NR=&quot;SG&quot;&gt;an &lt;/w&gt; &lt;w ID=3 SENT=0 PAR=1 LEMMA=&quot;input&quot; DEP=&quot;5&quot; GFUN=&quot;A&quot; POS=&quot;N&quot; NR=&quot;SG&quot;&gt;input&lt;/w&gt;&lt;w ID=4 SENT=0 PAR=1 LEMMA=&quot;file&quot; DEP=&quot;2&quot; GFUN=&quot;PCOMPL&quot; POS=&quot;N&quot; NR=&quot;SG&quot;&gt;file&lt;/w&gt; &lt;/NP&gt;&lt;/COREF&gt;&lt;w ID=5 SENT=0 PAR=1 LEMMA=&quot;.&quot; POS=&quot;PUNCT&quot;&gt;.&lt;/w&gt; &lt;/s&gt; &lt;s&gt;&lt;COREF ID=&quot;ref2&quot; REF=&quot;ref1&quot;&gt;&lt;NP&gt;&lt;w ID=0 SENT=1 PAR=1 LEMMA=&quot;it&quot; DEP=&quot;2&quot; GFUN=&quot;SUBJ&quot; POS=&quot;PRON&quot;&gt; It &lt;/w&gt;&lt;/NP&gt;&lt;/COREF&gt; &lt;w ID=1 SENT=1 PAR=1 LEMMA=&quot;be&quot; DEP=&quot;3&quot; GFUN=&quot;+FAUXV&quot; POS=&quot;V&quot;&gt;is &lt;/w&gt;&lt;w ID=2 SENT=1 PAR=1 LEMMA=&quot;use&quot; DEP=&quot;0&quot; GFUN=&quot;-FMAINV&quot; POS=&quot;EN&quot;&gt; used&lt;/w&gt;&lt;w ID=3 SENT=1 PAR=1 LEMMA=&quot;for&quot; DEP=&quot;3&quot; GFUN=&quot;ADVL&quot; POS=&quot;PREP&quot;&gt;for&lt;/w&gt; &lt;NP&gt;&lt;w ID=4 SENT=1 PAR=1 LEMMA=&quot;evaluation&quot; DEP=&quot;4&quot; GFUN=&quot;PCOMP&quot; POS=&quot;N&quot;&gt; evaluation&lt;/w&gt;&lt;/NP&gt; &lt;w ID=5 SENT=0 PAR=1 LEMMA=&quot;.&quot; POS=&quot;PUNCT&quot;&gt;.&lt;/w&gt;&lt;/s&gt;&lt;/p&gt; Example 2: File obtained as result of the pre- processing stage (includes previous coreference annotation) for the text This is an input file.</S>
			<S sid ="41" ssid = "7">It is used for evaluation.</S>
			<S sid ="42" ssid = "8">2.2 Shared resources.</S>
			<S sid ="43" ssid = "9">The three algorithms implemented receive as input a representation of the input file.</S>
			<S sid ="44" ssid = "10">This representation is generated by running an XML parser over the file resulting from the pre-processing phase.</S>
			<S sid ="45" ssid = "11">A list of noun phrases is explicitly kept in the file representation.</S>
			<S sid ="46" ssid = "12">Each entry in this list consists of a record containing: • the word form • the lemma of the word or of the head of the noun phrase • the starting position in the text • the ending position in the text • the part of speech • the grammatical function • the index of the sentence that contains the referent • the index of the verb whose argument this referent is Each of the algorithms implemented for the workbench enriches this set of data with information relevant to its particular needs.</S>
			<S sid ="47" ssid = "13">Kennedy and Boguraev (1996), for example, need additional information about whether a certain discourse referent is embedded or not, plus a pointer to the COREF class associated to the referent, while Mitkov’s approach needs a score associated to each noun phrase.</S>
			<S sid ="48" ssid = "14">Apart from the pre-processing tools, the implementation of the algorithms included in the workbench is built upon a common programming interface, which allows for some basic processing functions to be shared as well.</S>
			<S sid ="49" ssid = "15">An example is the morphological filter applied over the set of possible antecedents of an anaphor.</S>
			<S sid ="50" ssid = "16">2.3 Usability of the workbench.</S>
			<S sid ="51" ssid = "17">The evaluation workbench is easy to use.</S>
			<S sid ="52" ssid = "18">The user is presented with a friendly graphical interface that helps minimise the effort involved in preparing the tests.</S>
			<S sid ="53" ssid = "19">The only information she/he has to enter is the address (machine and directory) of the FDG parser and the file annotated with coreferential links to be processed.</S>
			<S sid ="54" ssid = "20">The results can be either specific to each method or specific to the file submitted for processing, and are displayed separately for each method.</S>
			<S sid ="55" ssid = "21">These include lists of the pronouns and their identified antecedents in the context they appear as well as information as to whether they were correctly solved or not.</S>
			<S sid ="56" ssid = "22">In addition, the values obtained for the four evaluation measures (see section 3.2) and several statistical results characteristic of each method (e.g. average number of candidates for antecedents per anaphor) are computed.</S>
			<S sid ="57" ssid = "23">Separately, the statistical values related to the annotated file are displayed in a table.</S>
			<S sid ="58" ssid = "24">We should note that (even though this is not the intended usage of the workbench) a user can also submit unannotated files for processing.</S>
			<S sid ="59" ssid = "25">In this case, the algorithms display the antecedent found for each pronoun, but no automatic evaluation can be carried out due to the lack of annotated testing data.</S>
			<S sid ="60" ssid = "26">2.4 Envisaged extensions.</S>
			<S sid ="61" ssid = "27">While the workbench is based on the FDG shallow parser at the moment, we plan to update the environment in such a way that two different modes will be available: one making use of a shallow parser (for approaches operating on partial analysis) and one employing a full parser (for algorithms making use of full analysis).</S>
			<S sid ="62" ssid = "28">Future versions of the workbench will include access to semantic information (WordNet) to accommodate approaches incorporating such types of knowledge.</S>
			<S sid ="63" ssid = "29">3 Comparative evaluation of.</S>
			<S sid ="64" ssid = "30">knowledge-poor anaphora resolution approaches The first phase of our project included comparison of knowledge-poorer approaches which share a common pre-processing philosophy.</S>
			<S sid ="65" ssid = "31">We selected for comparative evaluation three approaches extensively cited in the literature: Kennedy and Boguraev’s parser- free version of Lappin and Leass’ RAP (Kennedy and Boguraev, 1996), Baldwin’s pronoun resolution method (Baldwin, 1997) and Mitkov’s knowledge-poor pronoun resolution approach (Mitkov, 1998b).</S>
			<S sid ="66" ssid = "32">All three of these algorithms share a similar pre-processing methodology: they do not rely on a parser to process the input and instead use POS taggers and NP extractors; nor do any of the methods make use of semantic or real-world knowledge.</S>
			<S sid ="67" ssid = "33">We re-implemented all three algorithms based on their original description and personal consultation with the authors to avoid misinterpretations.</S>
			<S sid ="68" ssid = "34">Since the original version of CogNiac is non-robust and resolves only anaphors that obey certain rules, for fairer and comparable results we implemented the ”resolve-all” version as described in (Baldwin, 1997).</S>
			<S sid ="69" ssid = "35">Although for the current experiments we have only included three knowledge-poor anaphora resolvers, it has to be emphasised that the current implementation of the workbench does not restrict in any way the number or the type of the anaphora resolution methods included.</S>
			<S sid ="70" ssid = "36">Its modularity allows any such method to be added in the system, as long as the pre- processing tools necessary for that method are available.</S>
			<S sid ="71" ssid = "37">3.1 Brief outline of the three approaches.</S>
			<S sid ="72" ssid = "38">All three approaches fall into the category of factor-based algorithms which typically employ a number of factors (preferences, in the case of these three approaches) after morphological agreement checks.</S>
			<S sid ="73" ssid = "39">Kennedy and Boguraev Kennedy and Boguraev (1996) describe an algorithm for anaphora resolution based on Lappin and Leass’ (1994) approach but without employing deep syntactic parsing.</S>
			<S sid ="74" ssid = "40">Their method has been applied to personal pronouns, reflexives and possessives.</S>
			<S sid ="75" ssid = "41">The general idea is to construct coreference equivalence classes that have an associated value based on a set of ten factors.</S>
			<S sid ="76" ssid = "42">An attempt is then made to resolve every pronoun to one of the previous introduced discourse referents by taking into account the salience value of the class to which each possible antecedent belongs.</S>
			<S sid ="77" ssid = "43">Baldwin’s Cogniac CogNiac (Baldwin, 1997) is a knowledge- poor approach to anaphora resolution based on a set of high confidence rules which are successively applied over the pronoun under consideration.</S>
			<S sid ="78" ssid = "44">The rules are ordered according to their importance and relevance to anaphora resolution.</S>
			<S sid ="79" ssid = "45">The processing of a pronoun stops when one rule is satisfied.</S>
			<S sid ="80" ssid = "46">The original version of the algorithm is non-robust, a pronoun being resolved only if one of the rules is applied.</S>
			<S sid ="81" ssid = "47">The author also describes a robust extension of the algorithm, which employs two more weak rules that have to be applied if all the others fail.</S>
			<S sid ="82" ssid = "48">Mitkov’s approach Mitkov’s approach (Mitkov, 1998b) is a robust anaphora resolution method for technical texts which is based on a set of boosting and impeding indicators applied to each candidate for antecedent.</S>
			<S sid ="83" ssid = "49">The boosting indicators assign a positive score to an NP, reflecting a positive likelihood that it is the antecedent of the current pronoun.</S>
			<S sid ="84" ssid = "50">In contrast, the impeding ones apply a negative score to an NP, reflecting a lack of confidence that it is the antecedent of the current pronoun.</S>
			<S sid ="85" ssid = "51">A score is calculated based on these indicators and the discourse referent with the highest aggregate value is selected as antecedent.</S>
			<S sid ="86" ssid = "52">3.2 Evaluation measures used.</S>
			<S sid ="87" ssid = "53">The workbench incorporates an automatic scoring system operating on an XML input file where the correct antecedents for every anaphor have been marked.</S>
			<S sid ="88" ssid = "54">The annotation scheme recognised by the system at this moment is MUC, but support for the MATE annotation scheme is currently under developement as well.</S>
			<S sid ="89" ssid = "55">We have implemented four measures for evaluation: precision and recall as defined by Aone and Bennett (1995)4 as well as success rate and critical success rate as defined in (Mitkov, 2000a).</S>
			<S sid ="90" ssid = "56">These four measures are calculated as follows: • Precision = number of correctly resolved anaphor / number of anaphors attempted to be resolved • Recall = number of correctly resolved anaphors / number of all anaphors identified by the system • Success rate = number of correctly resolved anaphors / number of all anaphors • Critical success rate = number of correctly resolved anaphors / number of anaphors with more than one antecedent after a morphological filter was applied The last measure is an important criterion for evaluating the efficiency of a factor-based anaphora resolution algorithm in the ”critical cases” where agreement constraints alone cannot point to the antecedent.</S>
			<S sid ="91" ssid = "57">It is logical to assume that good anaphora resolution approaches should 4 This definition is slightly different from the one used in (Baldwin, 1997) and (Gaizauskas and Humphreys, 2000).</S>
			<S sid ="92" ssid = "58">For more discussion on this see (Mitkov, 2000a; Mitkov, 2000b).</S>
			<S sid ="93" ssid = "59">have high critical success rates which are close to the overall success rates.</S>
			<S sid ="94" ssid = "60">In fact, in most cases it is really the critical success rate that matters: high critical success rates naturally imply high overall success rates.</S>
			<S sid ="95" ssid = "61">Besides the evaluation system, the workbench also incorporates a basic statistical calculator which addresses (to a certain extent) the question as to how reliable or realistic the obtained performance figures are - the latter depending on the nature of the data used for evaluation.</S>
			<S sid ="96" ssid = "62">Some evaluation data may contain anaphors which are more difficult to resolve, such as anaphors that are (slightly) ambiguous and require real-world knowledge for their resolution, or anaphors that have a high number of competing candidates, or that have their antecedents far away both in terms of sentences/clauses and in terms of number of ”intervening” NPs etc. Therefore, we suggest that in addition to the evaluation results, information should be provided in the evaluation data as to how difficult the anaphors are to resolve.5 To this end, we are working towards the development of suitable and practical measures for quantifying the average ”resolution complexity” of the anaphors in a certain text.</S>
			<S sid ="97" ssid = "63">For the time being, we believe that simple statistics such as the number of anaphors with more than one candidate, and more generally, the average number of candidates per anaphor, or statistics showing the average distance between the anaphors and their antecedents, could serve as initial quantifying measures (see Table 2).</S>
			<S sid ="98" ssid = "64">We believe that these statistics would be more indicative of how ”easy” or ”difficult” the evaluation data is, and should be provided in addition to the information on the numbers or types of anaphors (e.g. intrasentential vs. intersentential) occurring or coverage (e.g. personal, possessive, reflexive pronouns in the case of pronominal anaphora) in the evaluation data.</S>
			<S sid ="99" ssid = "65">3.3 Evaluation results.</S>
			<S sid ="100" ssid = "66">We have used a corpus of technical texts manually annotated for coreference.</S>
			<S sid ="101" ssid = "67">We have decided on 5 To a certain extent, the critical success rate defined above addresses this issue in the evaluation of anaphora resolution algorithms by providing the success rate for the anaphors that are more difficult to resolve.</S>
			<S sid ="102" ssid = "68">Fil e N u m be r of w or ds N u m be r of pr o n o u ns A n a p h o r i c p r o n o u n s Succ ess Rate P r e c i s i o n Mi tko v Co gni ac K &amp; B Mi tko v Co gni ac K &amp; B AC C 9 6 1 7 1 8 2 1 6 0 52.</S>
			<S sid ="103" ssid = "69">34 % 45 .0 % 55 .0 % 42.</S>
			<S sid ="104" ssid = "70">85 % 37.</S>
			<S sid ="105" ssid = "71">18 % 48.</S>
			<S sid ="106" ssid = "72">35 % WI N 2 7 7 3 5 1 4 7 55.</S>
			<S sid ="107" ssid = "73">31 % 44.</S>
			<S sid ="108" ssid = "74">64 % 63.</S>
			<S sid ="109" ssid = "75">82 % 50.</S>
			<S sid ="110" ssid = "76">98 % 41.</S>
			<S sid ="111" ssid = "77">17 % 58.</S>
			<S sid ="112" ssid = "78">82 % BE O 6 3 9 2 9 2 7 0 48.</S>
			<S sid ="113" ssid = "79">57 % 42.</S>
			<S sid ="114" ssid = "80">85 % 55.</S>
			<S sid ="115" ssid = "81">71 % 36.</S>
			<S sid ="116" ssid = "82">95 % 32.</S>
			<S sid ="117" ssid = "83">60 % 42.</S>
			<S sid ="118" ssid = "84">39 % CD R 9 4 9 0 9 7 8 5 71.</S>
			<S sid ="119" ssid = "85">76 % 67.</S>
			<S sid ="120" ssid = "86">05 % 74.</S>
			<S sid ="121" ssid = "87">11 % 62.</S>
			<S sid ="122" ssid = "88">88 % 58.</S>
			<S sid ="123" ssid = "89">76 % 64.</S>
			<S sid ="124" ssid = "90">95 % Tot al 2 8 2 7 2 4 2 2 3 6 2 56 .9 % 49.</S>
			<S sid ="125" ssid = "91">72 % 61 .6 % 48.</S>
			<S sid ="126" ssid = "92">81 % 42.</S>
			<S sid ="127" ssid = "93">65 % 52.</S>
			<S sid ="128" ssid = "94">84 % Table 1: Evaluation results Fil e Pro no uns Per son al Po sse siv e Re fle xiv e Int ras ent ent ial an ap ho rs Average referenti al distance A ve ra ge n o of an te ce de nt s Se nte nce s N P s AC C 1 8 2 1 6 1 1 8 3 9 0 1 . 2 4 . 2 9 . 4 WI N 5 1 4 0 1 1 0 4 1 1 . 1 4 . 1 1 1 . 9 BE O 9 2 7 4 1 8 0 5 6 1 . 4 5 . 1 1 2 . 9 CD R 9 7 8 5 1 0 2 5 4 1 . 4 3 . 7 9 . 2 Tot al 4 2 2 3 6 0 5 7 5 2 4 1 1 . 2 7 5 4 . 2 7 5 1 0 . 8 5 Table 2: Statistical results this genre because both Kennedy&amp;Boguraev and Mitkov report results obtained on technical texts.</S>
			<S sid ="129" ssid = "95">The corpus contains 28,272 words, with 19,305 noun phrases and 422 pronouns, out of which 362 are anaphoric.</S>
			<S sid ="130" ssid = "96">The files that were used are: ”Beowulf HOW TO” (referred in Table 1 as BEO), ”Linux CDRom HOW TO” (CDR), ”Access HOW TO” (ACC), ”Windows Help file” (WIN).</S>
			<S sid ="131" ssid = "97">The evaluation files were pre-processed to remove irrelevant information that might alter the quality of the evaluation (tables, sequences of code, tables of contents, tables of references).</S>
			<S sid ="132" ssid = "98">The texts were annotated for full coreferential chains using a slightly modified version of the MUC annotation scheme.</S>
			<S sid ="133" ssid = "99">All instances of identity-of-reference direct nominal anaphora were annotated.</S>
			<S sid ="134" ssid = "100">The annotation was performed by two people in order to minimize human errors in the testing data (see (Mitkov et al., 2000) for further details).</S>
			<S sid ="135" ssid = "101">Table 1 describes the values obtained for the success rate and precision6 of the three anaphora resolvers on the evaluation corpus.</S>
			<S sid ="136" ssid = "102">The overall success rate calculated for the 422 pronouns found in the texts was 56.9% for Mitkov’s method, 49.72% for Cogniac and 61.6% for Kennedy and Boguraev’s method.</S>
			<S sid ="137" ssid = "103">Table 2 presents statistical results on the evaluation corpus, including distribution of 6 Note that, since the three approaches are robust, recall is equal to precision.</S>
			<S sid ="138" ssid = "104">pronouns, referential distance, average number of candidates for antecedent per pronoun and types of anaphors.7 As expected, the results reported in Table 1 do not match the original results published by Kennedy and Boguraev (1996), Baldwin (1997) and Mitkov (1998b) where the algorithms were tested on different data, employed different pre-processing tools, resorted to different degrees of manual intervention and thus provided no common ground for any reliable comparison.</S>
			<S sid ="139" ssid = "105">By contrast, the evaluation workbench enables a uniform and balanced comparison of the algorithms in that (i) the evaluation is done on the same data and (ii) each algorithm employs the same pre-processing tools and performs the resolution in fully automatic fashion.</S>
			<S sid ="140" ssid = "106">Our experiments also confirm the finding of Orasan, Evans and Mitkov (2000) that fully automatic resolution is more difficult than previously thought with the performance of all the three algorithms essentially lower than originally reported.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "4">
			<S sid ="141" ssid = "1">We believe that the evaluation workbench for anaphora resolution proposed in this paper 7 In Tables 1 and 2, only pronouns that are treated as anaphoric and hence tried to be resolved by the three methods are included.</S>
			<S sid ="142" ssid = "2">Therefore, pronouns in first and second person singular and plural and demonstratives do not appear as part of the number of pronouns.</S>
			<S sid ="143" ssid = "3">alleviates a long-standing weakness in the area of anaphora resolution: the inability to fairly and consistently compare anaphora resolution algorithms due not only to the difference of evaluation data used, but also to the diversity of pre-processing tools employed by each system.</S>
			<S sid ="144" ssid = "4">In addition to providing a common ground for comparison, our evaluation environment ensures that there is fairness in terms of comparing approaches that operate at the same level of automation: formerly it has not been possible to establish a correct comparative picture due to the fact that while some approaches have been tested in a fully automatic mode, others have benefited from post-edited input or from a pre- (or manually) tagged corpus.</S>
			<S sid ="145" ssid = "5">Finally, the evaluation workbench is very helpful in analysing the data used for evaluation by providing insightful statistics.</S>
	</SECTION>
</PAPER>
