<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">Relation extraction is the task of finding semantic relations between two entities from text.</S>
		<S sid ="2" ssid = "2">In this paper, we propose a novel feature-based Chinese relation extraction approach that explicitly defines and explores nine positional structures between two entities.</S>
		<S sid ="3" ssid = "3">We also suggest some correction and inference mechanisms based on relation hierarchy and co-reference information etc. The approach is effective when evaluated on the ACE 2005 Chinese data set.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="4" ssid = "4">Relation extraction is promoted by the ACE program.</S>
			<S sid ="5" ssid = "5">It is the task of finding predefined semantic relations between two entities from text.</S>
			<S sid ="6" ssid = "6">For example, the sentence “Bill Gates is the chairman and chief software architect of Microsoft Corporation” conveys the ACE-style relation “ORG-AFFILIATION” between the two entities “Bill Gates (PER)” and “Microsoft Corporation (ORG)”.</S>
			<S sid ="7" ssid = "7">The task of relation extraction has been extensively studied in English over the past years.</S>
			<S sid ="8" ssid = "8">It is typically cast as a classification problem.</S>
			<S sid ="9" ssid = "9">Existing approaches include feature-based and kernel-based classification.</S>
			<S sid ="10" ssid = "10">Feature-based approaches transform the context of two entities into a liner vector of carefully selected linguistic features, varying from entity semantic information to lexical and syntactic features of the context.</S>
			<S sid ="11" ssid = "11">Kernel-based approaches, on the other hand, explore structured representation such as parse tree and dependency tree and directly compute the similarity between trees.</S>
			<S sid ="12" ssid = "12">Comparably, feature-based approaches are easier to implement and achieve much success.</S>
			<S sid ="13" ssid = "13">In contrast to the significant achievements concerning English and other Western languages, research progress in Chinese relation extraction is quite limited.</S>
			<S sid ="14" ssid = "14">This may be attributed to the different characteristic of Chinese language, e.g. no word boundaries and lack of morphologic variations, etc. In this paper, we propose a character-based Chinese entity relation extraction approach that complements entity context (both internal and external) character N-grams with four word lists extracted from a published Chinese dictionary.</S>
			<S sid ="15" ssid = "15">In addition to entity semantic information, we define and examine nine positional structures between two entities.</S>
			<S sid ="16" ssid = "16">To cope with the data sparseness problem, we also suggest some correction and inference mechanisms according to the given ACE relation hierarchy and co-reference information.</S>
			<S sid ="17" ssid = "17">Experiments on the ACE 2005 data set show that the positional structure feature can provide stronger support for Chinese relation extraction.</S>
			<S sid ="18" ssid = "18">Meanwhile, it can be captured with less effort than applying deep natural language processing.</S>
			<S sid ="19" ssid = "19">But unfortunately, entity co-reference does not help as much as we have expected.</S>
			<S sid ="20" ssid = "20">The lack of necessary co-referenced mentions might be the main reason.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "2">
			<S sid ="21" ssid = "1">Many approaches have been proposed in the literature of relation extraction.</S>
			<S sid ="22" ssid = "2">Among them, feature-based and kernel-based approaches are most popular.</S>
			<S sid ="23" ssid = "3">Kernel-based approaches exploit the structure of the tree that connects two entities.</S>
			<S sid ="24" ssid = "4">Zelenko et al (2003) proposed a kernel over two parse trees, which recursively matched nodes from roots to leaves in a top-down manner.</S>
			<S sid ="25" ssid = "5">Culotta and Sorensen (2004) extended this work to estimate similarity between augmented dependency trees.</S>
			<S sid ="26" ssid = "6">The above two work was further advanced by Bunescu and Mooney (2005) who argued that the information to extract a relation between two entities can be typically captured by the shortest path between them in the dependency graph.</S>
			<S sid ="27" ssid = "7">Later, Zhang et al (2006) developed a composite kernel that combined parse tree kernel with entity kernel and Zhou et al (2007) experimented with a context-sensitive kernel by automatically determining context-sensitive tree spans.</S>
			<S sid ="28" ssid = "8">In the feature-based framework, Kambhatla (2004) employed ME models to combine diverse lexical, syntactic and semantic features derived from word, entity type, mention level, overlap, dependency and parse tree.</S>
			<S sid ="29" ssid = "9">Based on his work, Zhou et al (2005) 89 Proceedings of ACL08: HLT, Short Papers (Companion Volume), pages 89–92, Columbus, Ohio, USA, June 2008.</S>
			<S sid ="30" ssid = "10">Qc 2008 Association for Computational Linguistics further incorporated the base phrase chunking information and semi-automatically collected country name list and personal relative trigger word list.</S>
			<S sid ="31" ssid = "11">Jiang and Zhai (2007) then systematically explored a large space of features and evaluated the effectiveness of different feature subspaces corresponding to sequence, syntactic parse tree and dependency parse tree.</S>
			<S sid ="32" ssid = "12">Their experiments showed that using only the basic unit features within each feature subspace can already achieve state-of-art performance, while over-inclusion of complex features might hurt the performance.</S>
			<S sid ="33" ssid = "13">Previous approaches mainly focused on English relations.</S>
			<S sid ="34" ssid = "14">Most of them were evaluated on the ACE 2004 data set (or a sub set of it) which defined 7 relation types and 23 subtypes.</S>
			<S sid ="35" ssid = "15">Although Chinese processing is of the same importance as English and other Western language processing, unfortunately few work has been published on Chinese relation extraction.</S>
			<S sid ="36" ssid = "16">Che et al (2005) defined an improved edit distance kernel over the original Chinese string representation around particular entities.</S>
			<S sid ="37" ssid = "17">The only relation they studied is PERSON-AFFLIATION.</S>
			<S sid ="38" ssid = "18">The insufficient study in Chinese relation extraction drives us to investigate how to find an approach that is particularly appropriate for Chinese.</S>
	</SECTION>
	<SECTION title="A Chinese Relation Extraction Model" number = "3">
			<S sid ="39" ssid = "1">Due to the aforementioned reasons, entity relation extraction in Chinese is more challenging than in English.</S>
			<S sid ="40" ssid = "2">The system segmented words are already not error free, saying nothing of the quality of the generated parse trees.</S>
			<S sid ="41" ssid = "3">All these errors will undoubtedly propagate to the subsequent processing, such as relation extraction.</S>
			<S sid ="42" ssid = "4">It is therefore reasonable to characters inside the heads of two entities.</S>
			<S sid ="43" ssid = "5">External context involves the characters around two entities within a given window size (it is set to 4 in this study).</S>
			<S sid ="44" ssid = "6">All the internal and external context characters are transformed to Uni-grams and Bi grams.</S>
			<S sid ="45" ssid = "7">z Word List Features Although Uni-grams and Bi-grams should be able to cover most of Chinese words given sufficient training data, many discriminative words might not be discovered by classifiers due to the severe sparseness problem of Bi-grams.</S>
			<S sid ="46" ssid = "8">We complement character- based context features with four word lists which are extracted from a published Chinese dictionary.</S>
			<S sid ="47" ssid = "9">The word lists include 165 prepositions, 105 orientations, 20 auxiliaries and 25 conjunctions.</S>
			<S sid ="48" ssid = "10">3.2 Correction with.</S>
			<S sid ="49" ssid = "11">Relation/Argument Constraints and Type/Subtype Consistency Check An identified relation is said to be correct only when its type/subtype (R) is correct and at the same time its two arguments (ARG1 and ARG2) must be of the correct entity types/subtypes and of the correct order.</S>
			<S sid ="50" ssid = "12">One way to improve the previous feature-based classification approach is to make use of the prior knowledge of the task to find and rectify the incorrect results.</S>
			<S sid ="51" ssid = "13">Table 1 illustrates the examples of possible relations between PER and ORG.</S>
			<S sid ="52" ssid = "14">We regard possible relations between two particular types of entity arguments as constraints.</S>
			<S sid ="53" ssid = "15">Some relations are symmetrical for two arguments, such as PER_ SOCIAL.FAMILY, but others not, such as ORG_AFF.</S>
			<S sid ="54" ssid = "16">EMPLOYMENT.</S>
			<S sid ="55" ssid = "17">Argument orders are important for asymmetrical relations.</S>
			<S sid ="56" ssid = "18">PER ORG conclude that kernel-based especially tree-kernel approaches are not suitable for Chinese, at least at current stage.</S>
			<S sid ="57" ssid = "19">In this paper, we study a feature-based approach that basically integrates entity related PER ORG PER_SOCIAL.BUS, PER_SOCIAL.FAMILY, … ORG_AFF.EMPLOYMENT, ORG_AFF.OWNERSHIP, … PART_WHOLE.SUBSIDIARY, ORG_AFF.INVESTOR/SHARE, … information with context information.</S>
			<S sid ="58" ssid = "20">3.1 Classification Features.</S>
			<S sid ="59" ssid = "21">The classification is based on the following four types of features.</S>
			<S sid ="60" ssid = "22">z Entity Positional Structure Features We define and examine nine finer positional structures between two entities (see Appendix).</S>
			<S sid ="61" ssid = "23">They can be merged into three coarser structures.</S>
			<S sid ="62" ssid = "24">z Entity Features Entity types and subtypes are concerned.</S>
			<S sid ="63" ssid = "25">z Entity Context Features These are character-based features.</S>
			<S sid ="64" ssid = "26">We consider both internal and external context.</S>
			<S sid ="65" ssid = "27">Internal context includes the characters inside two entities and the Table 1 Possible Relations between ARG1 and ARG2 Since our classifiers are trained on relations instead of arguments, we simply select the first (as in adjacent and separate structures) and outer (as in nested structures) as the first argument.</S>
			<S sid ="66" ssid = "28">This setting works at most of cases, but still fails sometimes.</S>
			<S sid ="67" ssid = "29">The correction works in this way.</S>
			<S sid ="68" ssid = "30">Given two entities, if the identified type/subtype is an impossible one, it is revised to NONE (it means no relation at all).</S>
			<S sid ="69" ssid = "31">If the identified type/subtype is possible, but the order of arguments does not consist with the given relation definition, the order of arguments is adjusted.</S>
			<S sid ="70" ssid = "32">Another source of incorrect results is the inconsistency between the identified types and subtypes, since they are typically classified separately.</S>
			<S sid ="71" ssid = "33">This type of errors can be checked against the provided hierarchy of relations, such as the subtypes OWNERSHIP and EMPLOYMENT must belong to the ORG_AFF type.</S>
			<S sid ="72" ssid = "34">There are existing strategies to deal with this problem, such as strictly bottom-up (i.e. use the identified subtype to choose the type it belongs to), guiding top-down (i.e. to classify types first and then subtypes under a certain type).</S>
			<S sid ="73" ssid = "35">However, these two strategies lack of interaction between the two classification levels.</S>
			<S sid ="74" ssid = "36">To insure consistency in an interactive manner, we rank the first n numbers of the most likely classified types and then check them against the classified subtype one by one until the subtype conforms to a type.</S>
			<S sid ="75" ssid = "37">The matched type is selected as the result.</S>
			<S sid ="76" ssid = "38">If the last type still fails, both type and subtype are revised to NONE.</S>
			<S sid ="77" ssid = "39">We call this strategy type selection.</S>
			<S sid ="78" ssid = "40">Alternatively, we can choose the most likely classified subtypes, and check them with the classified type (i.e. subtype selection strategy).</S>
			<S sid ="79" ssid = "41">Currently, n is 2.</S>
			<S sid ="80" ssid = "42">3.2 Inference with Co-reference Information and.</S>
			<S sid ="81" ssid = "43">Linguistic Patterns Each entity can be mentioned in different places in text.</S>
			<S sid ="82" ssid = "44">Two mentions are said to be co-referenced to one entity if they refers to the same entity in the world though they may have different surface expressions.</S>
			<S sid ="83" ssid = "45">For example, both “he” and “Gates” may refer to “Bill Gates of Microsoft”.</S>
			<S sid ="84" ssid = "46">If a relation “ORG- AFFILIATION” is held between “Bill Gates” and “Microsoft”, it must be also held between “he” and “Microsoft”.</S>
			<S sid ="85" ssid = "47">Formally, given two entities E1={EM11, EM12, …, EM1n} and E2={EM21, EM22, …, EM2m} (Ei is an entity, EMij is a mention of Ei), it is true that R(EM11, EM21)⇒ R(EM1l, EM2k).</S>
			<S sid ="86" ssid = "48">This nature allows us to infer more relations which may not be identified by classifiers.</S>
			<S sid ="87" ssid = "49">Our previous experiments show that the performance of the nested and the adjacent relations is much better than the performance of other structured relations which suffer from unbearable low recall due to insufficient training data.</S>
			<S sid ="88" ssid = "50">Intuitively we can follow the path of “Nested ⇒ Adjacent ⇒ Separated ⇒ Others” (Nested, Adjacent and Separated structures are majority in the corpus) to perform the inference.</S>
			<S sid ="89" ssid = "51">But soon we have an interesting finding.</S>
			<S sid ="90" ssid = "52">If two related entities are nested, almost all the mentions of them are nested.</S>
			<S sid ="91" ssid = "53">So basically inference works on “Adjacent ⇒ Separated’’.</S>
			<S sid ="92" ssid = "54">When considering the co-reference information, we may find another type of inconsistency, i.e. the one raised from co-referenced entity mentions.</S>
			<S sid ="93" ssid = "55">It is possible that R(EM11, EM21) ≠ R(EM12, EM22) when Ris identified based on the context of EM.</S>
			<S sid ="94" ssid = "56">Co reference not only helps for inference but also provides the second chance to check the consistency among entity mention pairs so that we can revise accordingly.</S>
			<S sid ="95" ssid = "57">As the classification results of SVM can be transformed to probabilities with a sigmoid function, the relations of lower probability mention pairs are revised according to the relation of highest probability mention pairs.</S>
			<S sid ="96" ssid = "58">The above inference strategy is called coreference- based inference.</S>
			<S sid ="97" ssid = "59">Besides, we find that pattern-based inference is also necessary.</S>
			<S sid ="98" ssid = "60">The relations of adjacent structure can infer the relations of separated structure if there are certain linguistic indicators in the local context.</S>
			<S sid ="99" ssid = "61">For example, given a local context “EM1 and EM2 located EM3”, if the relation of EM2 and EM3 has been identified, EM1 and EM3 will take the relation type/subtype that EM2 and EM3 holds.</S>
			<S sid ="100" ssid = "62">Currently, the only indicators under consideration are “and” and “or”.</S>
			<S sid ="101" ssid = "63">However, more patterns can be included in the future.</S>
	</SECTION>
	<SECTION title="Experimental. " number = "4">
			<S sid ="102" ssid = "1">Results The experiments are conducted on the ACE 2005 Chinese RDC training data (with true entities) where 6 types and 18 subtypes of relations are annotated.</S>
			<S sid ="103" ssid = "2">We use 75% of it to train SVM classifiers and the remaining to evaluate results.</S>
			<S sid ="104" ssid = "3">The aim of the first set of experiments is to examine the role of structure features.</S>
			<S sid ="105" ssid = "4">In these experiments, a “NONE” class is added to indicate a null type/subtype.</S>
			<S sid ="106" ssid = "5">With entity features and entity context features and word list features, we consider three different classification contexts: (1), only three coarser structures 1 , i.e. nested, adjacent and separated, are used as feature, and a classifier is trained for each relation type and subtype; (2) similar to (1) but all nine structures are concerned; and (3) similar to (2) but the training data is divided into 9 parts according to structure, i.e. type and subtype classifiers are trained on the data with the same structures.</S>
			<S sid ="107" ssid = "6">The results presented in Table 2 show that 9-structure is much more discriminative than 3-structure.</S>
			<S sid ="108" ssid = "7">Also, the performance can be improved significantly by dividing training data based on nine structures.Type / Subtype Precision Recall F measure 3-Structure 0.7918/0.7356 0.3123/0.2923 0.4479/0.4183 9-Structure 0.7533/0.7502 0.4389/0.3773 0.5546/0.5021 9Structure_Divide 0.7733/0.7485 0.5506/0.5301 0.6432/0.6209 Table 2 Evaluation on Structure Features Structure Positive Class Negative Class Ratio Nested 6332 4612 1 : 0.7283 Adjacent 2028 27100 1 : 13.3629 1 Nine structures are combined to three by merging (b) and (c) to.</S>
			<S sid ="109" ssid = "8">(a), (e) and (f) to (d), (h) and (i) to (g).</S>
			<S sid ="110" ssid = "9">Separated 939 79989 1 : 85.1853 Total 9299 111701 1 : 12.01 Table 3 Imbalance Training Class Problem In the experiments, we find that the training class imbalance problem is quite serious, especially for the separated structure (see Table 3 above where internal context; positional structure provides stronger support than other individual recognized features such as entity type and context; but word list feature can not further boost the performance.</S>
			<S sid ="111" ssid = "10">Type / Subtype Precision Recall F-measure Entity Type + Structure 0.7288/0.6902 0.4876/0.4618 0.5843/0.5534 “Positive” and “Negative” mean there exists a relation + External (Uni-) 0.7935/0.7492 0.5817/0.5478 0.6713/0.6321 between two entities and otherwise).</S>
			<S sid ="112" ssid = "11">A possible + Internal (Uni-) 0.8137/0.7769 0.6113/0.5836 0.6981/0.6665 + Bi- (Internal &amp; External) 0.8144/0.7828 0.6141/0.5902 0.7002/0.6730 solution to alleviate this problem is to detect whether the given two entities have some relation first and if they do then to classify the relation types and subtypes instead of combining detection and classification in one process.</S>
			<S sid ="113" ssid = "12">The second set of experiment is to examine the difference between these two implementations.</S>
			<S sid ="114" ssid = "13">Against our expectation, the sequence implementation does better than the combination implementation, but not significantly, as sh own in Table 4 below.</S>
			<S sid ="115" ssid = "14">Type / Subtype Precision Recall F-measure Combination 0.7733/0.7485 0.5506/0.5301 0.6432/0.6206 Sequence 0.7374/0.7151 0.5860/0.5683 0.6530/0.6333 Table 4 Evaluation of Two Detection and Classification Modes Based on the sequence implementation, we set up the third set of experiments to examine the correction and inference mechanisms.</S>
			<S sid ="116" ssid = "15">The results are illustrated in Table 5.</S>
			<S sid ="117" ssid = "16">The correction with constraints and consistency check is clearly contributing.</S>
			<S sid ="118" ssid = "17">It improves F-measure 7.40% and 6.47% in type and subtype classification respectively.</S>
			<S sid ="119" ssid = "18">We further compare four possible consistency check strategies in Table 6 and find that the strategies using subtypes to determine or select types perform better than top down strategies.</S>
			<S sid ="120" ssid = "19">This can be attributed to the fact that correction with relation/argument constraints in subtype is tighter than the ones in type.</S>
			<S sid ="121" ssid = "20">+ Wordlist 0.8167/0.7832 0.6170/0.5917 0.7029/0.6741 Table 6 Evaluation of Feature and Their Combinations 5 Conclusion In this paper, we study feature-based Chinese relation extraction.</S>
			<S sid ="122" ssid = "21">The proposed approach is effective on the ACE 2005 data set.</S>
			<S sid ="123" ssid = "22">Unfortunately, there is no result reported on the same data so that we can compare.</S>
			<S sid ="124" ssid = "23">6 Appendix: Nine Positional.</S>
			<S sid ="125" ssid = "24">Structures</S>
	</SECTION>
	<SECTION title="Acknowledgment">
</PAPER>
