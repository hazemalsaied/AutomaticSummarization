<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">This paper proposes a semi-supervised relation acquisition method that does not rely on extraction patterns (e.g. “X causes Y” for causal relations) but instead learns a combination of indirect evidence for the target relation — semantic word classes and partial patterns.</S>
		<S sid ="2" ssid = "2">This method can extract long tail instances of semantic relations like causality from rare and complex expressions in a large Japanese Web corpus — in extreme cases, patterns that occur only once in the entire corpus.</S>
		<S sid ="3" ssid = "3">Such patterns are beyond the reach of current pattern based methods.</S>
		<S sid ="4" ssid = "4">We show that our method performs on par with state-of-the-art pattern based methods, and maintains a reasonable level of accuracy even for instances acquired from infrequent patterns.</S>
		<S sid ="5" ssid = "5">This ability to acquire long tail instances is crucial for risk management and innovation, where an exhaustive database of high-level semantic relations like causation is of vital importance.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="6" ssid = "6">Pattern based relation acquisition methods rely on lexico-syntactic patterns (Hearst, 1992) for extracting relation instances.</S>
			<S sid ="7" ssid = "7">These are templates of natural language expressions such as “X causes Y ” that signal an instance of some semantic relation (i.e., causality).</S>
			<S sid ="8" ssid = "8">Pattern based methods (Agichtein and Gravano, 2000; Pantel and Pennacchiotti, 2006b; Pas¸ca et al., 2006; De Saeger et al., 2009) learn many ∗ This work was done when all authors were at the National Institute of Information and Communications Technology.</S>
			<S sid ="9" ssid = "9">such patterns to extract new instances (word pairs) from the corpus.</S>
			<S sid ="10" ssid = "10">However, since extraction patterns are learned using statistical methods that require a certain frequency of observations, pattern based methods fail to capture relations from complex expressions in which the pattern connecting the two words is rarely observed.</S>
			<S sid ="11" ssid = "11">Consider the following sentence: “Curing hypertension alleviates the deterioration speed of the renal function, thereby lowering the risk of causing intracranial bleeding” Humans can infer that this sentence expresses a causal relation between the underlined noun phrases.</S>
			<S sid ="12" ssid = "12">But the actual pattern connecting them, i.e., “Curing X alleviates the deterioration speed of the renal function, thereby lowering the risk of causing Y ”, is rarely observed more than once even in a 108 page Web corpus.</S>
			<S sid ="13" ssid = "13">In the sense that the term pattern implies a recurring event, this expression contains no pattern for detecting the causal relation between hypertension and intracranial bleeding.</S>
			<S sid ="14" ssid = "14">This is what we mean by “long tail instances” — words that co-occur infrequently, and only in sparse extraction contexts.</S>
			<S sid ="15" ssid = "15">Yet an important application of relation extraction is mining the Web for so-called unknown unknowns — in the words of D. Rumsfeld, “things we don’t know we don’t know” (Torisawa et al., 2010).</S>
			<S sid ="16" ssid = "16">In knowledge discovery applications like risk management and innovation, the usefulness of relation extraction lies in its ability to find many unexpected remedies for diseases, causes of social problems, and so on.</S>
			<S sid ="17" ssid = "17">To give an example, our relation extrac 825 Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing, pages 825–835, Edinburgh, Scotland, UK, July 27–31, 2011.</S>
			<S sid ="18" ssid = "18">Qc 2011 Association for Computational Linguistics tion system found a blog post mentioning Japanese automaker Toyota as a hidden cause of Japan’s deflation.</S>
			<S sid ="19" ssid = "19">Several months later the same connection was made in an article published in an authoritative economic magazine.</S>
			<S sid ="20" ssid = "20">We propose a semi-supervised relation extraction method that does not rely on direct pattern evidence connecting the two words in a sentence.</S>
			<S sid ="21" ssid = "21">We argue that the role of binary patterns can be replaced by a combination of two types of indirect evidence: semantic class information about the target relation and partial patterns, which are fragments or sub- patterns of binary patterns.</S>
			<S sid ="22" ssid = "22">The intuition is this: if a sentence like the example sentence above contains some word X belonging to the class of medical conditions and another word Y from the class of traumas, and X matches the partial pattern “.</S>
			<S sid ="23" ssid = "23">causing X”, there is a decent chance that this sentence expresses a causal relation between X and Y . We show that just using this combination of indirect evidence we can pick up semantic relations with roughly 50% precision, regardless of the complexity or frequency of the expression in which the words co-occur.</S>
			<S sid ="24" ssid = "24">Furthermore, by combining this idea with a straightforward machine learning approach, the overall performance of our method is on par with state-of-the-art pattern based methods.</S>
			<S sid ="25" ssid = "25">However, our method manages to extract a large number of instances from sentences that contain no pattern that can be learned by pattern induction methods.</S>
			<S sid ="26" ssid = "26">Our method is a two-stage system.</S>
			<S sid ="27" ssid = "27">Figure 1 presents an overview.</S>
			<S sid ="28" ssid = "28">In Stage 1 we apply a state- of-the-art pattern based relation extractor to a Web corpus to obtain an initial batch of relation instances.</S>
			<S sid ="29" ssid = "29">In Stage 2 a supervised classifier is built from various components obtained from the output of Stage 1.</S>
			<S sid ="30" ssid = "30">Given the output of Stage 1 and access to a. Web corpus, the Stage 2 extractor is completely self-sufficient, and the whole method requires no supervision other than a handful of seed patterns to start the first stage extractor.</S>
			<S sid ="31" ssid = "31">The whole procedure is therefore minimally supervised.</S>
			<S sid ="32" ssid = "32">Semantic word classes and partial patterns play a crucial role throughout all steps of the process.</S>
			<S sid ="33" ssid = "33">We evaluate our method on three relation acquisition tasks (causation, prevention and material relations) using a 600 million Japanese Web page cor Figure 1: Proposed method: data flow.</S>
			<S sid ="34" ssid = "34">pus (Shinzato et al., 2008) and show that our system can successfully acquire relations from both frequent and infrequent patterns.</S>
			<S sid ="35" ssid = "35">Our system extracted 100,000 causal relations with 84.6% precision, 50,000 prevention relations with 58.4% precision and 25,000 material relations with 76.1% precision.</S>
			<S sid ="36" ssid = "36">In the extreme case, we acquired several thousand word pairs co-occurring only in patterns that appear once in the entire corpus.</S>
			<S sid ="37" ssid = "37">We call such patterns single occurrence (SO) patterns.</S>
			<S sid ="38" ssid = "38">Word pairs that co-occur only with SO patterns represent the theoretical limiting case of relations that cannot be acquired using existing pattern based methods.</S>
			<S sid ="39" ssid = "39">In this sense our method can be seen as complementary with pattern based approaches, and merging our method’s output with that of a pattern based method may be beneficial.</S>
	</SECTION>
	<SECTION title="Stage 1. " number = "2">
			<S sid ="40" ssid = "1">Extractor This section introduces our Stage 1 extractor: the pattern based method from (De Saeger et al., 2009), which we call CDP for “class dependent patterns”.</S>
			<S sid ="41" ssid = "2">We give a brief overview below, and refer the reader to the original paper for a more comprehensive explanation.</S>
			<S sid ="42" ssid = "3">CDP takes a set of seed patterns as input, and automatically learns new class dependent patterns as paraphrases of the seed patterns.</S>
			<S sid ="43" ssid = "4">Class dependent patterns are semantic class restricted versions of ordinary lexico-syntactic patterns.</S>
			<S sid ="44" ssid = "5">Existing methods use class independent patterns such as “X causes Y ” to learn causal relations between X and Y . Class dependent patterns however place semantic class re strictions on the noun pairs they may extract, like “Ya ccidents causes Xi ncidents”.</S>
			<S sid ="45" ssid = "6">The accidents and incidents subscripts specify the semantic class of the X and Y slot fillers.</S>
			<S sid ="46" ssid = "7">These class restrictions make it possible to distinguish between multiple senses of highly ambiguous patterns (so-called “generic” patterns).</S>
			<S sid ="47" ssid = "8">For instance, given the generic pattern “Y by X ”, if we restrict Y and X in to the semantic classes of injuries and accidents (as in “death by drowning”), the class dependent pattern “Yi njuries by Xa ccidents” becomes a valid paraphrase of “X causes Y ” and can safely be used to extract causal relations, whereas other class dependent versions of the same generic pattern (e.g., “Yproducts by Xcompanies”, as in “iPhone by Apple”) may not.</S>
			<S sid ="48" ssid = "9">CDP ranks each noun pair in the corpus according to a score that reflects its likelihood of being a proper instance of the target relation, by calculating the semantic similarity of a set of seed patterns to the class dependent patterns this noun pair co-occurs with.</S>
			<S sid ="49" ssid = "10">The output of CDP is a list of noun pairs ranked by score, together with the highest scoring class dependent pattern each noun pair co-occurs with.</S>
			<S sid ="50" ssid = "11">This list becomes the input to Stage 2 of our method, as shown in Figure 1.</S>
			<S sid ="51" ssid = "12">We adopted CDP as Stage 1 extractor because, besides having generally good performance, the class dependent patterns provide the two fundamental ingredients for Stage 2 of our method — the target semantic word classes for a given relation (in the form of the semantic class restrictions attached to patterns), and partial patterns.</S>
			<S sid ="52" ssid = "13">To obtain fine-grained semantic word classes we used the large scale word clustering algorithm from (Kazama and Torisawa, 2008), which uses the EM</S>
	</SECTION>
	<SECTION title="Stage 2 Extractor. " number = "3">
			<S sid ="53" ssid = "1">We use CDP as our Stage 1 extractor, and the top N noun pairs along with the class dependent patterns that extract them are given as input to Stage 2, which represents the main contribution of this work.</S>
			<S sid ="54" ssid = "2">As shown in Figure 1, Stage 2 consists of three modules: a candidate generator, a training data generator and a supervised classifier.</S>
			<S sid ="55" ssid = "3">The training data generator builds training data for the classifier from the top N output of CDP and sentences retrieved from the Web corpus.</S>
			<S sid ="56" ssid = "4">This classifier then scores and ranks the candidate relations generated by the candidate relation generator.</S>
			<S sid ="57" ssid = "5">We introduce each module below.</S>
			<S sid ="58" ssid = "6">Candidate Generator This module generates sentences containing candidate word pairs for the target relation from the corpus.</S>
			<S sid ="59" ssid = "7">It does so using the semantic class restrictions and partial patterns obtained from the output of CDP.</S>
			<S sid ="60" ssid = "8">The set of all semantic class pairs obtained from the class dependent patterns that extracted the top N results become the target semantic class pairs from which new candidate instances are generated.</S>
			<S sid ="61" ssid = "9">We extract all sentences containing a word pair belonging to one of the target class pairs from the corpus.</S>
			<S sid ="62" ssid = "10">From these sentences we keep only those that contain a trace of evidence for the target semantic relation.</S>
			<S sid ="63" ssid = "11">For this we decompose the class dependent patterns from the Stage 1 extractor into partial patterns.</S>
			<S sid ="64" ssid = "12">As mentioned previously, patterns consist of words on the path of dependency relations connecting the two target words in a syntactic tree.</S>
			<S sid ="65" ssid = "13">To obtain partial patterns we split this dependency path into its two constituent branches, each one leading from the leaf word (i.e. variable) to the syntactic head of the subj obj algorithm to compute the probability that a word w pattern.</S>
			<S sid ="66" ssid = "14">For example, “X ←− causes −→ Y ” isbelongs to class c, i.e., P (c|w).</S>
			<S sid ="67" ssid = "15">Probabilistic cluster subj split into two partial patterns “X ←− causes” and ing defines no discrete boundary between members and nonmembers of a semantic class, so we simply assume w belongs to c whenever P (c|w) ≥ 0.2.</S>
			<S sid ="68" ssid = "16">For this work we clustered 106 nouns into 500 classes.</S>
			<S sid ="69" ssid = "17">Finally, we adopt the structural representation of patterns introduced in (Lin and Pantel, 2001).</S>
			<S sid ="70" ssid = "18">All sentences in our corpus are dependency parsed, and patterns consist of words on the path of dependency relations connecting two nouns.</S>
			<S sid ="71" ssid = "19">“causes obj Y ”.</S>
			<S sid ="72" ssid = "20">These partial patterns capture the predicate structures in binary patterns.1 We discard partial patterns with syntactic heads other than verbs or adjectives.</S>
			<S sid ="73" ssid = "21">The candidate genarator retrieves all sentences from the corpus in which two nouns belonging to one of the target semantic classes co-occur and 1 In Japanese, case information is encoded in post-positions attached to the noun.</S>
			<S sid ="74" ssid = "22">where at least one of the nouns matches a partial pattern.</S>
			<S sid ="75" ssid = "23">As shown in Figure 1, these sentences and the candidate noun pairs they contain (called (noun pair, sentence) triples hereafter) are submitted to the classifier for scoring.</S>
			<S sid ="76" ssid = "24">Restricting candidate noun pairs by this combination of semantic word classes and partial pattern matching proved to be quite powerful.</S>
			<S sid ="77" ssid = "25">For instance, in the case of causal relations we found that close to 60% of the (noun pair, sentence) triples produced by the candidate generator were correct (Figure 6).</S>
			<S sid ="78" ssid = "26">Training Data Generator As shown in Figure 1, the (noun pair, sentence) triples used as training data for the SVM classifier were generated from the top results of the Stage 1 extractor and the corpus.</S>
			<S sid ="79" ssid = "27">We consider the noun pairs in the top N output of the Stage 1 extractor as true instances of the target relation (even though they may contain erroneous extractions), and retrieve from the corpus all sentences in which these noun pairs co-occur and that match one of the partial patterns mentioned above.</S>
			<S sid ="80" ssid = "28">In our experiments we set N to 25, 000.</S>
			<S sid ="81" ssid = "29">We randomly select positive training samples from this set of (noun pair, sentence) triples.</S>
			<S sid ="82" ssid = "30">Negative training samples are also selected randomly, as follows.</S>
			<S sid ="83" ssid = "31">If one member of the target noun pair in the positive samples above matches a partial pattern but the other does not, we randomly replace the latter by another noun found in the same sentence, and generate this new (noun pair, sentence) triple as a negative training sample.</S>
			<S sid ="84" ssid = "32">In the causal relation experiments this approach had about 5% chance of generating false negatives — noun pairs contained in the top N results of the Stage 1 extractor.</S>
			<S sid ="85" ssid = "33">Such samples were discarded.</S>
			<S sid ="86" ssid = "34">Our experimental results show that this scheme works quite well in practice.</S>
			<S sid ="87" ssid = "35">We randomly sample M positive and negative samples from the autogenerated training data to train the SVM.</S>
			<S sid ="88" ssid = "36">M was empirically set to 50,000 in our experiments.</S>
			<S sid ="89" ssid = "37">SVM Classifier We used a straightforward feature set for training the SVM classifier.</S>
			<S sid ="90" ssid = "38">Because our classifier will be faced with sentences containing long and infrequent patterns where the distance between the two target nouns may be quite large, we did not try to represent lexico-syntactic patterns as features but deliberately restricted the feature set to local context features of the candidate noun pair in the target sentence.</S>
			<S sid ="91" ssid = "39">Concretely, we looked at bi- grams and unigrams surrounding both nouns of the candidate relation, as the local context around the target words may contain many telling expressions like “increase in X” or “X deficiency” which are useful clues for causal relations.</S>
			<S sid ="92" ssid = "40">Also, in Japanese case information is encoded in post-positions attached to the noun, which is captured by the unigram features.</S>
			<S sid ="93" ssid = "41">In addition to these base features, we include the semantic classes to which the candidate noun pair belongs, the partial patterns they match in this sentence, and the infix words inbetween the target noun pair.</S>
			<S sid ="94" ssid = "42">Note that this feature set is not intended to be optimal beyond the actual claims of this paper, and we have deliberately avoided exhaustive feature engineering so as not to obscure the contribution of semantic classes and partial pattern to our approach.</S>
			<S sid ="95" ssid = "43">Clearly an optimal classifier will incorporate many more advanced features (see GuoDong et al.</S>
			<S sid ="96" ssid = "44">(2005) for a comprehensive overview), but even without sophisticated feature engineering our classifier achieved sufficient performance levels to support our claims.</S>
			<S sid ="97" ssid = "45">An overview of the feature set is given in Table 1.</S>
			<S sid ="98" ssid = "46">The relative contribution of each type of features is discussed in section 4.</S>
			<S sid ="99" ssid = "47">In preliminary experiments we found a polynomial kernel of degree 3 gave the best results, which suggests the effectiveness of combining different types of indirect evidence.</S>
			<S sid ="100" ssid = "48">The SVM classifier outputs (noun pair, sentence) triples, ranked by SVM score.</S>
			<S sid ="101" ssid = "49">To obtain the final output of our method we assign each unique noun pair the maximum score from all (noun pair, sentence) triples it occurs in, and discard all other sentences for this noun pair.</S>
			<S sid ="102" ssid = "50">In section 4 below we evaluate the acquired noun pairs in the context of the sentence that maximizes their score.</S>
	</SECTION>
	<SECTION title="Evaluation. " number = "4">
			<S sid ="103" ssid = "1">We demonstrate the effectiveness of semantic word classes and partial pattern matching for relation extraction by showing that the method proposed in this paper performs at the level of other state-of-the-art relation acquisition methods.</S>
			<S sid ="104" ssid = "2">In addition we demonstrate that our method can successfully extract relation instances from infrequent patterns, and we Fe atu re ty pe De sc rip tio n N u m b er of fe at ur e s Mo rph em e fea tur es Uni gra m an d big ra m mo rph em es sur rou ndi ng bot h tar get wo rds . 5 5 4 , 3 9 5 PO S fea tur es Co ars e- an d fine gra ine d PO S tag s of the no un pai r an d mo rph em e fea tur es.</S>
			<S sid ="105" ssid = "3">2,4 11 Se ma ntic fea tur es Se ma ntic wor d cla sse s of the tar get no un pai r. 100 0 (50 0 cla sse s ×2 ) Infi x wo rd fea tur es Mo rph em es fou nd inb etw ee n the tar get no un pai r. 94, 44 8 Par tial pat ter ns Par tial pat ter ns ma tchi ng the tar get no un pai r. 86 Table 1: Feature set used in the Stage 2 classifier, and their number for the causal relation experiments.</S>
			<S sid ="106" ssid = "4">explore several criteria for what constitutes an infrequent pattern — including the theoretical limiting case of patterns observed only once in the entire corpus.</S>
			<S sid ="107" ssid = "5">These instances are impossible to acquire by pattern based methods.</S>
			<S sid ="108" ssid = "6">The ability to acquire relations from extremely infrequent expressions with decent accuracy demonstrates the utility of combining semantic word classes with partial pattern matching.</S>
			<S sid ="109" ssid = "7">4.1 Experimental Setting.</S>
			<S sid ="110" ssid = "8">We evaluate our method on three semantic relation acquisition tasks: causality, prevention and material.</S>
			<S sid ="111" ssid = "9">Two concepts stand in a causal relation when the source concept (the “cause”) is directly or indirectly responsible for the subsequent occurrence of the target concept (its “effect”).</S>
			<S sid ="112" ssid = "10">In a prevention relation the source concept directly or indirectly acts to avoid the occurrence of the target concept, and in a material relation the source concept is a material or ingredient of the target concept.</S>
			<S sid ="113" ssid = "11">For our experiments we used the latest version of the TSUBAKI corpus (Shinzato et al., 2008), a collection of 600 million Japanese Web pages dependency parsed by the Japanese dependency parser KNP2.</S>
			<S sid ="114" ssid = "12">In our implementation of CDP, lexico- syntactic patterns consist of words on the path connecting two nouns in a dependency parse tree.</S>
			<S sid ="115" ssid = "13">We discard patterns from dependency paths longer than 8 constituent nodes.</S>
			<S sid ="116" ssid = "14">Furthermore, we estimated pattern frequencies in a subset of the corpus (50 million pages, or 1/12th of the entire corpus) and discarded patterns that co-occur with less than 10 unique noun pairs in this smaller corpus.</S>
			<S sid ="117" ssid = "15">These restrictions do not apply to the proposed method, which can extract noun pairs connected by patterns of arbitrary length, pose we treat dependency paths whose observed frequency is below this threshold as insufficiently frequent to be considered as “patterns”.</S>
			<S sid ="118" ssid = "16">This threshold is of course arbitrary, but in section 4 we show that our results are not affected by these implementation details.</S>
			<S sid ="119" ssid = "17">We asked three human judges to evaluate random (noun pair, sentence) triples, i.e. candidate noun pairs in the context of some corpus sentence in which they co-occur.</S>
			<S sid ="120" ssid = "18">If the judges find the sentence contains sufficient evidence that the target relation holds between the candidate nouns, they mark the noun pair correct.</S>
			<S sid ="121" ssid = "19">To evaluate the performance of each method we use two evaluation criteria: strict (all judges must agree the candidate relation is correct) and lenient (decided by the judges’ majority vote).</S>
			<S sid ="122" ssid = "20">Over all experiments the interrater agreement (Kappa) ranged between 0.57 and 0.82 with an average of 0.72, indicating substantial agreement (Lan- dis and Koch, 1977).</S>
			<S sid ="123" ssid = "21">4.1.1 Methods Compared We compare our results to two pattern based methods: CDP (the Stage 1 extractor) and Espresso (Pantel and Pennacchiotti, 2006a).</S>
			<S sid ="124" ssid = "22">Espresso is a popular bootstrapping based method that uses a set of seed instances to induce extraction patterns for the target relation and then acquire new instances in an iterative bootstrapping process.</S>
			<S sid ="125" ssid = "23">In each iteration Espresso performs pattern induction, pattern ranking and selection using previously acquired instances, and uses the newly acquired patterns to extraction new instances.</S>
			<S sid ="126" ssid = "24">Espresso computes a reliability score for both instances and patterns based on their pointwise mutual information (PMI) with the top-scoring patterns and instances from the previous iteration.3 We refer to (Pantel and even if found only once in the corpus.</S>
			<S sid ="127" ssid = "25">For our pur3 In our implementation of Espresso we found that, despite.</S>
			<S sid ="128" ssid = "26">2 http://nlp.kuee.kyoto-u.ac.jp/nl-resource/knp.html the many parameters for controlling the bootstrapping process, 100% 90% 80% 70% 60% 50% 40% 30% 0 10K 20K 30K 40K 50K 60K 70K 80K 90K 100K 100% 90% 80% 70% 60% 50% 40% 30% 20% 10% 0% 0 10K 20K 30K 40K 50K 60K 70K 80K 90K 100K Proposed (L) Proposed (S) Prop.</S>
			<S sid ="129" ssid = "27">w/o CDP (L) Prop.</S>
			<S sid ="130" ssid = "28">w/o CDP (S) Prop.</S>
			<S sid ="131" ssid = "29">w/o pattern (L) Prop.</S>
			<S sid ="132" ssid = "30">w/o pattern (S) Espresso (L) Espresso (S) CDP (L) CDP (S) Proposed (L) Proposed (S) Prop.</S>
			<S sid ="133" ssid = "31">w/o CDP (L) Prop.</S>
			<S sid ="134" ssid = "32">w/o CDP (S) Prop.</S>
			<S sid ="135" ssid = "33">w/o pattern (L) Prop.</S>
			<S sid ="136" ssid = "34">w/o pattern (S) Espresso (L) Espresso (S) CDP (L) CDP (S) Figure 2: Precision of acquired relations (causality).</S>
			<S sid ="137" ssid = "35">L and S denote lenient and strict evaluation.</S>
			<S sid ="138" ssid = "36">Figure 3: Precision of acquired relations (prevention).</S>
			<S sid ="139" ssid = "37">L and S denote lenient and strict evaluation.</S>
			<S sid ="140" ssid = "38">Pennacchiotti, 2006a) for a more detailed description.</S>
			<S sid ="141" ssid = "39">For all methods compared we rank the acquired noun pairs by their score and evaluated 500 random samples from the top 100,000 results.</S>
			<S sid ="142" ssid = "40">For noun pairs acquired by CDP and Espresso we select the pattern that extracted this noun pair (in the case of Espresso, the pattern with the highest PMI for this noun pair), and randomly select a sentence in which the noun 100% 90% 80% 70% 60% 50% 40% 30% 20% 10% 0% 0 10K 20K 30K 40K 50K 60K 70K 80K 90K 100K pair co-occurs with that pattern from our corpus.</S>
			<S sid ="143" ssid = "41">For the proposed method we evaluate noun pairs in the context of the (noun pair, sentence) triple with the Proposed (L) Proposed (S) Prop.</S>
			<S sid ="144" ssid = "42">w/o CDP (L) Prop.</S>
			<S sid ="145" ssid = "43">w/o CDP (S) Prop.</S>
			<S sid ="146" ssid = "44">w/o pattern (L) Prop.</S>
			<S sid ="147" ssid = "45">w/o pattern (S) Espresso (L) Espresso (S) CDP (L) CDP (S) highest SVM score.</S>
			<S sid ="148" ssid = "46">4.2 Results and Discussion.</S>
			<S sid ="149" ssid = "47">The performance of each method on the causality, prevention and material relations are shown in Figures 2, 3 and 4 respectively.</S>
			<S sid ="150" ssid = "48">In the causality experiments (Figure 2) the proposed method performs on par with CDP for the top 25,000 results, both achieving close to 90% precision.</S>
			<S sid ="151" ssid = "49">But whereas CDP’s per it remains very difficult to prevent semantic drift (Komachi et al., 2008) from occurring.</S>
			<S sid ="152" ssid = "50">One small adjustment to the algorithm stabilized the bootstrapping process considerably and gave overall better results.</S>
			<S sid ="153" ssid = "51">In the pattern induction step (section 3.2 in (Pantel and Pennacchiotti, 2006a)), Espresso computes a reliability score for each candidate pattern based on the weighted PMI of the pattern with all instances extracted so far.</S>
			<S sid ="154" ssid = "52">As the number of extracted instances increases this disproportionally favours high frequency (i.e. generic) patterns, so instead of using all instances for computing pattern reliability we only use the m most reliable instances from the previous iteration, which were used to extract the candidate patterns of the current iteration (m = 200, like the original).</S>
			<S sid ="155" ssid = "53">Figure 4: Precision of acquired relations (material).</S>
			<S sid ="156" ssid = "54">L and S denote lenient and strict evaluation.</S>
			<S sid ="157" ssid = "55">formance drops from there our method maintains the same high precision throughout (84.6%, lenient).</S>
			<S sid ="158" ssid = "56">Both our method and CDP outperform Espresso by a large margin.</S>
			<S sid ="159" ssid = "57">For the prevention relation (Figure 3), precision is considerably lower for all methods except the top 10,000 of CDP (82% precision, lenient).</S>
			<S sid ="160" ssid = "58">The proposed method peaks at around 20,000 results (67% precision, lenient) and performance remains more or less constant from there on.</S>
			<S sid ="161" ssid = "59">The proposed method overtakes CDP’s performance around the top 45,000 mark, which suggests that combining the results of both methods may be beneficial.</S>
			<S sid ="162" ssid = "60">In the material relations the proposed method slightly outperforms both pattern based methods in the top 10,000 results (92% precision, lenient).</S>
			<S sid ="163" ssid = "61">However for this relation our method produced only 35,409 instances.</S>
			<S sid ="164" ssid = "62">The reason is that the top 25,000 results of CDP were all extracted by just 12 patterns, and these contained many patterns whose syntactic head is not a verb or adjective (like “Y rich in X” or “Y containing X”).</S>
			<S sid ="165" ssid = "63">Only 12 partial patterns were obtained, which greatly reduced the output of the proposed method.</S>
			<S sid ="166" ssid = "64">Taking into account the high performance of CDP for material relations, this suggests 20 15 10 5 0 1 2 32 1024 32768 1.05x106 3.36x107that for some relations our method’s N and M pa rameters could use some tuning.</S>
			<S sid ="167" ssid = "65">In conclusion, in all three relations our method performs at a level comparable to state-of-the-art pattern based methods, which is remarkable given that it only uses indirect evidence.</S>
			<S sid ="168" ssid = "66">Dealing with Difficult Extractions How does our method handle noun pairs that are difficult to acquire by pattern based methods?</S>
			<S sid ="169" ssid = "67">The graphs marked “Prop.</S>
			<S sid ="170" ssid = "68">w/o CDP” (Proposed without CDP) in Figures 2 , 3 and 4 show the number and precision of evaluated samples from the proposed method that do not co-occur in our corpus with any of the patterns that extracted the top N results of the first stage extractor.</S>
			<S sid ="171" ssid = "69">These graphs show that our method is not simply regenerating CDP’s top results but actually extracts many noun pairs that do not co-occur in patterns that are easily learned.</S>
			<S sid ="172" ssid = "70">Figure 2 shows that roughly two thirds of the evaluated samples are in this category, and that their performance is not significantly worse than the overall result.</S>
			<S sid ="173" ssid = "71">The same conclusion holds for the prevention results (Figure 3), where over 80% of the proposed method’s samples are noun pairs that do not co-occur with easily learnable patterns.</S>
			<S sid ="174" ssid = "72">Their precision is about 5% worse than all samples from the proposed method.</S>
			<S sid ="175" ssid = "73">For material relations (Figure 4) about half of all evaluated samples are in this category, but their precision is markedly worse compared to all results.</S>
			<S sid ="176" ssid = "74">For genuinely infrequent patterns, the graphs marked “Prop.</S>
			<S sid ="177" ssid = "75">w/o pattern” (Proposed without pattern) in Figures 2 , 3 and 4 show the number and precision of noun pairs evaluated for the proposed # of noun pairs co-occurring with patterns Pattern frequency, CDP Pattern frequency, Proposed Pattern frequency, Espresso Figure 5: Frequencies of patterns in the evaluation data (causation).</S>
			<S sid ="178" ssid = "76">extract fewer than 10 noun pairs in 50 million Web pages.</S>
			<S sid ="179" ssid = "77">Note that in theory it is possible that these noun pairs could not be acquired by pattern based methods due to this threshold — patterns must be able to extract more than 10 different noun pairs in a subset of our corpus, while the proposed method does not have this constraint.</S>
			<S sid ="180" ssid = "78">So at least in theory, pattern based methods might be able to acquire all noun pairs obtained by our method by lowering this threshold.</S>
			<S sid ="181" ssid = "79">To see that this is unlikely to be the case, consider Figure 5, which shows the pattern frequency of the patterns induced by CDP and Espresso for the causality experiment.</S>
			<S sid ="182" ssid = "80">The x-axis represents pattern frequency in terms of the number of unique noun pairs a pattern co-occurs with in our corpus (on a log scale), and the y-axis shows the percentage of samples that was extracted by patterns of a given frequency.4 Figure 5 shows that for the pattern based methods, the large majority of noun pairs was extracted by patterns that co-occur with several thousand different noun pairs.</S>
			<S sid ="183" ssid = "81">Extrapolating the original frequency threshold of 10 nounpairs to the size of our entire corpus roughly corresponds to about 120 distinct noun pairs (10 times in 1/12th of the entire corpus).</S>
			<S sid ="184" ssid = "82">In Figure 5, the histograms for the pattern based methods CDP and Espresso start around 1000 noun pairs, which is far above this new lowerbound.</S>
			<S sid ="185" ssid = "83">method that were acquired from sentences without 4 In the case of CDP we ignore semantic class restrictions.</S>
			<S sid ="186" ssid = "84">any discernible pattern.</S>
			<S sid ="187" ssid = "85">As explained in section 4 above, these constitute noun pairs co-occurring in a sentence in which the path of dependency relations connecting them is either longer than 8 nodes or can on the patterns when comparing frequencies.</S>
			<S sid ="188" ssid = "86">For Espresso, the most frequent pattern (“Y by X ” at the 24,889,329 data point on the x-axis) extracted up to 53.8% of the results, but the graph was cut at 20% for readability.</S>
			<S sid ="189" ssid = "87">C a u s a l i t y ⟨ カテ コラ ミン ⟩ が心 拍数 の急 上昇 をも たら すこ とか ら、 血管 内の 血行 状態 の変 化が 血管 内障 害に つな がり 、[ 血栓 形成 ] を促 進す る。 B e c a u s e ⟨ c a t e c h o l a m i n e ⟩ c a u s e s a r a p i d i n c r e a s e o f h e a r t r a t e , t h e c h a n g e o f c i r c u l a t i o n i n s i d e t h e b l o o d v e s s e l s l e a d s t o b l o o d v e s s e l d i s o r d e r s a n d p r o m o t e s [ t h r o m b u s g e n e r a t i o n ] . ⟨ 頻 脈 発 作 ⟩ が 始 ま っ て キ シ ロ カ イ ン を 静 注 し た と こ ろ 、 患 者 さ ん が 突 然 意 識 を な く し て [全 身 痙 攣] を 起 こ し た と い う こ と です 。 Wh en we inje cted Xylo cain e duri ng a ⟨tac hyc ardi a seiz ure⟩ , the pati ent sud denl y lost cons ciou snes s and fell into a fit of [con vuls ions ].</S>
			<S sid ="190" ssid = "88">そ の 理 由 と し て は ⟨ 動 物 性 た ん ぱ く 質 ⟩ を 多 く 取 る こ と で [わ き が] の 原 因 物 質 が 増 加 す る か ら で す 。 (.</S>
			<S sid ="191" ssid = "89">) The reas on is that by taki ng a lot of ⟨ani mal prot eins ⟩ the caus ative age nts of [trag oma sch alia] incr eas e. * 抗 酸 化 機 能 を 高 め 、 老 化 や ⟨ 生 活 習 慣 病 ⟩ の 原 因 と な る 活 性 化 酸 素 を 消 去 す る 作 用 が あ る [ラ ド ン] 。 * [Ra don] heig hten s the (bo dy’s ) anti oxid ativ e func tion and is effe ctiv e for elim inati ng activ ated oxy gen, whi ch is a caus e of agin g and ⟨life style relat ed⟩ dise ase s. P r e v e n t i o n マ グ ロ の ト ロ 、 中 ト ロ の 部 分 に は 、 Ｄ Ｈ Ａ や ⟨ Ｅ Ｐ Ａ ⟩ が 豊 富 に 含 ま れ て い る の で 、[ 神 経 痛] の 予 防 食 材 と し て 有 効 です 。 Bec aus e the fatty mea t of tuna cont ains DH A and ⟨EP A⟩ in abu nda nce, it is effe ctiv e for prev enti ng [neu ralgi a].</S>
			<S sid ="192" ssid = "90">空 気 の 代 わ り に ⟨ 窒 素 ガ ス ⟩ を 使 用 す れ ば [粉 塵 爆 発] の 予 防 に な り ま す 。 If you use ⟨nitr oge n gas⟩ inste ad of air you may prev ent [dus t expl osio ns].</S>
			<S sid ="193" ssid = "91">ヨ ー ロ ッ パ で は 古 く か ら ⟨ ク ミ ス ク チ ン ⟩ の お 茶 は 「 や せ る お 茶 で あ る 」 と い わ れ 中 性 脂 肪 や [成 人 病] の 予 防 に 良 い そ う で す 。 In anci ent Eur ope ⟨ort hosi pho n arist atus ⟩ tea was calle d a “diet tea” , and sup pos edly it help s prev enti ng trigl ycer ides and [adu lt dise ase s].</S>
			<S sid ="194" ssid = "92">* ⟨ 幌 ⟩ の 収 納 時 に ス ク リ ー ン の 間 に 挟 ん で 、 ス ク リ ー ン の [ス リ キ ズ] を 防 ぐ も の で す 。 * (It) is som ethi ng that prev ents [scr atch es] on the scre en if the ⟨cal ash⟩ gets stuc k betw een the scre ens duri ng stor age.</S>
			<S sid ="195" ssid = "93">Table 2: Causality and Prevention relations acquired from Single Occurrence (SO) patterns.</S>
			<S sid ="196" ssid = "94">⟨X⟩ and [Y] indicate the relation instance’s source and target words, and “*” indicates erroneous extractions.</S>
			<S sid ="197" ssid = "95">Thus, pattern based methods naturally tend to induce patterns that are much more frequent than the range of patterns our method can capture, and it is unlikely that this is a result of implementation details like pattern frequency threshold.</S>
			<S sid ="198" ssid = "96">The precision of noun pairs in the category “Prop.</S>
			<S sid ="199" ssid = "97">w/o pattern” is clearly lower than the overall results, but the graphs demonstrate that our method still handles these difficult cases reasonably well.</S>
			<S sid ="200" ssid = "98">The 500 samples evaluated contained 155 such instances for causality, 403 for prevention and 276 for material.</S>
			<S sid ="201" ssid = "99">For prevention, the high ratio of these noun pairs helps explain why the overall performance was lower than for the other relations.</S>
			<S sid ="202" ssid = "100">Finally, the theoretical limiting case for pattern based algorithms consists of patterns that only co- occur with a single noun pair in the entire corpus (single occurrence or SO patterns).</S>
			<S sid ="203" ssid = "101">Pattern based methods learn new patterns that share many noun pairs with a set of reliable patterns in order to extract new relation instances.</S>
			<S sid ="204" ssid = "102">If a noun pair that co-occurs with a SO pattern also co-occurs with more reliable patterns there is no need to learn the SO pattern.</S>
			<S sid ="205" ssid = "103">If that same noun pair does not co-occur with any other reliable pattern, the SO pattern is beyond the reach of any pattern induction method.</S>
			<S sid ="206" ssid = "104">Thus, SO patterns are effectively useless for pattern based methods.</S>
			<S sid ="207" ssid = "105">For the 500 samples evaluated from the causality and prevention relations acquired by our method we found 7 causal noun pairs that co-occur only in SO patterns and 29 such noun pairs for prevention.</S>
			<S sid ="208" ssid = "106">The precision of these instances was 42.9% and 51.7% respectively.</S>
			<S sid ="209" ssid = "107">In total we found 8,716 causal noun pairs and 7,369 prevention noun pairs that co-occur only with SO patterns.</S>
			<S sid ="210" ssid = "108">Table 2 shows some example relations from our causality and prevention experiments that were extracted from SO patterns.</S>
			<S sid ="211" ssid = "109">To conclude, our method is able to acquire correct relations even from the most extreme infrequent expressions.</S>
			<S sid ="212" ssid = "110">Semantic Classes, Partial Patterns or Both?</S>
			<S sid ="213" ssid = "111">In the remainder of this section we look at how the combination of semantic word classes and partial patterns benefits our method.</S>
			<S sid ="214" ssid = "112">For each relation we evaluated 1000 random (noun pair, sentence) triples satisfying the two conditions from section 3 — matching semantic class pairs and partial patterns.</S>
			<S sid ="215" ssid = "113">Surprisingly, the precision of these samples was 59% for causality, 40% for prevention and 50.4% for material, showing just how compelling these two types of indirect evidence are in combination.</S>
			<S sid ="216" ssid = "114">To estimate the relative contribution of each heuristic we compared our candidate generation method against two baselines.</S>
			<S sid ="217" ssid = "115">The first baseline evaluates the precision of random noun pairs from 100 100 90 90 80 80 70 70 60 50 60 40 50 0 200 400 600 800 1000 (noun pair, sentence) triples ranked by score Base features only All minus semantic classes All minus infix words All minus partial patterns All features 30 0 200 400 600 800 1000 (noun pair, sentence) triples ranked by score Base features only All minus semantic classes All minus infix words All minus partial patterns All features Figure 6: Contribution of feature sets (causality).</S>
			<S sid ="218" ssid = "116">Figure 8: Contribution of feature sets (material).</S>
			<S sid ="219" ssid = "117">100 90 80 70 60 50 40 30 0 2 0 0 4 0 0 6 0 0 8 0 0 1 0 0 0 ( n o u n p a i r , s e n t e n c e ) t r i p l e s r a n k e d b y s c o r e B a s e f e a t u r e s o n l y A l l m i n u s s e m a n t i c c l a s s e s A l l m i n u s i n f i x w o r d s A l l m i n u s p a r t i a l p a t t e r n s A l l f e a t u r e s forma nce the unigra m, bigra m and partof speec h featur es.</S>
			<S sid ="220" ssid = "118">“All feature s” uses all feature s in Table 1.</S>
			<S sid ="221" ssid = "119">The other graphs show the effect of remov ing one type of feature s. These graphs sugge st that the contri bution of the individ ual featur e types (sema n- tic class inform ation, partial patter ns or infix words ) to the classifi cation perfor mance is relativ ely minor , but in combi nation they do give a marke d impro vement over the base feature s, at least for some relations like causat ion and mater ial.</S>
			<S sid ="222" ssid = "120">In other words, the main contrib ution of seman tic word classe s and partial patter ns to our metho d’s perfor mance lies not Figure 7: Contribution of feature sets (prevention).</S>
			<S sid ="223" ssid = "121">the target semantic classes that co-occur in a sentence.</S>
			<S sid ="224" ssid = "122">The second baseline does the same for the second heuristic, selecting random sentences containing a noun pair that matches some partial pattern.</S>
			<S sid ="225" ssid = "123">Evaluating 100 samples for causality and prevention, we found the precision of the semantic class baseline was 16% for causality and 5% for prevention.</S>
			<S sid ="226" ssid = "124">The pattern fragment baseline gave 9% for causality and 22% for prevention.</S>
			<S sid ="227" ssid = "125">This is considerably lower than the precision of random samples that satisfy both the semantic class and partial pattern conditions, showing that the combination of semantic classes and partial patterns is more effective than either one individually.</S>
			<S sid ="228" ssid = "126">Finally, we investigated the effect of the various feature sets used in the classifier.</S>
			<S sid ="229" ssid = "127">Figures 6, 7 and 8 show the results for the respective semantic relations.</S>
			<S sid ="230" ssid = "128">The “Base features” graph shows the per in the final classification step but seems to occur at earlier stages of the process, in the candidate and training data generation steps.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "5">
			<S sid ="231" ssid = "1">Using lexico-syntactic patterns to extract semantic relations was first explored by Hearst (Hearst, 1992), and has inspired a large body of work on semi- supervised relation acquisition methods (Berland and Charniak, 1999; Agichtein and Gravano, 2000; Etzioni et al., 2004; Pantel and Pennacchiotti, 2006b; Pas¸ca et al., 2006; De Saeger et al., 2009), two of which were used in this work.</S>
			<S sid ="232" ssid = "2">Some researchers have addressed the sparseness problems inherent in pattern based methods.</S>
			<S sid ="233" ssid = "3">Downey et al.</S>
			<S sid ="234" ssid = "4">(2007) starts from the output of the unsupervised information extraction system TextRunner (Banko and Etzioni, 2008), and uses language modeling techniques to estimate the reliability of sparse extractions.</S>
			<S sid ="235" ssid = "5">Pas¸ca et al.</S>
			<S sid ="236" ssid = "6">(2006) alle viates pattern sparseness by using infix patterns that are generalized using classes of distributionally similar words.</S>
			<S sid ="237" ssid = "7">In addition, their method employs clustering based semantic similarities to filter newly extracted instances in each iteration of the bootstrap- ping process.</S>
			<S sid ="238" ssid = "8">A comparison with our method would have been instructive, but we were unable to implement their method because the original paper contains insufficient detail to allow replication.</S>
			<S sid ="239" ssid = "9">There is a large body of research in the supervised tradition that does not use explicit pattern representations — kernel based methods (Zelenko et al., 2003; Culotta, 2004; Bunescu and Mooney, 2005) and CRF based methods (Culotta et al., 2006).</S>
			<S sid ="240" ssid = "10">These approaches are all fully supervised, whereas in our work the automatic generation of candidates and training data is an integral part of the method.</S>
			<S sid ="241" ssid = "11">An interesting alternative is distant supervision (Mintz et al., 2009), which trains a classifier using an existing database (Freebase) containing thousands of semantic relations, with millions of instances.</S>
			<S sid ="242" ssid = "12">We believe our method is more general, as depending on external resources like a database of semantic relations limits both the range of semantic relations (i.e., Freebase contains only relations between named entities, and none of the relations in this work) and languages (i.e., no resource comparable to Freebase exists for Japanese) to which the technology can be applied.</S>
			<S sid ="243" ssid = "13">Furthermore, it is unclear whether distant supervision can deal with noisy input such as automatically acquired relation instances.</S>
			<S sid ="244" ssid = "14">Finally, inference based methods (Carlson et al., 2010; Schoenmackers et al., 2010; Tsuchida et al., 2010) are another attempt at relation acquisition that goes beyond pattern matching.</S>
			<S sid ="245" ssid = "15">Carlson et al.</S>
			<S sid ="246" ssid = "16">(2010) proposed a method based on inductive logic programming (Quinlan, 1990).</S>
			<S sid ="247" ssid = "17">Schoenmackers et al.</S>
			<S sid ="248" ssid = "18">(2010) takes relation instances produced by TextRunner (Banko and Etzioni, 2008) as input and induces first-order Horn clauses, and new instances are infered using a Markov Logic Network (Richardson and Domingo, 2006; Huynh and Mooney, 2008).</S>
			<S sid ="249" ssid = "19">Tsuchida et al.</S>
			<S sid ="250" ssid = "20">(2010) generated new relation hypotheses by substituting words in seed instances with distributionally similar words.</S>
			<S sid ="251" ssid = "21">The difference between these works and ours lies in the treatment of evidence.</S>
			<S sid ="252" ssid = "22">While the above methods learn infer ence rules to acquire new relation instances from independent information sources scattered across different Web pages, our method takes the other option of working with all the clues and indirect evidence a single sentence can provide.</S>
			<S sid ="253" ssid = "23">In the future, a combination of both approaches may prove beneficial.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "6">
			<S sid ="254" ssid = "1">We have proposed a relation acquisition method that is able to acquire semantic relations from infrequent expressions by focusing on the evidence provided by semantic word classes and partial pattern matching instead of direct extraction patterns.</S>
			<S sid ="255" ssid = "2">We experimentally demonstrated the effectiveness of this approach on three relation acquisition tasks, causality, prevention and material relations.</S>
			<S sid ="256" ssid = "3">In addition we showed our method could acquire a significant number of relation instances that are found in extremely infrequent expressions, the most extreme case of which are single occurrence patterns, which are beyond the reach of existing pattern based methods.</S>
			<S sid ="257" ssid = "4">We believe this ability is of crucial importance for acquiring valuable long tail instances.</S>
			<S sid ="258" ssid = "5">In future work we will investigate whether the current framework can be extended to acquire inter-sentential relations.</S>
	</SECTION>
</PAPER>
