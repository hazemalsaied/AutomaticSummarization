<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">At present, adapting an Information Extraction system to new topics is an expensive and slow process, requiring some knowledge engineering for each new topic.</S>
		<S sid ="2" ssid = "2">We propose a new paradigm of Information Extraction which operates &apos;on demand&apos; in response to a user&apos;s query.</S>
		<S sid ="3" ssid = "3">On-demand Information Extraction (ODIE) aims to completely eliminate the customization effort.</S>
		<S sid ="4" ssid = "4">Given a user’s query, the system will automatically create patterns to extract salient relations in the text of the topic, and build tables from the extracted information using paraphrase discovery technology.</S>
		<S sid ="5" ssid = "5">It relies on recent advances in pattern discovery, paraphrase discovery, and extended named entity tagging.</S>
		<S sid ="6" ssid = "6">We report on experimental results in which the system created useful tables for many topics, demonstrating the feasibility of this approach.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Most of the world’s information is recorded, passed down, and transmitted between people in text form.</S>
			<S sid ="8" ssid = "8">Implicit in most types of text are regularities of information structure - events which are reported many times, about different individuals, in different forms, such as layoffs or mergers and acquisitions in news articles.</S>
			<S sid ="9" ssid = "9">The goal of information extraction (IE) is to extract such information: to make these regular structures explicit, in forms such as tabular databases.</S>
			<S sid ="10" ssid = "10">Once the information structures are explicit, they can be processed in many ways: to mine information, to search for specific information, to generate graphical displays and other summaries.</S>
			<S sid ="11" ssid = "11">However, at present, a great deal of knowledge for automatic Information Extraction must be coded by hand to move a system to a new topic.</S>
			<S sid ="12" ssid = "12">For example, at the later MUC evaluations, system developers spent one month for the knowledge engineering to customize the system to the given test topic.</S>
			<S sid ="13" ssid = "13">Research over the last decade has shown how some of this knowledge can be obtained from annotated corpora, but this still requires a large amount of annotation in preparation for a new task.</S>
			<S sid ="14" ssid = "14">Improving portability - being able to adapt to a new topic with minimal effort – is necessary to make Information Extraction technology useful for real users and, we be lieve, lead to a breakthrough for the application of the technology.</S>
			<S sid ="15" ssid = "15">We propose ‘On-demand information extraction (ODIE)’: a system which automatically identifies the most salient structures and extracts the information on the topic the user demands.</S>
			<S sid ="16" ssid = "16">This new IE paradigm becomes feasible due to recent developments in machine learning for NLP, in particular unsupervised learning methods, and it is created on top of a range of basic language analysis tools, including POS taggers, dependency analyzers, and extended Named Entity taggers.</S>
	</SECTION>
	<SECTION title="Overview. " number = "2">
			<S sid ="17" ssid = "1">The basic functionality of the system is the following.</S>
			<S sid ="18" ssid = "2">The user types a query / topic description in keywords (for example, “merge” or “merger”).</S>
			<S sid ="19" ssid = "3">Then tables will be created automatically in several minutes, rather than in a month of human labor.</S>
			<S sid ="20" ssid = "4">These tables are expected to show information about the salient relations for the topic.</S>
			<S sid ="21" ssid = "5">Figure 1 describes the components and how this system works.</S>
			<S sid ="22" ssid = "6">There are six major compo nents in the system.</S>
			<S sid ="23" ssid = "7">We will briefly describe each component and how the data is processed; then, in the next section, four important components will be described in more detail.</S>
			<S sid ="24" ssid = "8">731 Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 731–738, Sydney, July 2006.</S>
			<S sid ="25" ssid = "9">Qc 2006 Association for Computational Linguistics Description of task (query) 1) Relevant documents IR system 6) Extended NE tagger 5) Language Analyzer Patterns 2) Pattern discovery 3) Paraphrase discovery Pattern sets 4) Table construction P a r a p h r a s e Know ledge base Table Figure 1.</S>
			<S sid ="26" ssid = "10">System overview 1) IR system: Based on the query given by the user, it retrieves relevant documents from the document database.</S>
			<S sid ="27" ssid = "11">We used a simple TF/IDF IR system we developed.</S>
			<S sid ="28" ssid = "12">2) Pattern discovery: First, the texts in the retrieved documents are analyzed using a POS tagger, a dependency analyzer and an Extended NE (Named Entity) tagger, which will be described later.</S>
			<S sid ="29" ssid = "13">Then this component extracts sub-trees of dependency trees which are relatively frequent in the retrieved documents compared to the entire corpus.</S>
			<S sid ="30" ssid = "14">It counts the frequencies in the retrieved texts of all sub- trees with more than a certain number of nodes and uses TF/IDF methods to score them.</S>
			<S sid ="31" ssid = "15">The top-ranking sub-trees which contain NEs will be called patterns, which are expected to indicate salient relationships of the topic and will be used in the later components.</S>
			<S sid ="32" ssid = "16">3) Paraphrase discovery: In order to find semantic relationships between patterns, i.e. to find patterns which should be used to build the same table, we use paraphrase discovery techniques.</S>
			<S sid ="33" ssid = "17">The paraphrase discovery was conducted off- line and created a paraphrase knowledge base.</S>
			<S sid ="34" ssid = "18">4) Table construction: In this component, the patterns created in (2) are linked based on the paraphrase knowledge base created by (3), producing sets of patterns which are semantically equivalent.</S>
			<S sid ="35" ssid = "19">Once the sets of patterns are created, these patterns are applied to the documents retrieved by the IR system (1).</S>
			<S sid ="36" ssid = "20">The matched patterns pull out the entity instances and these entities are aligned to build the final tables.</S>
			<S sid ="37" ssid = "21">5) Language analyzers: We use a POS tagger and a dependency analyzer to analyze the text.</S>
			<S sid ="38" ssid = "22">The analyzed texts are used in pattern discovery and paraphrase discovery.</S>
			<S sid ="39" ssid = "23">6) Extended NE tagger: Most of the participants in events are likely to be Named Entities.</S>
			<S sid ="40" ssid = "24">However, the traditional NE categories are not sufficient to cover most participants of various events.</S>
			<S sid ="41" ssid = "25">For example, the standard MUC’s 7 NE categories (i.e. person, location, organization, percent, money, time and date) miss product names (e.g. Windows XP, Boeing 747),event names (Olympics, World War II), nu merical expressions other than monetary expressions, etc. We used the Extended NE categories with 140 categories and a tagger based on the categories.</S>
	</SECTION>
	<SECTION title="Details of Components. " number = "3">
			<S sid ="42" ssid = "1">In this section, four important components will be described in detail.</S>
			<S sid ="43" ssid = "2">Prior work related to each component is explained and the techniques used in our system are presented.</S>
			<S sid ="44" ssid = "3">3.1 Pattern Discovery.</S>
			<S sid ="45" ssid = "4">The pattern discovery component is responsible for discovering salient patterns for the topic.</S>
			<S sid ="46" ssid = "5">The patterns will be extracted from the documents relevant to the topic which are gathered by an IR system.</S>
			<S sid ="47" ssid = "6">Several unsupervised pattern discovery techniques have been proposed, e.g.</S>
			<S sid ="48" ssid = "7">(Riloff 96), (Agichtein and Gravano 00) and (Yangarber et al. 00).</S>
			<S sid ="49" ssid = "8">Most recently we (Sudo et al. 03) proposed a method which is triggered by a user query to discover important patterns fully automatically.</S>
			<S sid ="50" ssid = "9">In this work, three different representation models for IE patterns were compared, and the sub-tree model was found more effective compared to the predicate-argument model and the chain model.</S>
			<S sid ="51" ssid = "10">In the sub-tree model, any connected part of a dependency tree for a sentence can be considered as a pattern.</S>
			<S sid ="52" ssid = "11">As it counts all possible sub-trees from all sentences in the retrieved documents, the computation is very expensive.</S>
			<S sid ="53" ssid = "12">This problem was solved by requiring that the sub-trees contain a predicate (verb) and restricting the number of nodes.</S>
			<S sid ="54" ssid = "13">It was implemented using the sub-tree counting algorithm proposed by (Abe et al. 02).</S>
			<S sid ="55" ssid = "14">The patterns are scored based on the relative frequency of the pattern in the retrieved documents (fr) and in the entire corpus (fall).</S>
			<S sid ="56" ssid = "15">The formula uses the TF/IDF idea (Formula 1).</S>
			<S sid ="57" ssid = "16">The system ignores very frequent patterns, as those patterns are so common that they are not likely to be important to any particular topic, and also very rare patterns, as most of those patterns are noise.</S>
			<S sid ="58" ssid = "17">case words.</S>
			<S sid ="59" ssid = "18">(COM means “company” and MNY means “money”) &lt;COM1&gt; &lt;agree to buy&gt; &lt;COM2&gt; &lt;for MNY&gt; &lt;COM1&gt; &lt;will acquire&gt; &lt;COM2&gt; &lt;for MNY&gt; &lt;a MNY merger&gt; &lt;of COM1&gt; &lt;and COM2&gt; Figure 2.</S>
			<S sid ="60" ssid = "19">Pattern examples 3.2 Paraphrase Discovery.</S>
			<S sid ="61" ssid = "20">The role of the paraphrase discovery component is to link the patterns which mean the same thing for the task.</S>
			<S sid ="62" ssid = "21">Recently there has been a growing amount of research on automatic paraphrase discovery.</S>
			<S sid ="63" ssid = "22">For example, (Barzilay 01) proposed a method to extract paraphrases from parallel translations derived from one original document.</S>
			<S sid ="64" ssid = "23">We proposed to find paraphrases from multiple newspapers reporting the same event, using shared Named Entities to align the phrases (Shinyama et al. 02).</S>
			<S sid ="65" ssid = "24">We also proposed a method to find paraphrases in the context of two Named Entity instances in a large un-annotated corpus (Sekine 05).</S>
			<S sid ="66" ssid = "25">The phrases connecting two NEs are grouped based on two types of evidence.</S>
			<S sid ="67" ssid = "26">One is the identity of the NE instance pairs, as multiple instances of the same NE pair (e.g. Yahoo!</S>
			<S sid ="68" ssid = "27">and Overture) are likely to refer to the same relationship (e.g. acquisition).</S>
			<S sid ="69" ssid = "28">The other type of evidence is the keywords in the phrase.</S>
			<S sid ="70" ssid = "29">If we gather a lot of phrases connecting NE&apos;s of the same two NE types (e.g. company and company), we can cluster score(t : subtree) = f r (t) log( f all (t) + c) (1) these phrases and find some typical expressions (e.g. merge, acquisition, buy).</S>
			<S sid ="71" ssid = "30">The phrases are clustered based on these two types of evidence The scoring function sorts all patterns which contain at least one extended NE and the top 100 patterns are selected for later processing.</S>
			<S sid ="72" ssid = "31">Figure 2 shows examples of the discovered patterns for the “merger and acquisition” topic.</S>
			<S sid ="73" ssid = "32">Chunks are shown in brackets and extended NEs are shown in upper and sets of paraphrases are created.</S>
			<S sid ="74" ssid = "33">Basically, we used the paraphrases found by the approach mentioned above.</S>
			<S sid ="75" ssid = "34">For example, the expressions in Figure 2 are identified as paraphrases by this method; so these three patterns will be placed in the same pattern set.</S>
			<S sid ="76" ssid = "35">Note that there is an alternative method of paraphrase discovery, using a hand crafted synonym dictionary like WordNet (WordNet Home page).</S>
			<S sid ="77" ssid = "36">However, we found that the coverage of WordNet for a particular topic is not sufficient.</S>
			<S sid ="78" ssid = "37">For example, no synset covers any combinations of the main words in Figure 2, namely “buy”, “acquire” and “merger”.</S>
			<S sid ="79" ssid = "38">Furthermore, even if these words are found as synonyms, there is the additional task of linking expressions.</S>
			<S sid ="80" ssid = "39">For example, if one of the expressions is “reject the merger”, it shouldn’t be a paraphrase of “acquire”.</S>
			<S sid ="81" ssid = "40">3.3 Extended NE tagging.</S>
			<S sid ="82" ssid = "41">Named Entities (NE) were first introduced by the MUC evaluations (Grishman and Sundheim 96).</S>
			<S sid ="83" ssid = "42">As the MUCs concentrated on business and mili set using discovered paraphrase knowledge.</S>
			<S sid ="84" ssid = "43">Once the pattern sets are built, a table is created for each pattern set.</S>
			<S sid ="85" ssid = "44">We gather all NE instances matched by one of the patterns in the set.</S>
			<S sid ="86" ssid = "45">These instances are put in the same column of the table for the pattern set.</S>
			<S sid ="87" ssid = "46">When creating tables, we impose some restrictions in order to reduce the number of meaningless tables and to gather the same relations in one table.</S>
			<S sid ="88" ssid = "47">We require columns to have at least three filled instances and delete tables with fewer than three rows.</S>
			<S sid ="89" ssid = "48">These thresholds are empirically determined using training data.</S>
			<S sid ="90" ssid = "49">Newspaper Pattern Set ANrtiecwle1s Paper * COM1 agree to buy tary topics, the important entity types were limited to a few classes of names and numerical expressions.</S>
			<S sid ="91" ssid = "50">However, along with the development of Information Extraction and Question Answering technologies, people realized that there should be more and finer categories for NE.</S>
			<S sid ="92" ssid = "51">We proposed one of those extended NE sets (Sekine 02).</S>
			<S sid ="93" ssid = "52">It includes 140 hierarchical categories.</S>
			<S sid ="94" ssid = "53">For example, ABC agreed to buy CDE for $1M ….……………… Article 2 a $20M merger of FGH and IJK Constructed table COM2 for MNY * COM1 will acquire COM2 for MNY * a MNY merger of COM1 and COM2 the categories include Company, Company group, Military, Government, Political party, and International Organization as subcategories of Organization.</S>
			<S sid ="95" ssid = "54">Also, new categories are introduced such as Vehicle, Food, Award, Religion, Language, Offense, Art and so on as subcategories of Product, as well as Event, Natural Object, Vocation, Unit, Weight, Temperature, Number of people and so on.</S>
			<S sid ="96" ssid = "55">We used a rule-based tagger developed to tag the 140 categories for this experiment.</S>
			<S sid ="97" ssid = "56">Note that, in the proposed method, the slots of the final table will be filled in only with instances of these extended Named Entities.</S>
			<S sid ="98" ssid = "57">Most common nouns, verbs or sentences can’t be entries in the table.</S>
			<S sid ="99" ssid = "58">This is obviously a limitation of the proposed method; however, as the categories are designed to provide good coverage for a factoid type QA system, most interesting types of entities are covered by the categories.</S>
			<S sid ="100" ssid = "59">3.4 Table Construction.</S>
			<S sid ="101" ssid = "60">Basically the table construction is done by applying the discovered patterns to the original corpus.</S>
			<S sid ="102" ssid = "61">The discovered patterns are grouped into pattern Article Company Money 1 ABC, CDE $1M.</S>
			<S sid ="103" ssid = "62">2 FGH, IJK $20M.</S>
			<S sid ="104" ssid = "63">Figure 3.</S>
			<S sid ="105" ssid = "64">Table Construction</S>
	</SECTION>
	<SECTION title="Experiments. " number = "4">
			<S sid ="106" ssid = "1">4.1 Data and Processing.</S>
			<S sid ="107" ssid = "2">We conducted the experiments using the 1995 New York Times as the corpus.</S>
			<S sid ="108" ssid = "3">The queries used for system development and threshold tuning were created by the authors, while queries based on the set of event types in the ACE extraction evaluations were used for testing.</S>
			<S sid ="109" ssid = "4">A total of 31 test queries were used; we discarded several queries which were ambiguous or uncertain.</S>
			<S sid ="110" ssid = "5">The test queries were derived from the example sentences for each event type in the ACE guidelines.</S>
			<S sid ="111" ssid = "6">Examples of queries are shown in the Appendix.</S>
			<S sid ="112" ssid = "7">At the moment, the whole process takes about 15 minutes on average for each query on a Pentium 2.80GHz processor running Linux.</S>
			<S sid ="113" ssid = "8">The corpus was analyzed in advance by a POS tagger, NE tagger and dependency analyzer.</S>
			<S sid ="114" ssid = "9">The processing and counting of sub-trees takes the majority (more than 90%) of the time.</S>
			<S sid ="115" ssid = "10">We believe we can easily make it faster by programming techniques, for example, using distributed computing.</S>
			<S sid ="116" ssid = "11">4.2 Result and Evaluation.</S>
			<S sid ="117" ssid = "12">Out of 31 queries, the system is unable to build any tables for 11 queries.</S>
			<S sid ="118" ssid = "13">The major reason is that the IR component can’t find enough newspaper articles on the topic.</S>
			<S sid ="119" ssid = "14">It retrieved only a few articles for topics like “born”, “divorce” or “injure” from The New York Times.</S>
			<S sid ="120" ssid = "15">For the moment, we will focus on the 20 queries for which tables were built.</S>
			<S sid ="121" ssid = "16">The Appendix shows some examples of queries and the generated tables.</S>
			<S sid ="122" ssid = "17">In total, 127 tables are created for the 20 topics, with one to thirteen tables for each topic.</S>
			<S sid ="123" ssid = "18">The number of columns in a table ranges from 2 to 10, including the document ID column, and the average number of columns is 3.0.</S>
			<S sid ="124" ssid = "19">The number of rows in a table range from 3 to 125, and the average number of rows is 16.9.</S>
			<S sid ="125" ssid = "20">The created tables are usually not fully filled; the average rate is 20.0%.</S>
			<S sid ="126" ssid = "21">In order to measure the potential and the usefulness of the proposed method, we evaluate the result based on three measures: usefulness, argument role coverage, and correctness.</S>
			<S sid ="127" ssid = "22">For the usefulness evaluation, we manually reviewed the tables to determine whether a useful table is included or not.</S>
			<S sid ="128" ssid = "23">This is inevitably subjective, as the user does not specify in advance what table rows and columns are expected.</S>
			<S sid ="129" ssid = "24">We asked a subject to judge usefulness in three grades; A) very useful – for the query, many people might want to use this table for the further investigation of the topic, B) useful – at least, for some purpose, some people might want to use this table for further investigation and C) not useful – no one will be interested in using this table for further investigation.</S>
			<S sid ="130" ssid = "25">The argument role coverage measures the percentage of the roles specified for each ACE event type which appeared as a column in one or more of the created tables for that event type.</S>
			<S sid ="131" ssid = "26">The correctness was measured based on whether a row of a table reflects the correct information.</S>
			<S sid ="132" ssid = "27">As it is impossible to evaluate all the data, the evaluation data are selected randomly.</S>
			<S sid ="133" ssid = "28">Table 1 shows the usefulness evaluation result.</S>
			<S sid ="134" ssid = "29">Out of 20 topics, two topics are judged very useful and twelve are judged useful.</S>
			<S sid ="135" ssid = "30">The very useful top ics are “fine” (Q4 in the appendix) and “acquit” (not shown in the appendix).</S>
			<S sid ="136" ssid = "31">Compared to the results in the ‘useful’ category, the tables for these two topics have more slots filled and the NE types of the fillers have fewer mistakes.</S>
			<S sid ="137" ssid = "32">The topics in the “not useful” category are “appeal”, “execute”, “fired”, “pardon”, “release” and “trial”.</S>
			<S sid ="138" ssid = "33">These are again topics with very few relevant articles.</S>
			<S sid ="139" ssid = "34">By increasing the corpus size or improving the IR component, we may be able to improve the performance for these topics.</S>
			<S sid ="140" ssid = "35">The majority category, “useful”, has 12 topics.</S>
			<S sid ="141" ssid = "36">Five of them can be found in the appendix (all those besides Q4).</S>
			<S sid ="142" ssid = "37">For these topics, the number of relevant articles in the corpus is relatively high and interesting relations are found.</S>
			<S sid ="143" ssid = "38">The examples in the appendix are selected from larger tables with many columns.</S>
			<S sid ="144" ssid = "39">Although there are columns that cannot be filled for every event instance, we found that the more columns that are filled in, the more useful and interesting the information is. Table 1.</S>
			<S sid ="145" ssid = "40">Usefulness evaluation result Ev al ua tio n N u m b e r o f t o p i c s Ve ry us ef ul 2 Us ef ul 1 2 N ot us ef ul 6 For the 14 “very useful” and “useful” topics, the role coverage was measured.</S>
			<S sid ="146" ssid = "41">Some of the roles in the ACE task can be filled by different types of Named Entities, for example, the “defendant” of a “sentence” event can be a Person, Organization or GPE.</S>
			<S sid ="147" ssid = "42">However, the system creates tables based on NE types; e.g. for the “sentence” event, a Person column is created, in which most of the fillers are defendants.</S>
			<S sid ="148" ssid = "43">In such cases, we regard the column as covering the role.</S>
			<S sid ="149" ssid = "44">Out of 63 roles for the 14 event types, 38 are found in the created tables, for a role coverage of 60.3%.</S>
			<S sid ="150" ssid = "45">Note that, by lowering the thresholds, the coverage can be increased to as much as 90% (some roles can’t be found because of Extended NE limitations or the rare appearance of roles) but with some sacrifice of precision.</S>
			<S sid ="151" ssid = "46">Table 2 shows the correctness evaluation results.</S>
			<S sid ="152" ssid = "47">We randomly select 100 table rows among the topics which were judged “very useful” or “useful”, and determine the correctness of the information by reading the newspaper articles the information was extracted from.</S>
			<S sid ="153" ssid = "48">Out of 100 rows, 84 rows have correct information in all slots.</S>
			<S sid ="154" ssid = "49">4 rows have some incorrect information in some of the columns, and 12 contain wrong information.</S>
			<S sid ="155" ssid = "50">Most errors are due to NE tagging errors (11 NE errors out of 16 errors).</S>
			<S sid ="156" ssid = "51">These errors include instances of people which are tagged as other categories, and so on.</S>
			<S sid ="157" ssid = "52">Also, by looking at the actual articles, we found that co-reference resolution could help to fill in more information.</S>
			<S sid ="158" ssid = "53">Because the important information is repeatedly mentioned in newspaper articles, referential expressions are often used.</S>
			<S sid ="159" ssid = "54">For example, in a sentence “In 1968 he was elected mayor of Indianapolis.”, we could not extract “he” at the moment.</S>
			<S sid ="160" ssid = "55">We plan to add coreference resolution in the near future.</S>
			<S sid ="161" ssid = "56">Other sources of error include: • The role of the entity is confused, i.e. victim and murderer • Different kinds of events are found in one table, e.g., the victory of Jack Nicklaus was found in first proposed by (Aone and RamosSantacruz 00) and the ACE evaluations of event detection follow this line (ACE Home Page).</S>
			<S sid ="162" ssid = "57">An unsupervised learning method has been applied to a more restricted IE task, Relation Discovery.</S>
			<S sid ="163" ssid = "58">(Hasegawa et al. 2004) used large corpora and an Extended Named Entity tagger to find novel relations and their participants.</S>
			<S sid ="164" ssid = "59">However, the results are limited to a pair of participants and because of the nature of the procedure, the discovered relations are static relations like a country and its presidents rather than events.</S>
			<S sid ="165" ssid = "60">Topic-oriented summarization, currently pursued by the DUC evaluations (DUC Home Page), is also closely related.</S>
			<S sid ="166" ssid = "61">The systems are trying to create summaries based on the specified topic for a manually prepared set of documents.</S>
			<S sid ="167" ssid = "62">In this case, if the result is suitable to present in table format, it can be handled by ODIE.</S>
			<S sid ="168" ssid = "63">Our previous study (Se the political election use terms like “win”) query (as both of them kine and Nobata 03) found that about one third of randomly constructed similar newspaper article • An unrelated but often collocate entity was included.</S>
			<S sid ="169" ssid = "64">For example, Year period expressions are found in “fine” events, as there are many expressions like “He was sentenced 3 years and fined $1,000”.</S>
			<S sid ="170" ssid = "65">Table 2.</S>
			<S sid ="171" ssid = "66">Correctness evaluation result Ev al ua tio n N u m b e r o f r o w s Co rre ct 8 4 Pa rti all y co rre ct 4 In co rre ct 1 2</S>
	</SECTION>
	<SECTION title="Related Work. " number = "5">
			<S sid ="172" ssid = "1">As far as the authors know, there is no system similar to ODIE.</S>
			<S sid ="173" ssid = "2">Several methods have been proposed to produce IE patterns automatically to facilitate IE knowledge creation, as is described in Section 3.1.</S>
			<S sid ="174" ssid = "3">But those are not targeting the fully automatic creation of a complete IE system for a new topic.</S>
			<S sid ="175" ssid = "4">There exists another strategy to extend the range of IE systems.</S>
			<S sid ="176" ssid = "5">It involves trying to cover a wide variety of topics with a large inventory of relations and events.</S>
			<S sid ="177" ssid = "6">It is not certain if there are only a limited number of topics in the world, but there are a limited number of high-interest topics, so this may be a reasonable solution from an engineering point of view.</S>
			<S sid ="178" ssid = "7">This line of research was clusters are well-suited to be presented in table format, and another one third of the clusters can be acceptably expressed in table format.</S>
			<S sid ="179" ssid = "8">This suggests there is a big potential where an ODIE-type system can be beneficial.</S>
	</SECTION>
	<SECTION title="Future Work. " number = "6">
			<S sid ="180" ssid = "1">We demonstrated a new paradigm of Information Extraction technology and showed the potential of this method.</S>
			<S sid ="181" ssid = "2">However, there are problems to be solved to advance the technology.</S>
			<S sid ="182" ssid = "3">One of them is the coverage of the extracted information.</S>
			<S sid ="183" ssid = "4">Although we have created useful tables for some topics, there are event instances which are not found.</S>
			<S sid ="184" ssid = "5">This problem is mostly due to the inadequate performance of the language analyzers (information retrieval component, dependency analyzer or Extended NE tagger) and the lack of a coreference analyzer.</S>
			<S sid ="185" ssid = "6">Even though there are possible applications with limited coverage, it will be essential to enhance these components and add coreference in order to increase coverage.</S>
			<S sid ="186" ssid = "7">Also, there are basic domain limitations.</S>
			<S sid ="187" ssid = "8">We made the system “on-demand” for any topic, but currently only within regular news domains.</S>
			<S sid ="188" ssid = "9">As configured, the system would not work on other domains such as a medical, legal, or patent domain, mainly due to the design of the extended NE hierarchy.</S>
			<S sid ="189" ssid = "10">While specific hierarchies could be incorporated for new domains, it will also be desirable to integrate bootstrapping techniques for rapid incremental additions to the hierarchy.</S>
			<S sid ="190" ssid = "11">Also at the moment, table column labels are simply Extended NE categories, and do not indicate the role.</S>
			<S sid ="191" ssid = "12">We would like to investigate this problem in the future.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "7">
			<S sid ="192" ssid = "1">In this paper, we proposed “On-demand Information Extraction (ODIE)”.</S>
			<S sid ="193" ssid = "2">It is a system which automatically identifies the most salient structures and extracts the information on whatever topic the user demands.</S>
			<S sid ="194" ssid = "3">It relies on recent advances in NLP technologies; unsupervised learning and several advanced NLP analyzers.</S>
			<S sid ="195" ssid = "4">Although it is at a preliminary stage, we developed a prototype system which has created useful tables for many topics and demonstrates the feasibility of this approach.</S>
	</SECTION>
	<SECTION title="Acknowledgements. " number = "8">
			<S sid ="196" ssid = "1">This research was supported in part by the Defense Advanced Research Projects Agency under Contract HR001106-C-0023 and by the National Science Foundation under Grant IIS0325657.</S>
			<S sid ="197" ssid = "2">This paper does not necessarily reflect the position of the U.S. Government.</S>
			<S sid ="198" ssid = "3">We would like to thank Prof. Ralph Grishman, Dr. Kiyoshi Sudo, Dr. Chikashi Nobata, Mr. Takaaki Hasegawa, Mr. Koji Murakami and Mr. Yusuke Shinyama for useful comments, discussion.</S>
	</SECTION>
</PAPER>
