<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">We are interested in the problem of word extraction from Chinese text collections.</S>
		<S sid ="2" ssid = "2">We define a word to be a meaningful string composed of several Chinese characters.</S>
		<S sid ="3" ssid = "3">For example, , ‘percent’, and , ‘more and more’, are not recognized as traditional Chinese words from the viewpoint of some people.</S>
		<S sid ="4" ssid = "4">However, in our work, they are words because they are very widely used and have specific meanings.</S>
		<S sid ="5" ssid = "5">We start with the viewpoint that a word is a distinguished linguistic entity that can be used in many different language environments.</S>
		<S sid ="6" ssid = "6">We consider the characters that are directly before a string (predecessors) and the characters that are directly after a string (successors) as important factors for determining the independence of the string.</S>
		<S sid ="7" ssid = "7">We call such characters accessors of the string, consider the number of distinct predecessors and successors of a string in a large corpus (TREC 5 and TREC 6 documents), and use them as the measurement of the context independency of a string from the rest of the sentences in the document.</S>
		<S sid ="8" ssid = "8">Our experiments confirm our hypothesis and show that this simple rule gives quite good results for Chinese word extraction and is comparable to, and for long words outperforms, other iterative methods.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="9" ssid = "9">Words are the basic linguistic units of natural language processing.</S>
			<S sid ="10" ssid = "10">The importance of word extraction is stressed in many papers.</S>
			<S sid ="11" ssid = "11">According to Huang, Chen, and Tsou (1996), the word is the basic unit in natural language processing (NLP), as it is at the lexical level where all modules interface.</S>
			<S sid ="12" ssid = "12">Possible modules involved are the lexicon, speech recognition, syntactic parsing, speech synthesis, semantic interpretation, and so on.</S>
			<S sid ="13" ssid = "13">Thus, the identification of lexical words and/or the delimitation of words in running texts is a prerequisite of NLP.</S>
			<S sid ="14" ssid = "14">Teahan et al.</S>
			<S sid ="15" ssid = "15">(2000) state that interpreting a text as a sequence of words is beneficial for some information retrieval and storage tasks: for example, full-text searches, word-based compression, and key-phrase extraction.</S>
			<S sid ="16" ssid = "16">According to Guo (1997), words and tokens are the primary building blocks in almost all linguistic theories and language-processing systems, including Japanese (Kobayasi, Tokumaga, and Tanaka 1994), Korean (Yun, Lee, and Rim 1995), German (Pachunke et al. 1992), and English (Garside, Leech, and Sampson 1987), in various media, such ∗ School of Computer Science and Technology, Jinan, PRC; Department of Computer Science, Tat Chee Avenue, Kowloon, Hong Kong.</S>
			<S sid ="17" ssid = "17">Email: fenghd@cs.cityu.edu.hk or fenghaodi@hotmail.com.</S>
			<S sid ="18" ssid = "18">† Department of Computer Science and Technology, Peking, PR China.</S>
			<S sid ="19" ssid = "19">Email: {ck99,zwmdcs}@mails.</S>
			<S sid ="20" ssid = "20">tsinghua.edu.cn.</S>
			<S sid ="21" ssid = "21">‡ Department of Computer Science, Tat Chee Avenue, Kowloon, Hong Kong.</S>
			<S sid ="22" ssid = "22">Email: csdeng@cityu.</S>
			<S sid ="23" ssid = "23">edu.hk.</S>
			<S sid ="24" ssid = "24">Oc 2004 Association for Computational Linguistics as continuous speech and cursive handwriting, and in numerous applications, such as translation, recognition, indexing, and proofreading.</S>
			<S sid ="25" ssid = "25">The identification of words in natural language is nontrivial since, as observed by Chao (1968), linguistic words often represent a different set than do sociological words.</S>
			<S sid ="26" ssid = "26">Chinese texts are character based, not word based.</S>
			<S sid ="27" ssid = "27">Each Chinese character stands for one phonological syllable and in most cases represents a morpheme.</S>
			<S sid ="28" ssid = "28">This presents a problem, as only less than 10% of the word types (and less than 50% of the tokens in a text) in Chinese are composed of a single character (Chen et al. 1993).</S>
			<S sid ="29" ssid = "29">However, Chinese texts, and texts in some other Oriental languages such as Japanese, do not have delimiters such as spaces to mark the boundaries of meaningful words.</S>
			<S sid ="30" ssid = "30">Even for English text, some phrases consist of several words.</S>
			<S sid ="31" ssid = "31">However, the problem in English is not as dominant a factor as in Chinese.</S>
			<S sid ="32" ssid = "32">How to extract words from Chinese texts is still an interesting problem.</S>
			<S sid ="33" ssid = "33">Note that word extraction is different from the very closely related problem of sentence segmentation.</S>
			<S sid ="34" ssid = "34">Word extraction aims to collect all of the meaningful strings in a text.</S>
			<S sid ="35" ssid = "35">Sentence segmentation partitions a sentence into several consecutive meaningful segments.</S>
			<S sid ="36" ssid = "36">Word extraction should be easier than sentence segmentation, and the problems involved in it can be solved using simpler methods.</S>
			<S sid ="37" ssid = "37">Some Chinese information-retrieval systems operate at the character level instead of the word level, for example, the Csmart system (Chien 1995).</S>
			<S sid ="38" ssid = "38">However, to further improve the efficiency of natural Chinese processing, it is commonly thought to be important to apply studies from linguistics (Kwok 1997).</S>
			<S sid ="39" ssid = "39">Lexicon construction is considered to be one of the most important tasks.</S>
			<S sid ="40" ssid = "40">Single Chinese characters can quite often carry different meanings.</S>
			<S sid ="41" ssid = "41">This ambiguity can be resolved when the characters are combined with other characters to form a word.</S>
			<S sid ="42" ssid = "42">Chinese words can be unigrams, bigrams, trigrams, or n-grams, where n &gt; 3.</S>
			<S sid ="43" ssid = "43">According to the Frequency Dictionary of Modern Chinese (Beijing Language Institute 1986), among the 9,000 most frequent Chinese words, 26.7% are unigrams, 69.8% are bigrams, 2.7% are trigrams, 0.007% are four-grams, and 0.002% are five-grams.</S>
			<S sid ="44" ssid = "44">There are lexicons for identifying some (and probably most of the frequent) words.</S>
			<S sid ="45" ssid = "45">However, sometimes less-frequent words are more effective.</S>
			<S sid ="46" ssid = "46">Weeber, Vos, and Baayen (2000) recently extracted side-effect-related terms in a medical-information extraction system and found that many of the terms had a frequency of less than five.</S>
			<S sid ="47" ssid = "47">This indicates that low-frequency words may also carry very important information.</S>
			<S sid ="48" ssid = "48">Our experiments show that we can extract low- frequency words using a simple method without overly degrading the precision.</S>
			<S sid ="49" ssid = "49">There are generally two directions in which words can be formed (Huang, Chen, and Tsou 1996).</S>
			<S sid ="50" ssid = "50">One is the deductive strategy, whereby words are identified through the segmentation of running texts.</S>
			<S sid ="51" ssid = "51">The other is the inductive strategy, which identifies words through the compositional process of morpho-lexical rules.</S>
			<S sid ="52" ssid = "52">This strategy represents words with common characteristics (e.g., numeric compounds) by rules.</S>
			<S sid ="53" ssid = "53">In Chinese text segmentation there are three basic approaches (Sproat et al. 1996): pure heuristic, pure statistical, and a hybrid of the two.</S>
			<S sid ="54" ssid = "54">The heuristic approach identifies words by applying prior knowledge or morpho-lexical rules governing the derivation of new words.</S>
			<S sid ="55" ssid = "55">The statistical approach identifies words based on the distribution of their components in a large corpus.</S>
			<S sid ="56" ssid = "56">Sproat and Shih (1990) develop a purely statistical method that utilizes the mutual information between two characters: I(x, y) = log p(x,y) ; the limitation of the method is that it can deal only with words of length two characters.</S>
			<S sid ="57" ssid = "57">Ge, Pratt, and Smyth (1999) introduce a simple probabilistic model based on the occurrence probability of the words that constitute a set of predefined assumptions.</S>
			<S sid ="58" ssid = "58">Chien (1997) develops a PAT-tree-based method that extracts significant words by observing mutual information of two overlapped patterns with the significance function 76 Pr(a)+Pr(b)−Pr(c) , where a and b are the two biggest substrings of string c. Zhang, Gao, and Zhou (2000) propose the application of a statistical method that is based on context dependence and mutual information.</S>
			<S sid ="59" ssid = "59">Yamamoto and Church (2001) experiment with both mutual information and residual inverse document frequency (RIDF)1 as criteria for deciding Japanese words, and their main contribution is in affording a reduced method for computing term and document frequency.</S>
			<S sid ="60" ssid = "60">In almost all of the work cited to this point, the dimension that is used to compute mutual information is term frequency.</S>
			<S sid ="61" ssid = "61">Chen and Bai (1998) propose a corpus-based learning approach that learns grammatical rules and automatically evaluates them.</S>
			<S sid ="62" ssid = "62">Chang and Su (1997) use an unsupervised Viterbi training process to select potential unknown words and iteratively truncate unlikely unknown words in the augmented dictionary.</S>
			<S sid ="63" ssid = "63">Teahan et al.</S>
			<S sid ="64" ssid = "64">(2000) propose a compression-based algorithm for Chinese text segmentation.</S>
			<S sid ="65" ssid = "65">Paola and Stevenson (2001) demonstrate an effective combination of deeper linguistic knowledge with the robustness and scalability of a statistical technique to derive knowledge about thematic relations for verb classification.</S>
			<S sid ="66" ssid = "66">Mo et al.</S>
			<S sid ="67" ssid = "67">(1996) deal with the identification of the determinative-measure compounds in parsing Mandarin Chinese by developing grammatical rules to combine determinators and measures.</S>
			<S sid ="68" ssid = "68">We introduce another concept, accessor variety (AV) (for a detailed definition, refer to subsection 3.1), to describe the extent to which a string is likely to be a meaningful word.</S>
			<S sid ="69" ssid = "69">Actually, Harris (1970) uses similar criteria to determine English morpheme boundaries, and our work is partially motivated by his success.</S>
			<S sid ="70" ssid = "70">We first discard those strings with accessor varieties that are smaller than a certain number (called the threshold; see subsequent discussion).</S>
			<S sid ="71" ssid = "71">The remaining strings are considered to be potentially meaningful words.</S>
			<S sid ="72" ssid = "72">In addition, we apply rules to remove strings that consist of a word and adhesive characters (clarified in subsection 3.2).</S>
			<S sid ="73" ssid = "73">Our experiment shows that even for small thresholds, quite good results can be obtained.</S>
			<S sid ="74" ssid = "74">In Section 2, we introduce examples of unknown words, the identification of which is the task of our work.</S>
			<S sid ="75" ssid = "75">In Section 3, we discuss our method.</S>
			<S sid ="76" ssid = "76">In Section 4, we present our experimental results.</S>
			<S sid ="77" ssid = "77">We conclude our work with a discussion and a comparison to previous results in Section 5.</S>
			<S sid ="78" ssid = "78">In Section 6, we list some future work that can be pursued following the concept of AV.</S>
			<S sid ="79" ssid = "79">We note that although our method is quite simple, it is marginally better than previous comparable results.</S>
			<S sid ="80" ssid = "80">This method distinguishes itself from statistically based approaches and grammatical rules.</S>
			<S sid ="81" ssid = "81">Because of its simplicity, it can be used easily in computer-based applications.</S>
			<S sid ="82" ssid = "82">Moreover, innovative variations of our method and its combination with statistical methods and grammatical methods are worthy of further exploration.</S>
	</SECTION>
	<SECTION title="Unknown Words. " number = "2">
			<S sid ="83" ssid = "1">As defined by Chen and Bai (1998), unknown words are words that are not listed in an ordinary dictionary, and word extraction seeks to identify such words.</S>
			<S sid ="84" ssid = "2">To give readers an intuitive view of these words, we list the types of unknown words that most frequently appear (Chen and Bai [1998] list 14 different types).</S>
			<S sid ="85" ssid = "3">What we should point out here is that except for numeric-type compounds, which are extracted separately, we extract all the other types of words together.</S>
			<S sid ="86" ssid = "4">1.</S>
			<S sid ="87" ssid = "5">Proper names.</S>
			<S sid ="88" ssid = "6">These include acronyms, Chinese names, and those words that have been borrowed from other languages: for example, , ‘Bank of China’; , df tf 1 RIDF = observed IDF − predicted IDF = − log D + log(1 − e− D ), where tf , df , and D are term.</S>
			<S sid ="89" ssid = "7">frequency, document frequency, and number of documents, respectively.</S>
			<S sid ="90" ssid = "8">77 ‘Feng Haodi’ (Chinese girl’s name); , ‘Prince Edward’; , ‘Microsoft’; and , ‘the United Kingdom of Britain and Northern Ireland’.</S>
			<S sid ="91" ssid = "9">To recognize proper names is the first task for Chinese word extraction, because their meanings cannot be obtained through the combination of smaller words, as in the compound words that are described next.</S>
			<S sid ="92" ssid = "10">Therefore, a reasonable way to approach them is to deduce them from Chinese text collections.</S>
			<S sid ="93" ssid = "11">2.</S>
			<S sid ="94" ssid = "12">Compound words.</S>
			<S sid ="95" ssid = "13">These are strings with specified meanings that are composed of shorter meaningful words: for example, , ‘Industry and Commerce Bank of China’, is composed of , ‘China’, , ‘industry and commerce’, and , ‘bank’; and , ‘foreign businessmen invested company’, is composed of , ‘foreign businessmen’, , ‘invest’, and , ‘company’.</S>
			<S sid ="96" ssid = "14">Compound words account for a large proportion of Chinese words because it is very easy to compose a new compound word out of smaller known words.</S>
			<S sid ="97" ssid = "15">There are about 5,000 commonly used Chinese characters, but the number of compound Chinese words is unpredictable.</S>
			<S sid ="98" ssid = "16">We want to extract those compounds that are accepted as words by most people., ‘modernization’, and , ‘computerization’, both of which contain af fix morpheme . 4.</S>
			<S sid ="99" ssid = "17">Numeric-type compounds.</S>
			<S sid ="100" ssid = "18">Some examples of numeric-type compounds would.</S>
			<S sid ="101" ssid = "19">be 1999 , ‘1999’; , ‘the first session’; , ‘year 2000’; and , ‘11 streets’.</S>
			<S sid ="102" ssid = "20">Although these words have specific meanings and are used frequently, most dictionaries do not contain them.</S>
			<S sid ="103" ssid = "21">It is not very difficult to identify them, since thereare morphological rules (Mo et al. 1996) for generating these words.</S>
			<S sid ="104" ssid = "22">Such numeric type compounds contain numbers as the main components, and measure characters or words are used nearby.</S>
	</SECTION>
	<SECTION title="Proposed Approach. " number = "3">
			<S sid ="105" ssid = "1">One of the important parameters that is employed in statistical methods for automatic Chinese word extraction is word or character frequency.</S>
			<S sid ="106" ssid = "2">Equivalent frequencies, such as document frequency and term frequency, are used analogously.</S>
			<S sid ="107" ssid = "3">Algorithms that are based on these frequencies are used to measure how likely it is that a particular string of characters is a meaningful word, according to the belief that “when a string is repeated many times, it must carry a meaning.” However, in this article, we use not frequency, but accessor variety.</S>
			<S sid ="108" ssid = "4">This can be explained as “when a string appears under different linguistic environments, it may carry a meaning.” We introduce the concept accessor variety as a new criterion for identifying meaningful Chinese words.</S>
			<S sid ="109" ssid = "5">3.1 Accessor Variety.</S>
			<S sid ="110" ssid = "6">In Chinese text, each substring of a whole sentence can potentially form a word, but only some substrings carry clear meanings and thus form a correct word.</S>
			<S sid ="111" ssid = "7">For example, the sentence has 21 substrings, but only four substrings, , , , and , can be considered words (we do not consider single-character words here).</S>
			<S sid ="112" ssid = "8">In some implementations, the segmentation method is used to extract those words (recent reviews on Chinese word segmentation include Wang, Su, and Mo [1990] and Wu and Tseng [1993]).</S>
			<S sid ="113" ssid = "9">There are several commonly used segmentation methods such as forward maximum matching and backward maximum matching(Teahan et al. 2000; Dai, Loh, and Khoo 1999; Sproat et al. 1996).</S>
			<S sid ="114" ssid = "10">If the dictionary includes the words , , and , then forward maximum matching will ex tract two words, and , after segmenting the sentence.</S>
			<S sid ="115" ssid = "11">If is deleted 78 from the dictionary, then the sentence will be segmented into , , , and , and two words, and , are obtained.</S>
			<S sid ="116" ssid = "12">Furthermore, if is removed from the dictionary, then another, different segmentation pattern will be achieved.</S>
			<S sid ="117" ssid = "13">Therefore, the dictionary is an important factor in these methods.</S>
			<S sid ="118" ssid = "14">In fact, this sentence has ambiguities (‘The door handle is broken’ or ‘the door hurts the hand’), and the segmentation methods try to find a reasonable way to solve this problem.</S>
			<S sid ="119" ssid = "15">We do not segment the sentence but extract those substrings that might possibly form words.</S>
			<S sid ="120" ssid = "16">The accessor variety criterion is used to decide whether a substring should be retained or discarded.</S>
			<S sid ="121" ssid = "17">Sentences (1)–(4) can be used to illustrate the meaning of accessor variety: (1) , ‘The door hurts the hand’ or ‘The door handle is broken’.</S>
			<S sid ="122" ssid = "18">(2) , ‘Xiao Ming fixed the door handle’.</S>
			<S sid ="123" ssid = "19">(3) , ‘This door handle is very beautiful’.</S>
			<S sid ="124" ssid = "20">(4) , ‘This door handle is broken’.</S>
			<S sid ="125" ssid = "21">Consider how to extract the word from these four sentences.</S>
			<S sid ="126" ssid = "22">In fact, the three- character string has three distinct prefixes, “S”, , (“S” denotes the start of a sentence), and four distinct suffixes, , “E”, , (“E” denotes the termination of a sentence).</S>
			<S sid ="127" ssid = "23">This means that the string can be used in at least three different environments and might carry meanings that are independent of those of the other characters in these four sentences.</S>
			<S sid ="128" ssid = "24">In this case three = min{three, four} is called the accessor variety of string . We use the criterion accessor variety to evaluate how independently a string is used, and thus how likely it is that the string can be a word.</S>
			<S sid ="129" ssid = "25">The accessor variety of a string s of more than one character is defined as AV(s) = min{Lav (s), Rav (s)}.</S>
			<S sid ="130" ssid = "26">Here Lav (s) is called the left accessor variety and is defined as the number of distinct characters (predecessors) except “S” that precede s plus the number of distinct sentences of which s appears at the beginning.</S>
			<S sid ="131" ssid = "27">Similarly, the right accessor variety Rav (s) is defined as the number of distinct characters (successors) except “E” that succeed s plus the number of distinct sentences in which s appears at the end.</S>
			<S sid ="132" ssid = "28">In other words, characters “S” and “E” are repeatedly counted.</S>
			<S sid ="133" ssid = "29">The reason for doing this is that some words usually appear at the beginning or the end of sentences.</S>
			<S sid ="134" ssid = "30">For example, , ‘suddenly’, is often used separately as a short sentence.</S>
			<S sid ="135" ssid = "31">Therefore, “S” and “E” will be counted multiple times, and we regard as a meaningful word, although there are probably very rarely other characters preceding or succeeding it.</S>
			<S sid ="136" ssid = "32">The extracted words should ensure an AV value of no less than a predefined threshold, which means that such strings should appear in enough different environments and therefore be considered meaningful.</S>
			<S sid ="137" ssid = "33">Our experiments show that even with a small threshold, the result is quite precise.</S>
			<S sid ="138" ssid = "34">3.2 Adhesive Characters.</S>
			<S sid ="139" ssid = "35">There are some characters, such as auxiliary characters (a mark following an adjec tive) and (a mark following an adverb), that often adhere to other words as heads or tails to compose a string with a high AV value that is not an actual linguistic word; we call these characters adhesive characters.</S>
			<S sid ="140" ssid = "36">For example, , ‘of people’, has a very high AV value because many adjectives (and hence many predecessors) precede , ‘people’ (e.g., , ‘here people’, and , ‘diligent people’).</S>
			<S sid ="141" ssid = "37">Moreover, many words (and hence many successors) can succeed it to describe the behavior of the people (e.g., , ‘people here make a living 79 out of commerce’, and , ‘diligent people are working’).</S>
			<S sid ="142" ssid = "38">It seems that combines with very firmly, but cannot be accepted as a word by most people.</S>
			<S sid ="143" ssid = "39">There are also some nonauxiliary characters that very frequently adhere to other, shorter words.</S>
			<S sid ="144" ssid = "40">In our method, we ignore the difference between the auxiliary and nonauxiliary adhesive characters and extract them under the same criteria.</S>
			<S sid ="145" ssid = "41">Recalling the discussion about the AV value, we divide the adhesive characters into two groups.</S>
			<S sid ="146" ssid = "42">The head-adhesive characters often stick at the heads of other words and have high Rav values, and the tail-adhesive characters often stick at the tails of other words and have high Lav values.</S>
			<S sid ="147" ssid = "43">How adhesive characters are found will be discussed in the article.</S>
			<S sid ="148" ssid = "44">The adhesive characters should be stripped from the string for constructing a well- formed word.</S>
			<S sid ="149" ssid = "45">According to the places in which these characters appear, three cases are considered.</S>
			<S sid ="150" ssid = "46">If the leftmost consecutive characters of a string are all head-adhesive characters, then we say that it is in the h+core style.</S>
			<S sid ="151" ssid = "47">If the rightmost consecutive characters of a string are all tail-adhesive characters, then we say that it is in the core+t style.</S>
			<S sid ="152" ssid = "48">A string that is in both h+core and core+t styles is said to be in the h+core+t style, where the core is the inner part of the string found by removing the left consecutive head-adhesive characters and right consecutive tail-adhesive characters.</S>
			<S sid ="153" ssid = "49">For example, , ‘of I’, is in the h+core style and , ‘I’, is the core, , ‘my’, is in the core+t style and , ‘I’, is the core; and , ‘of procedure is’, is in the h+core+t style and , ‘procedure’, is the core.</S>
			<S sid ="154" ssid = "50">In other words, none of the strings matching these three cases should be considered words, that is, they should be discarded.</S>
			<S sid ="155" ssid = "51">With the help of adhesive characters, we can introduce the ADHESIVE JUDGE rules to discard all those strings that have a high AV score but are unlikely to be real words: 1.</S>
			<S sid ="156" ssid = "52">A string that is composed of two characters in any of the h+core, core+t, and h+core+t (no core in the case of two characters) styles should be discarded if it does not appear in a specified electronic dictionary.</S>
			<S sid ="157" ssid = "53">For example, strings such as , ‘of I’, and , ‘one of’, will be discarded, whereas strings such as , ‘surely’, , ‘comprehend’, and , ‘Jane’ (a girl’s name), will remain.</S>
			<S sid ="158" ssid = "54">Under this rule, most meaningful two-character strings that are unknown to the dictionary will be recognized as meaningful words because they rarely contain adhesive characters.</S>
			<S sid ="159" ssid = "55">2.</S>
			<S sid ="160" ssid = "56">A string that is made up of more than two characters in any of the three styles (h+core, core+t, and h+core+t) should be discarded if the core is a meaningful multi-character word.</S>
			<S sid ="161" ssid = "57">3.</S>
			<S sid ="162" ssid = "58">The most frequently used auxiliary words, such as , ‘of’, , ‘have’,.</S>
			<S sid ="163" ssid = "59">(a mark indicating completion), and , ‘at’, must be used to delimit the original string.</S>
			<S sid ="164" ssid = "60">If any token is found to be an identified multicharacter word (a word in the specified dictionary or extracted by this algorithm before processing the string under consideration), then the original string is abandoned.</S>
			<S sid ="165" ssid = "61">All of the strings will be kept as meaningful words if they survive elimination according to these rules.</S>
			<S sid ="166" ssid = "62">According to these rules, strings such as , ‘of procedure is’, , ‘one of’, and , ‘of I’, should be abandoned, whereas , ‘actually’, and , ‘seek truth from facts’, should remain even though they all contain auxiliary words.</S>
			<S sid ="167" ssid = "63">80 3.3 Numeric-Type Compounds.</S>
			<S sid ="168" ssid = "64">We define numeric-type compounds to be strings of numbers or strings that con tain substrings of numbers followed by measures.</S>
			<S sid ="169" ssid = "65">For example, , ‘thousandsupon thousands’, , ‘the first Olympic games’, and , ‘50 kilo grams’, will be considered as potential numeric-type compounds, whereas , ‘wholehearted’, will not be, because and are not measures.</S>
			<S sid ="170" ssid = "66">Numbers include Arabic numbers of SBC case and DBC case and Chinese numbers in both simplified form and traditional form.</S>
			<S sid ="171" ssid = "67">Special words such as , ‘several’, , ‘about’, and ,‘or so’, are treated as numbers too.</S>
			<S sid ="172" ssid = "68">Measures include both Chinese measures and for eign measures (e.g., , ‘mu’, , ‘chi’, , ‘ounce’, and , ‘gallon’).</S>
			<S sid ="173" ssid = "69">Because of the special nature of words of this type, some lexicons do not include them, which is why we extract them separately.</S>
			<S sid ="174" ssid = "70">In our method, a numeric-type compound must be first a maximal numeric-type string, which means that the string cannot be preceded or succeeded by other numbers or measures in the sentence under consideration.</S>
			<S sid ="175" ssid = "71">For example, when processing the sentence , ‘October 2nd, 1977, is his birthday’, strings , ‘one’, , ‘nineteen’, , ‘1977’, , ‘October ’, and , ‘second day’, are not extracted.</S>
			<S sid ="176" ssid = "72">The only numeric-type compound that is extracted from this sentence is , ‘October 2nd, 1977’.</S>
			<S sid ="177" ssid = "73">The numeric-type compound candidates are then further examined according tothe ADHESIVE JUDGE rules, and the survivors of that examination are eventually ac cepted as numeric-type compounds.</S>
			<S sid ="178" ssid = "74">Notice that for strings of only numbers or strings of numbers followed by measures, we set the threshold to one.</S>
			<S sid ="179" ssid = "75">As we process numeric-type compounds separately, we ignore strings that contain numeric-type compounds when we extract the ordinary words.</S>
	</SECTION>
	<SECTION title="Experimental Results. " number = "4">
			<S sid ="180" ssid = "1">4.1 Setup of the Experimental Environment.</S>
			<S sid ="181" ssid = "2">The corpus-based word extraction method described in the previous section was tested on a 153 MB corpus consisting of People’s Daily news and Xinhua news from TREC5 and TREC6 (Linguistic Data Consortium, n.d.).</S>
			<S sid ="182" ssid = "3">We also conducted experiments on a small corpus that has approximately 1.7 MB of data and is a part of the former corpus.Neither corpus was annotated.</S>
			<S sid ="183" ssid = "4">The system dictionary that we used in each experi ment was downloaded from http://www.mandarintools.com/segmenter.html and contains 119,538 terms from two to seven characters long.</S>
			<S sid ="184" ssid = "5">In our method, a preprocessing step was performed on the corpus in which we eliminated all of the non-Chinese symbols.</S>
			<S sid ="185" ssid = "6">Each uninterrupted Chinese character sequence was kept as one line in the transformed data.</S>
			<S sid ="186" ssid = "7">For each line in the data file, all possible substrings were extracted, along with their predecessors and successors.</S>
			<S sid ="187" ssid = "8">Those predecessors and successors were finally merged, and the AV, Lav , and Rav values were calculated.</S>
			<S sid ="188" ssid = "9">Different thresholds were used for discarding those strings with low AV values and checking how the threshold affects the results.</S>
			<S sid ="189" ssid = "10">Moreover, the ADHESIVE JUDGE rules were used for the further discarding of those strings that seemed unlikely to be words.</S>
			<S sid ="190" ssid = "11">A list of adhesive characters is needed when we apply the ADHESIVE JUDGE rules.</S>
			<S sid ="191" ssid = "12">We constructed the adhesive character list based on the accessor variety information of single characters.</S>
			<S sid ="192" ssid = "13">Characters with high Lav values were considered to be tail-adhesive characters.</S>
			<S sid ="193" ssid = "14">Characters with high Rav values were considered to be head- adhesive characters.</S>
			<S sid ="194" ssid = "15">Characters with very high AV values were considered to be the delimiters that are used in rule (3) of the ADHESIVE JUDGE rules.</S>
			<S sid ="195" ssid = "16">In the end, we placed 68 tail-adhesive characters, 66 head-adhesive characters, and 16 delimiters on our list.</S>
			<S sid ="196" ssid = "17">81 In our experiments, we performed only one step of each of the ADHESIVE JUDGE rules (in either direction) for discarding meaningless multicharacter strings.</S>
			<S sid ="197" ssid = "18">That is, in any of the three styles (h+core, core+t, or h+core+t), only the leftmost or rightmost character was considered among all of the head- or tail-adhesive characters.</S>
			<S sid ="198" ssid = "19">If the first character of a string was a head-adhesive character and the remaining substring (after stripping the first character) was found in the system dictionary or the preextracted shorter word lists (and thus a core was found), such a string was considered to be in the h+core form and thrown away.</S>
			<S sid ="199" ssid = "20">The same judgment process was used in the core+t and h+core+t styles.</S>
			<S sid ="200" ssid = "21">In other words, only the first or last character, or both, of a string were used in rule (2) of the ADHESIVE JUDGE rules.</S>
			<S sid ="201" ssid = "22">Such simplification does not hurt the results too much.</S>
			<S sid ="202" ssid = "23">The AV value threshold is another important factor in this method.</S>
			<S sid ="203" ssid = "24">We tested different thresholds to evaluate how they influenced the performance.</S>
			<S sid ="204" ssid = "25">One might imagine that a higher threshold will result in higher precision while causing the loss of some recall.</S>
			<S sid ="205" ssid = "26">This phenomenon was certainly observed in our experiments.</S>
			<S sid ="206" ssid = "27">Word length has a relationship with the threshold: that is, longer words required a smaller threshold to reach the same precision, or higher precision could be obtained on longer words with the same threshold, because longer words have more specific usage and appear in fewer environments.</S>
			<S sid ="207" ssid = "28">Our first experiment was carried out on the small corpus of Xinhua news.</S>
			<S sid ="208" ssid = "29">Strings with lengths varying from two to ten characters were examined.</S>
			<S sid ="209" ssid = "30">In the following, we tested our method on the large corpus and all strings with lengths from two to seven characters.</S>
			<S sid ="210" ssid = "31">In the end, we extracted the numeric-type compounds from each corpus.</S>
			<S sid ="211" ssid = "32">In addition, there is no commonly accepted standard for evaluating the performance of word extraction methods, and it is very hard to decide whether a word is meaningful or not (Sproat et al. 1996).</S>
			<S sid ="212" ssid = "33">We define precision as the number of extracted words that would be meaningful in a Chinese native speaker ’s opinion, divided by the total number of extracted compounds.</S>
			<S sid ="213" ssid = "34">As it is very hard to find all of the words in the original corpus that would be found meaningful by a Chinese person, it is very hard to count recall in the traditional way, that is, the number of meaningful words extracted divided by the number of all meaningful words in the original data.</S>
			<S sid ="214" ssid = "35">On the other hand, it is also impossible to approach traditional precision and traditional recall by comparing the hand-segmented sample sentences and the automatically segmented sentences, as people usually do, because our method does not touch upon segmentation.</S>
			<S sid ="215" ssid = "36">The reason that we do not consider segmentation is that we aim only to investigate the performance of AV itself, whereas the involvement of a segmentation module would inevitablly influence our judgment on the performance of AV.</S>
			<S sid ="216" ssid = "37">Therefore, we substitute partial recall for traditional recall.</S>
			<S sid ="217" ssid = "38">We define partial recall as the number of extracted meaningful words (from the whole corpus) that appear in a sample corpus divided by the total number of meaningful words in the sample corpus.</S>
			<S sid ="218" ssid = "39">Evidently, the partial recall value will be no smaller, and usually greater, than the recall value calculated in the traditional way.</S>
			<S sid ="219" ssid = "40">This point will be clearly reflected by the following experimental results.</S>
			<S sid ="220" ssid = "41">What should be pointed out here is that some people use the F-measure as an evaluation metric (Ricardo and Berthier 1999; Chang and Su 1997).</S>
			<S sid ="221" ssid = "42">However, this is difficult to interpret according to Beeferman, Berger, and Lafferty (1999).</S>
			<S sid ="222" ssid = "43">In our opinion, as the F-measure or precision-recall curves are based on two parameters, recall and precision, it is enough for us only to list the partial recall and precision.</S>
			<S sid ="223" ssid = "44">4.2 Experiments on the Small Corpus.</S>
			<S sid ="224" ssid = "45">As noted previously, the small corpus contained approximately 1.7 MB data of Xinhua news.</S>
			<S sid ="225" ssid = "46">We processed all of the strings in the corpus with lengths from one to ten 82 Table 1 Some of the words extracted from the small corpus.</S>
			<S sid ="226" ssid = "47">Economy of GuangDong and Hong Kong new region of PuDong Sihanouk (name) Italian Team nature protection region Administration Committee of PLO UNESCO Association of Relations Across the Taiwan Straits (ARATS) GuangDa International Trust Investment Company YiZheng Chemical Fibre United Company Parent Ocean Petroleum Company of China XiaoLangDi Irrigation Hinge Project French Open Tennis Hong Kong Special Administration Region United Nations Security Council Asia Development Bank Innovation of the Economy System most-favoured-nation clause Christopher (name) Preparing Committee Mandela (name) UBA Championship Cup characters.</S>
			<S sid ="227" ssid = "48">Table 1 shows some of the extracted correct words that were not contained in the system dictionary.</S>
			<S sid ="228" ssid = "49">We can see that almost all of these words are compound words, proper names, or derived words.</S>
			<S sid ="229" ssid = "50">It would be almost impossible to list all of them in a general- purpose dictionary.</S>
			<S sid ="230" ssid = "51">Furthermore, some of them occur only a few times.</S>
			<S sid ="231" ssid = "52">For example, only occurs three times in this corpus.</S>
			<S sid ="232" ssid = "53">The method we used has the ability to extract low-frequency words.</S>
			<S sid ="233" ssid = "54">Table 2 shows the overall precision performance when the word length is not specified.</S>
			<S sid ="234" ssid = "55">We set the threshold from two to nine and observed that with a larger threshold we could obtain more precise results.</S>
			<S sid ="235" ssid = "56">As the number of words extracted was very large (approximately 30,000 words), we randomly chose a portion (often approximately 1,000 words) of the total set of extracted words as the test set to calculate the precision; that is, we listed all of the extracted words, and then for each word, we generated a random number between zero and one.</S>
			<S sid ="236" ssid = "57">If the number was smaller than the number of test words divided by the number of all extracted words (here 1, 000/30, 000), then the corresponding word was chosen.</S>
			<S sid ="237" ssid = "58">Human judgment was then used to check whether an extracted word was a correct or spurious word.</S>
			<S sid ="238" ssid = "59">In the evaluation phase we found that the method performed differently on strings of different lengths.</S>
			<S sid ="239" ssid = "60">Hence, we also checked the precision performance with specified word lengths.</S>
			<S sid ="240" ssid = "61">We set the threshold to three and obtained the data in Table 3.</S>
			<S sid ="241" ssid = "62">Again we used the sampling method just described to test the overall precision.</S>
			<S sid ="242" ssid = "63">From Table 3 we can see that the method worked almost equally well on all word lengths except length three.</S>
			<S sid ="243" ssid = "64">After checking the results, we found that three-character strings are often constructed from a two-character legitimiate word together with asingle character.</S>
			<S sid ="244" ssid = "65">It is difficult to judge with such a simple method whether such three character strings are legitimate words.</S>
			<S sid ="245" ssid = "66">Beyond precision, another concern is partial recall.</S>
			<S sid ="246" ssid = "67">In other words, how many words will be missed using such a method?</S>
			<S sid ="247" ssid = "68">The corpus contained 55,788 sentences.</S>
			<S sid ="248" ssid = "69">83 Table 2 Experiments on the threshold–precision relationship of the small corpus.</S>
			<S sid ="249" ssid = "70">Thr esh old Pr eci sio n Nu mb er of wo rds 2 6 4 . 4 % 3 7 , 0 9 3 3 8 3 . 8 % 1 4 , 4 6 8 4 8 9 . 6 % 8 , 6 4 8 5 9 4 . 1 % 6 , 1 4 7 6 9 6 . 8 % 4 , 7 5 7 7 9 7 . 4 % 3 , 8 0 0 8 9 7 . 3 % 3 , 1 6 2 9 9 7 . 7 % 2 , 7 3 4 Table 3 Experiments on the word length–precision relationship of the small corpus.</S>
			<S sid ="250" ssid = "71">Wor d len gth Pr eci sio n Nu mb er of wo rds 2 9 0 . 2 % 6 , 9 6 2 3 5 6 . 6 % 2 , 5 3 2 4 9 1 . 4 % 3 , 4 1 7 5 8 5 . 1 % 7 1 2 6 9 0 . 4 % 4 9 3 7 8 9 . 4 % 1 8 0 8 9 0 . 1 % 1 1 1 9 8 0 . 3 % 6 1 Table 4 Experiments on the threshold–partial recall relationship of the small corpus.</S>
			<S sid ="251" ssid = "72">Thr esh old Pa rti al rec all Nu mb er of wo rds 2 7 6 . 7 % 3 7 , 0 9 3 3 6 6 . 5 % 1 4 , 4 6 8 4 5 9 . 0 % 8 , 6 4 8 5 5 4 . 3 % 6 , 1 4 7 6 5 0 . 3 % 4 , 7 5 7 7 4 7 . 1 % 3 , 8 0 0 8 4 4 . 0 % 3 , 1 6 2 9 4 1 . 5 % 2 , 7 3 4 We checked only a small portion (a random sample of approximately 2,000 sentences) of the total corpus.</S>
			<S sid ="252" ssid = "73">We used this sample to find meaningful words by hand.</S>
			<S sid ="253" ssid = "74">The result of automatic extraction from the whole corpus was then compared with that of hand extraction of the sample sentences.</S>
			<S sid ="254" ssid = "75">The partial recall was computed as the number of words in both sets divided by the number of words in the human extraction set.</S>
			<S sid ="255" ssid = "76">We list the experimental partial-recall values in Table 4.</S>
			<S sid ="256" ssid = "77">We analyzed the instance with the threshold of two.</S>
			<S sid ="257" ssid = "78">Some of the words were missed because they occurred only once, which was less than the threshold.</S>
			<S sid ="258" ssid = "79">Some of the words were missed because they occurred only in very restricted environments.</S>
			<S sid ="259" ssid = "80">This means that although they appeared more than once in the corpus, their accessor variety value was only one.</S>
			<S sid ="260" ssid = "81">In the latter case, we could extract the strings that contained such strings as substrings.</S>
			<S sid ="261" ssid = "82">The details are discussed in the section on error analysis.</S>
			<S sid ="262" ssid = "83">84 Table 5 Some words extracted from the large corpus.</S>
			<S sid ="263" ssid = "84">desolate road Huang Yanping (Chinese name) goose feather fan Bi Tong Ling (name of a Chinese medicine) send love by swan goose beloved hometown MaGu offers birthday present right of independent management the Peking Museum the Technology Institute of East China fake and bad merchandise the Peking penmanship temple fair Sunday photo newspaper socialistic modernization 4.3 Experiments on the Large Corpus.</S>
			<S sid ="264" ssid = "85">The corpus that was used for these experiments was the TREC Chinese corpus (Lin guistic Data Consortium, n.d.), which contains 160,000 articles, including articles that were published in the People’s Daily from 1991 to 1993 and a portion of news released by the Xinhua News Agency in 1994 and 1995.</S>
			<S sid ="265" ssid = "86">In the experiment, we extracted words with lengths of two to seven characters.</S>
			<S sid ="266" ssid = "87">The data contained approximately 7,000,000 sentences.</S>
			<S sid ="267" ssid = "88">We first eliminated the non-Chinese characters.</S>
			<S sid ="268" ssid = "89">All of the experiments thatwere carried out on the small corpus were also conducted on the large corpus.</S>
			<S sid ="269" ssid = "90">In Ta ble 5 we first show some legitimate words that were extracted from the large corpus.</S>
			<S sid ="270" ssid = "91">Notice that these words cannot be found in the word list that was extracted from the small corpus or in the system dictionary.</S>
			<S sid ="271" ssid = "92">In Table 6, we show the overall precision performance.</S>
			<S sid ="272" ssid = "93">The performance trends that were observed in Table 2 can be also observed here.</S>
			<S sid ="273" ssid = "94">However, as this corpus is much larger than the previous one, many characters have the chance to occur together to form spurious words.</S>
			<S sid ="274" ssid = "95">That is why the precision is much lower than that for the small corpus.</S>
			<S sid ="275" ssid = "96">Nevertheless, as the corpus is much larger now, a correct word can occur in many more environments than in the small corpus, which suggests that we can improve the precision by using a large threshold for the accessor variety value without overly degrading the partial recall.</S>
			<S sid ="276" ssid = "97">For example, when the threshold is set to nine, the precision is as high as 73.4% and the partial recall remains as high as 80.4%.</S>
			<S sid ="277" ssid = "98">Table 6 Experiments on the threshold–precision relationship of the large corpus.</S>
			<S sid ="278" ssid = "99">Thr esh old Pr eci sio n Nu mb er of wo rds 2 5 1 . 2 % 2 , 8 5 4 , 7 0 0 3 5 8 . 3 % 1 , 2 6 9 , 3 7 8 4 6 9 . 0 % 7 8 8 , 9 6 4 5 7 0 . 3 % 5 6 2 , 4 0 7 6 7 0 . 4 % 4 3 2 , 8 3 0 7 7 3 . 8 % 3 4 9 , 5 1 1 8 7 4 . 2 % 2 9 1 , 6 8 8 9 7 3 . 4 % 2 4 9 , 9 0 4 85 Table 7 Experiments on the word length–precision relationship of the large corpus with threshold three.</S>
			<S sid ="279" ssid = "100">Wor d len gth Pr eci sio n Pa rti al rec all Nu mb er of wo rds 2 3 7 . 8 % 9 2 . 3 % 2 6 6 , 0 2 7 3 2 2 . 9 % 8 3 . 5 % 3 3 5 , 5 5 7 4 6 8 . 9 % 8 0 . 9 % 3 6 0 , 4 1 3 5 6 7 . 0 % 8 3 . 3 % 1 4 1 , 1 5 3 6 7 6 . 0 % 8 1 . 6 % 1 2 3 , 3 9 2 7 7 0 . 7 % 6 4 . 3 % 4 2 , 8 3 6 Table 8 Experiments on the word length–precision relationship of the large corpus with threshold nine.</S>
			<S sid ="280" ssid = "101">Wor d len gth Pr eci sio n Pa rti al rec all Nu mb er of wo rds 2 7 1 . 7 % 9 0 . 0 % 7 7 , 2 0 0 3 5 2 . 7 % 7 3 . 0 % 5 5 , 0 1 5 4 7 4 . 6 % 7 0 . 2 % 7 8 , 8 6 8 5 7 5 . 0 % 6 3 . 9 % 1 8 , 7 7 5 6 8 6 . 9 % 6 3 . 2 % 1 5 , 6 6 3 7 8 9 . 4 % 4 2 . 9 % 4 , 3 8 3 The precision and partial-recall performance in respect to the word length was also tested on the large corpus.</S>
			<S sid ="281" ssid = "102">The same sample method was used, and the results for thresholds three and nine are shown in Tables 7 and 8, respectively.</S>
			<S sid ="282" ssid = "103">Note that there is a great jump in the precision for word lengths two and three after we change the threshold from three to nine, but the partial recall does not change much.</S>
			<S sid ="283" ssid = "104">For longer words, the method even performs well with threshold three.</S>
			<S sid ="284" ssid = "105">The next experiment was intended to test the partial-recall performance for all of the words with lengths from two to seven.</S>
			<S sid ="285" ssid = "106">The result is shown in Table 9, which indicates that the partial-recall value is satisfactory even with a large threshold.</S>
			<S sid ="286" ssid = "107">This means that we can extract most of the words in the corpus.</S>
			<S sid ="287" ssid = "108">4.4 Experiments on Numeric-Type Compounds.</S>
			<S sid ="288" ssid = "109">In this section, we consider numeric-type compounds.</S>
			<S sid ="289" ssid = "110">Some of the compounds of this type that were extracted from the large corpus are listed in Table 10.</S>
			<S sid ="290" ssid = "111">Table 9 Experiments on the threshold–partial recall relationship of the large corpus.</S>
			<S sid ="291" ssid = "112">Thr esh old Pa rti al rec all Nu mb er of wo rds 2 8 9 . 2 % 2 , 8 5 4 , 7 0 0 3 8 7 . 2 % 1 , 2 6 9 , 3 7 8 4 8 5 . 6 % 7 8 8 , 9 6 4 5 8 4 . 2 % 5 6 2 , 4 0 7 6 8 3 . 0 % 4 3 2 , 8 3 0 7 8 2 . 0 % 3 4 9 , 5 1 1 8 8 1 . 2 % 2 9 1 , 6 8 8 9 8 0 . 4 % 2 4 9 , 9 0 4 86 Table 10 Numeric-type compounds extracted.</S>
			<S sid ="292" ssid = "113">3 2 March 2nd first time May the Fourth, 1992 two sides of the Strait relationship between two countries thirty Kilograms or so 100 one hundred Hong Kong dollars 200 two hundred ounces forty thousand mu 4.5 Error Analysis.</S>
			<S sid ="293" ssid = "114">Two kinds of errors occurred: the extraction of meaningless strings as meaningful words and the neglect of meaningful words.</S>
			<S sid ="294" ssid = "115">Some errors of the two types are listed below.</S>
			<S sid ="295" ssid = "116">4.5.1 Meaningless Strings Extracted.</S>
			<S sid ="296" ssid = "117">A number of meaningless strings were extracted: for example, , ‘solve the Republic of Bosnia and Hercegovina’; , ‘meeting today’; , ‘employ international’; , ‘title match order ’; , ‘today China’; , ‘related part’; , ‘game today’; , ‘international pass’; , ‘city people’; , ‘will next’; , ‘field people’; , ‘be come country’; , ‘province order ’; , ‘point to’; , ‘city first’; and , ‘people attention’.</S>
			<S sid ="297" ssid = "118">Most of these errors occurred because the strings are made up of one shorter meaningful word and one character that has a high accessor variety value but is absent from the adhesive-character list.</S>
			<S sid ="298" ssid = "119">For example, is composed of (accessor variety value 133 in the large corpus) and , but is not on the adhesive-character list.</S>
			<S sid ="299" ssid = "120">Therefore, was extracted as a word.</S>
			<S sid ="300" ssid = "121">However, if we list too many characters as adhesive characters, the partial recall will be degraded.</S>
			<S sid ="301" ssid = "122">To give another example, , ‘bank of China deliver ’, was extracted as a meaningful word even though its meaning is very unclear.</S>
			<S sid ="302" ssid = "123">In the string , we considered and to be adhesive characters and regarded as being in the h+core+t style.</S>
			<S sid ="303" ssid = "124">However, the core is not in the system dictionary or the shorter word list that we extracted previously.</S>
			<S sid ="304" ssid = "125">Hence, it passed the ADHESIVE JUDGE rules and was retained as a word.</S>
			<S sid ="305" ssid = "126">It is hard to discard strings such as and , even though their meanings are not at all clear.</S>
			<S sid ="306" ssid = "127">4.5.2 Meaningful Words Missed.</S>
			<S sid ="307" ssid = "128">A number of meaningful words were missed: for example, , ‘clear ’; , ‘gaseous state’; , ‘sightseeing interest is not fulfilled’; , ‘barren’; , ‘carry forward’; , ‘Straits Exchange Foundation’; , ‘recently’; and , ‘African National Congress’.</S>
			<S sid ="308" ssid = "129">The main reason for these errors is that the strings occur only once in the corpus or their accessor varieties are smaller than the threshold.</S>
			<S sid ="309" ssid = "130">One way to solve this problem is to use a larger corpus to improve the partial recall.</S>
			<S sid ="310" ssid = "131">Another reason for these errors is that the string is composed of a shorter word plus an adhesive character, in which case it was discarded according to the ADHESIVE JUDGE rules.</S>
			<S sid ="311" ssid = "132">For example, is composed of and , where is a word in the system dictionary and is an adhesive character.</S>
			<S sid ="312" ssid = "133">To solve this problem, we can use fewer adhesive characters at the cost of some precision.</S>
			<S sid ="313" ssid = "134">To give another example, , ‘Chang Jiang triangle 87 region’, is a meaningful word that appeared in the corpus but was not extracted, because it contains a substring that can be interpreted as a numeric compound ‘three jiao’ (which means 0.3 Chinese RMB), and therefore we discarded it.</S>
			<S sid ="314" ssid = "135">However, we can extract this string as a numeric-type compound.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "5">
			<S sid ="315" ssid = "1">We have described a hybrid method for extracting Chinese words from the Chinese text corpus using accessor variety and adhesive characters.</S>
			<S sid ="316" ssid = "2">We tested the method on the performance of different thresholds and word lengths and different corpus sizes.</S>
			<S sid ="317" ssid = "3">We conclude that the method based on accessor variety and adhesive characters performs efficiently in fulfilling word extraction tasks.</S>
			<S sid ="318" ssid = "4">The precision with the small corpus we used was much larger than that with the large corpus, but the situation was opposite for partial recall.</S>
			<S sid ="319" ssid = "5">For example, when the threshold was set to three, the precision and partial recall with the small corpus were 83.8% and 66.5%, respectively, whereas with the large corpus they were 58.3% and 87.2%, respectively.</S>
			<S sid ="320" ssid = "6">When the threshold was set to nine, the corresponding numbers were 97.7% and 41.5% versus 73.4% and 80.4%.</S>
			<S sid ="321" ssid = "7">As even human judges differ when facing the task of segmenting a text into words and test corpora differ from system to system (Sproat et al. 1996), it is very difficult to compare two methods.</S>
			<S sid ="322" ssid = "8">To convincingly illustrate the efficiency of our method, we chose one of the most direct ways: We implemented Chang and Su’s (1997) method and our own method on a corpus, the size of which was similar to the one that was used in their paper.</S>
			<S sid ="323" ssid = "9">We chose Chang and Su’s paper as reference for two reasons: Their approach was unsupervised, just like ours, and it was a complicated iterative method that integrated several commonly used word-filtering techniques (including Viterbi training, mutual information, entropy, and joint Gaussian mixture density function) to improve their result.</S>
			<S sid ="324" ssid = "10">Their segmentation system contains two modules: One is the segmentation module, which is used to segment words and calculate the frequencies of the words; the other is the filtering module, which is used to rank the likelihood ratios of the words, and further to filter out those words with low likelihood ratios from the augmented dictionary and add those words with high likelihood ratios into the augmented dictionary.</S>
			<S sid ="325" ssid = "11">The system iteratively repeats these two modules until a predefined condition is fulfilled.</S>
			<S sid ="326" ssid = "12">We will show that even compared to such a deliberate approach, our simple method is marginally better.</S>
			<S sid ="327" ssid = "13">For simplicity, we will use IT to refer to Chang and Su’s method and AV to refer to our method, where the symbol IT implies iterative and AV implies accessor variety.</S>
			<S sid ="328" ssid = "14">We combined PD9208.SGML and PD9209.SGML (files of People’s Daily as published in August and September 1992, which is a proportion of the TREC Chinese corpus [Linguistic Data Consortium, n.d.]) to form a file of 376,053 sentences after the clearing step (notice that in Chang and Su’s [1997] paper, 311,591 sentences were used).</S>
			<S sid ="329" ssid = "15">We conducted two comparison experiments, one for extracting words with lengths of two to four characters and the other for extracting words with lengths of two to seven characters.</S>
			<S sid ="330" ssid = "16">The reason for selecting these two sets of word lengths is that Chang and Su considered only words with lengths of two to four characters, whereas in our method we consider words with lengths of two to seven characters.</S>
			<S sid ="331" ssid = "17">In both experiments, the number of iterations for IT was 21 (because Chang and Su also conducted 21 iterations), and the AV value threshold (when the AV value of a string is greater than or equal to this threshold, it is considered to be a word) for our method is three.</S>
			<S sid ="332" ssid = "18">Because we do not segment the file in AV, it is impossible to count the precision and recall by comparing the hand-segmented sample sentences with the automatically 88 segmented sample sentences.</S>
			<S sid ="333" ssid = "19">(In this case, sample sentences are first obtained, then they are segmented both by hand and automatically by the method under examination.</S>
			<S sid ="334" ssid = "20">The precision is equal to the number of words that are extracted both by hand and automatically, divided by the total number of words that are extracted automatically.</S>
			<S sid ="335" ssid = "21">The recall is equal to the number of words that are extracted both by hand and automatically, divided by the total number of words that are extracted by hand.)</S>
			<S sid ="336" ssid = "22">This evaluation method was applied in Chang and Su’s (1997) original work.</S>
			<S sid ="337" ssid = "23">Instead, we evaluated both IT and AV with the method that we described in the previous sections.</S>
			<S sid ="338" ssid = "24">We randomly chose 1,000 words of each word length (in the first experiment, word length varied from two to four, and in the second experiment, word length varied from two to seven) from the output dictionary that was generated by each method.</S>
			<S sid ="339" ssid = "25">The precision of each word length was then defined as the proportion of correct words among the 1,000 sample words of the same word length.</S>
			<S sid ="340" ssid = "26">Regarding partial recall (we used partial recall as a substitute for traditional recall, as discussed previously), we first randomly chose sentences from the unsegmented file, and then segmented them by hand.</S>
			<S sid ="341" ssid = "27">Then we extracted words with different lengths from this set of sentences.</S>
			<S sid ="342" ssid = "28">The partial recall of each word length was then defined as the number of words of that length that were extracted both from the hand-segmented sample sentences and from the automatically generated output dictionary, divided by the total number of words of that length that were extracted from the hand-segmented sample sentences.</S>
			<S sid ="343" ssid = "29">The system dictionaries that we used in each experiment were derived from the large dictionary described before (i.e., a dictionary downloaded from http://www.</S>
			<S sid ="344" ssid = "30">mandarintools.com/segmenter.html that contains 119,538 terms from two to seven characters long).</S>
			<S sid ="345" ssid = "31">In each experiment, the size of the system dictionary and the size of the applied corpus were chosen to approach those of the system dictionary and the corpus that were mentioned in Chang and Su’s (1997) original work.</S>
			<S sid ="346" ssid = "32">In each experiment, all of the values of precision and partial recall of both IT and AV were counted by the same person.</S>
			<S sid ="347" ssid = "33">Therefore, the evaluation results should be reasonably credible.</S>
			<S sid ="348" ssid = "34">In the experiment of extracting words of lengths two to four, the system dictionary contained 24,705 bigrams, 4,355 trigrams, and 4,252 four-grams, that is, a total of 33,312 entities.</S>
			<S sid ="349" ssid = "35">We randomly chose 979 sentences and segmented them by hand.</S>
			<S sid ="350" ssid = "36">Suppose that the word set obtained was S. We then removed from S those segments that occurred in the system dictionary and those segments that appeared less than five times in the original corpus (the 376,053 sentences).</S>
			<S sid ="351" ssid = "37">The latter removal was undertaken because Chang and Su (1997) did not consider segments with frequency of less than five.</S>
			<S sid ="352" ssid = "38">Hence, from S, we obtained 580 bigrams, 156 trigrams, and 135 four-grams.</S>
			<S sid ="353" ssid = "39">These words were considered to be new words extracted by hand from the sample sentences and were used to test the partial recall for each method, IT and AV.</S>
			<S sid ="354" ssid = "40">In Table 11, we list the precision and partial-recall value for each word length from two to four for both IT and AV.</S>
			<S sid ="355" ssid = "41">We can see from the table that IT outperforms AV for word length two, but the situation is just the opposite for word length four.</S>
			<S sid ="356" ssid = "42">With word length three, the two methods perform comparatively, and AV’s performance is slightly worse.</S>
			<S sid ="357" ssid = "43">Considering that our method, AV, is much simpler than IT, we conclude that it is quite promising.</S>
			<S sid ="358" ssid = "44">Because we observed from this experiment that the performance of our method improves with increased word length, we conducted another experiment to further examine this phenomenon.</S>
			<S sid ="359" ssid = "45">In this experiment, we extracted words with lengths from two to seven characters.</S>
			<S sid ="360" ssid = "46">The system dictionary that we used contained 38,097 entries, with 27,986 bigrams, 4,906 trigrams, 4,834 four-grams, 238 five-grams, 89 six-grams and 44 seven-grams.</S>
			<S sid ="361" ssid = "47">We randomly chose 1,989 sentences and segmented them by hand.</S>
			<S sid ="362" ssid = "48">89 Table 11 Precision and partial recall of word lengths two to four of the first experiment on IT and AV.</S>
			<S sid ="363" ssid = "49">Precision Bigram Trigram Four-gram IT 57.69% 26.18% 56.93% AV 47.04% 25.75% 68.76% Partial recall IT 85.69% 84.62% 81.48% AV 75.34% 81.41% 87.41% Table 12 Precision and partial recall of word lengths two to seven of the second experiment on IT and AV.</S>
			<S sid ="364" ssid = "50">Bi gr am Tri gr am Four gr am Five gr am Six gr am Se ven gr am P r e c i s i o n IT 49.</S>
			<S sid ="365" ssid = "51">85 % 2 5.</S>
			<S sid ="366" ssid = "52">3 8 % 5 9 . 1 2 % 3 2 . 7 1 % 5 6 . 6 0 % 3 2 . 6 2 % AV 42.</S>
			<S sid ="367" ssid = "53">70 % 2 8.</S>
			<S sid ="368" ssid = "54">2 8 % 6 8 . 8 6 % 5 4 . 6 6 % 7 3 . 7 7 % 7 0 . 2 3 % Pa rti al rec all IT 84.</S>
			<S sid ="369" ssid = "55">84 % 7 1.</S>
			<S sid ="370" ssid = "56">5 9 % 7 8 . 0 5 % 7 0 . 3 7 % 8 0 . 6 5 % 8 4 . 6 2 % AV 80.</S>
			<S sid ="371" ssid = "57">83 % 8 1.</S>
			<S sid ="372" ssid = "58">0 6 % 8 8 . 3 5 % 8 3 . 3 3 % 9 0 . 3 2 % 7 6 . 9 2 % After filtering out the segments that appeared in the system dictionary and those with frequencies less than five, the numbers of new words that were extracted by hand from the sample sentences of word lengths two to seven were 699, 264, 369, 54, 31, and 13, respectively.</S>
			<S sid ="373" ssid = "59">These words were used to test the partial recall.</S>
			<S sid ="374" ssid = "60">In Table 12, we list the results of the second experiment.</S>
			<S sid ="375" ssid = "61">The precision and partial-recall values were computed in the same way as were the values in Table 11.</S>
			<S sid ="376" ssid = "62">This table strongly indicates that AV outperforms IT for all word lengths except for word length two.</S>
			<S sid ="377" ssid = "63">Two characters have greater chances of occurring together in different environments than larger numbers of characters.</S>
			<S sid ="378" ssid = "64">This degrades the precision of our method in the case of bigrams, as the threshold that we used for AV value was three, i.e., when the AV value of a bigram was greater than or equal to three, we regarded it as a word.</S>
			<S sid ="379" ssid = "65">The reason for the lower partial recall of AV with word length two is that we filtered out all of the bigrams that were both absent from the system dictionary and had adhesive characters.</S>
			<S sid ="380" ssid = "66">For larger word lengths, only those grams with specific meanings had chances of occurring together in different environments; that is, they had higher AV values, which resulted in a higher precision value in our method.</S>
			<S sid ="381" ssid = "67">The reason for higher partial recall values of AV with longer grams is that even when a longer gram with higher AV value both was absent from the system dictionary and had adhesive characters, we did not dogmatically filter it out.</S>
			<S sid ="382" ssid = "68">Alternatively, we furthered examined whether it was in one of the three styles h+core, core+t, or h+core+t (as discussed in Section 3).</S>
			<S sid ="383" ssid = "69">If it was in one of these styles, then we filtered it out.</S>
			<S sid ="384" ssid = "70">There are several ways to explain the performance of IT being better than that of AV with bigrams but worse with longer grams.</S>
			<S sid ="385" ssid = "71">First, IT does not consider adhesive characters, which helps improve the partial recall while degrading the precision, as many grams contain adhesive characters and they are hard to inspect (note that in our method, we filtered out some of the grams with adhesive characters).</S>
			<S sid ="386" ssid = "72">Second, IT uses several techniques to filter out the bad candidates for real words, which is intended to help improve the precision.</S>
			<S sid ="387" ssid = "73">But there are several deficiencies in this design.</S>
			<S sid ="388" ssid = "74">In the IT 90 segmentation module, a longer segment is preferred.</S>
			<S sid ="389" ssid = "75">(For each sentence, IT tries to find the segmentation with the highest likelihood, where the likelihood is defined as the multiplication of the relative frequencies of all the segments, and the relative frequency of one segment is defined as the frequency of that segment divided by the sum of the frequency of all grams [Chang and Su 1997].</S>
			<S sid ="390" ssid = "76">Therefore, if a segmentation has more segments, then its likelihood value is smaller.)</S>
			<S sid ="391" ssid = "77">This will inevitably degrade the partial recall of shorter grams.</S>
			<S sid ="392" ssid = "78">On the other hand, because system dictionaries usually contain very limited numbers of longer terms, IT’s filter module (i.e., a likelihood-ranking model) has inadequate information to correctly describe the feature functions of word class or nonword class for longer grams.</S>
			<S sid ="393" ssid = "79">This will inevitably degrade both the precision and the partial recall for longer grams, as real words might be considered nonwords, and nonwords might be considered real words.</S>
			<S sid ="394" ssid = "80">Finally, although the combination of several features seems more comprehensive, it also generates more noise than using only one feature.</S>
			<S sid ="395" ssid = "81">We think that all of the factors that we described above can roughly explain the phenomenon that is presented in Table 12.</S>
			<S sid ="396" ssid = "82">Comparing Table 12 to Table 11, we find that the results are slightly different even for the same word lengths.</S>
			<S sid ="397" ssid = "83">One reason for this is that in different experiments, we used different system dictionaries.</S>
			<S sid ="398" ssid = "84">Note that all of the results were obtained only on new words.</S>
			<S sid ="399" ssid = "85">Therefore, the size of the system dictionary will affect the result of the experiment.</S>
			<S sid ="400" ssid = "86">Usually, the larger the system dictionary is, the poorer are the precision and recall that are obtained.</S>
			<S sid ="401" ssid = "87">In the dictionary that we used in the latter experiment, there were more bigrams than in the dictionary that we used in the first experiment.</S>
			<S sid ="402" ssid = "88">That is why the precision value and the partial-recall value for bigrams are smaller than those in the first experiment.</S>
			<S sid ="403" ssid = "89">As there are similar numbers of trigrams and four-grams in both dictionaries, the results for these grams are very close in both experiments.</S>
			<S sid ="404" ssid = "90">Another factor that may lead to these differences is the use of different sample sentences and different methods to segment them by hand for testing partial recall.</S>
			<S sid ="405" ssid = "91">In the former experiment, we considered only terms with lengths from two to four characters, and hence only segmented the sample sentences to terms of lengths from two to four.</S>
			<S sid ="406" ssid = "92">In the latter experiment, we considered all terms with lengths from two to seven characters.</S>
	</SECTION>
	<SECTION title="Discussion of Future Work. " number = "6">
			<S sid ="407" ssid = "1">In this work, we have proposed accessor variety as an alternative to the commonly used frequency criterion.</S>
			<S sid ="408" ssid = "2">Our approach may give rise to new research directions in Chinese text processing.</S>
			<S sid ="409" ssid = "3">Our promising results for word extraction make it a potential useful method for other problems as well.</S>
			<S sid ="410" ssid = "4">In addition, word extraction is the basic step for many text-processing tasks.</S>
			<S sid ="411" ssid = "5">It is related to but different from word segmentation.</S>
			<S sid ="412" ssid = "6">Extracted words can be used as the fundamental elements for related application problems, such as creating a text summary for a bundle of articles and text clustering.</S>
			<S sid ="413" ssid = "7">Futhermore, words as sequences of letters occur not only in language processing, but also in other application areas.</S>
			<S sid ="414" ssid = "8">Our method may be of some heuristic value to other related problems, such as those involving substring processing (Deng, Li, and Wang 2002; Thijs et al. 2002; Narasimhan et al. 2002), and biomedical concepts identification Majoros, Subramanian, and Yandell 2003).Finally, in our simple method, we process the data only once, and no iterative refinement is applied.</S>
			<S sid ="415" ssid = "9">The result is comparable even to that of very comprehensive sys tems and shows some improvement with longer grams.</S>
			<S sid ="416" ssid = "10">The simplicity of our method makes it especially suitable for processing large corpora.</S>
			<S sid ="417" ssid = "11">91</S>
	</SECTION>
	<SECTION title="Acknowledgments">
			<S sid ="418" ssid = "12">We would like to thank Jing-Shin Chang for help in our implementation of their method IT.</S>
			<S sid ="419" ssid = "13">Many thanks also go to Chunyu Kit for his suggestions.</S>
			<S sid ="420" ssid = "14">And we also thank the anonymous reviewers for their constructive advice in revising the original manuscript.</S>
			<S sid ="421" ssid = "15">The work described in this article was fully supported by a grant of NSFC/RGC joint research scheme (N CityU 102/01, NSFC60131160743).</S>
	</SECTION>
</PAPER>
