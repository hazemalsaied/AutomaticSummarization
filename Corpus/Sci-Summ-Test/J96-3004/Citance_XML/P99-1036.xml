<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">We present a statistical model of Japanese unknown words consisting of a set of length and spelling models classified by the character types that con­ stitute a word.</S>
		<S sid ="2" ssid = "2">The point is quite simple: differ­ ent character sets should be treated differently and the changes between character types are very im­ portant because Japanese script has both ideograms like Chinese (kanji) and phonograms like English (katakana).</S>
		<S sid ="3" ssid = "3">Both word segmentation accuracy and part of speech tagging accuracy are improved by the proposed model.</S>
		<S sid ="4" ssid = "4">The model can achieve 96.6% tag­ ging accuracy if unknown words are correctly seg­ mented.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="5" ssid = "5">In Japanese, around 95% word segmentation ac­ curacy is reported by using a word-based lan­ guage model and the Viterbi-like dynamic program­ ming procedures (Nagata, 1994; Yamamoto, 1996; Takeuchi and Matsumoto, 1997; Haruno and Mat­ sumoto, 1997).</S>
			<S sid ="6" ssid = "6">About the same accuracy is reported in Chinese by statistical methods (Sproat et al., 1996).</S>
			<S sid ="7" ssid = "7">But there has been relatively little improve­ ment in recent years because most of the remaining errors are due to unknown words.</S>
			<S sid ="8" ssid = "8">There are two approaches to solve this problem: to increase the coverage of the dictionary (Fung and Wu, 1994; Chang et al., 1995; Mori and Nagao, 1996) and to design a better model for unknown words (Nagata, 1996; Sproat et al., 1996).</S>
			<S sid ="9" ssid = "9">We take the latter approach.</S>
			<S sid ="10" ssid = "10">To improve word segmenta­ tion accuracy, (Nagata, 1996) used a single general purpose unknown word model, while (Sproat et al., 1996) used a set of specific word models such as for plurals, personal names, and transliterated foreign words.</S>
			<S sid ="11" ssid = "11">&apos; The goal of our research is to assign a correct part of speech to unknown word as well as identifying it correctly.</S>
			<S sid ="12" ssid = "12">In this paper, we present a novel statistical model for Japanese unknown words.</S>
			<S sid ="13" ssid = "13">It consists of a set of word models for each part of speech and word type.</S>
			<S sid ="14" ssid = "14">We classified Japanese words into nine orthographic types based on the character types that constitute a word.</S>
			<S sid ="15" ssid = "15">We find that by making different models for each word type, we can better model the length and spelling of unknown words.</S>
			<S sid ="16" ssid = "16">In the following sections, we first describe the lan­ guage model used for Japanese word segmentation.</S>
			<S sid ="17" ssid = "17">We then describe a series of unknown word mod­ els, from the baseline model to the one we propose.</S>
			<S sid ="18" ssid = "18">Finally, we prove the effectiveness of the proposed model by experiment.</S>
	</SECTION>
	<SECTION title="Word  Segmentation Model. " number = "2">
			<S sid ="19" ssid = "1">2.1 Baseline Language Model and Search.</S>
			<S sid ="20" ssid = "2">Algorithm Let the input Japanese character sequence be C = c1 ... em, and segment it into word sequence W = w1 ...Wn 1 • The word segmentation task can be defined as finding the word segmentation W that max­ imize the joint probability of word sequence given character sequence P(WIC).</S>
			<S sid ="21" ssid = "3">Since the maximiza­ tion is carried out with fixed character sequence C, the word segmenter only has to maximize the joint probability of word sequence P(W).</S>
			<S sid ="22" ssid = "4">W = argmaxP(WIC) = argmaxP(W) (1) w w We call P(W) the segmentation model.</S>
			<S sid ="23" ssid = "5">We can use any type of word-based language model for P(W), such as word ngram and class-based ngram.</S>
			<S sid ="24" ssid = "6">We used the word bigram model in this paper.</S>
			<S sid ="25" ssid = "7">So, P(W) is approximated by the product of word hi­ gram probabilities P(wilwi1)· P(W) P(w1l&lt;bos&gt;) fr=2 P(wilwi-l)P( &lt;eos&gt;lwn) (2) Here, the special symbols &lt;bos&gt; and &lt;eos&gt; indi­ cate the beginning and the end of a sentence, re­ spectively.</S>
			<S sid ="26" ssid = "8">Basically, word bigram probabilities of the word segmentation model is estimated by computing the 1 In this paper, we define a word as a combination of its surface form and part of speech.</S>
			<S sid ="27" ssid = "9">Two words are considered to be equal only if they have the same surface form and part of speech.</S>
			<S sid ="28" ssid = "10">277 Table 1: Examples of word bigrams including un­ known word tags example &quot;(J)/no/particle &lt;U-noun&gt;&quot; will appear in the most frequent form of Japanese noun phrases &quot;A (J) B&quot;, which corresponds to &quot;B of A&quot; in English.</S>
			<S sid ="29" ssid = "11">As Table 1 shows, word bigrams whose infrequent word bigram (f)/no/particle &lt;U-noun&gt; &lt;U-verb&gt; \..., /shi/inflection &lt;U-number&gt; fil/yen/suffix &lt;U-adjectival-verb&gt; f.t Ina/inflection &lt;U-adjective&gt; It &apos;/i/inflection &lt;U-adverb&gt; c /to/particle frequency 6783 1052 407 405 182 139 words are replaced with their corresponding part of speech-based unknown word tags are very important information source of the contexts where unknown words appears.</S>
	</SECTION>
	<SECTION title="Unknown. " number = "3">
			<S sid ="30" ssid = "1">Word Model 3.1 Baseline Model The simplest unknown word model depends only on relative frequencies of the corresponding events in the word segmented training corpus, with appropri­ ate smoothing techniques.</S>
			<S sid ="31" ssid = "2">The maximization search can be efficiently implemented by using the Viterbi­ like dynamic programming procedure described in (Nagata, 1994).</S>
			<S sid ="32" ssid = "3">2.2 Modification to Handle Unknown.</S>
			<S sid ="33" ssid = "4">Words To handle unknown words, we made a slight modi­ fication in the above word segmentation model.</S>
			<S sid ="34" ssid = "5">We have introduced unknown word tags &lt;U-t&gt; for each part of speech t. For example, &lt;U-noun&gt; and &lt;U­ verb&gt; represents an unknown noun and an unknown verb, respectively.</S>
			<S sid ="35" ssid = "6">If Wi is an unknown word whose part of speech is t, the word bigram probability P(wilwi1) is ap­ proximated as the product of word bigram probabil­ ity P( &lt;U-t&gt;lwi_I) and the probability of Wi given it is an unknown word whose part of speech is t, P(wii&lt;U-t&gt; ).</S>
			<S sid ="36" ssid = "7">P(wdwi1) = P( &lt;U-t&gt;lwi_I)P(wii&lt;U-t&gt;,Wi1) P( &lt;U-t&gt;lwi1)P(wii&lt;U-t&gt;) (3) the spelling.</S>
			<S sid ="37" ssid = "8">We think of an unknown word as a word having a special part of speech &lt;UNK&gt;.</S>
			<S sid ="38" ssid = "9">Then, the unknown word model is formally defined as the joint probability of the character sequence wi = c1 ... ck if it is an unknown word.</S>
			<S sid ="39" ssid = "10">Without loss of generality, we decompose it into the product of word length probability and word spelling probability given its length, P(wii&lt;UNK&gt;) = P(c1 ... cki&lt;UNK&gt;) = P(ki&lt;UNK&gt;)P(c1 ... cklk, &lt;UNK&gt;) (4) where k is the length of the character sequence.</S>
			<S sid ="40" ssid = "11">We call P(ki&lt;UNK&gt;) the word length model, and P( c1 ...</S>
			<S sid ="41" ssid = "12">Ck Ik, &lt;UNK &gt;) the word spelling model.</S>
			<S sid ="42" ssid = "13">In order to estimate the entropy of English, (Brown et al., 1992) approximated P(ki&lt;UNK&gt;) by a Poisson distribution whose parameter is the average word length A in the training corpus, and P(c1 ...</S>
			<S sid ="43" ssid = "14">Ck lk, &lt;UNK&gt;) by the product of character zerogram probabilities.</S>
			<S sid ="44" ssid = "15">This means all characters in the character set are considered to be selected inde­ pendently and uniformly.</S>
			<S sid ="45" ssid = "16">Here, we made an assumption that the spelling P (c1 ..</S>
			<S sid ="46" ssid = "17">.ck I&lt;UNK&gt; ) k!</S>
			<S sid ="47" ssid = "18">Ak -&gt;.</S>
			<S sid ="48" ssid = "19">k (5) of an unknown word solely depends on its part of speech and is independent of the previous word.</S>
			<S sid ="49" ssid = "20">This is the same assumption made in the hidden Markov model, which is called output independence.</S>
			<S sid ="50" ssid = "21">The probabilities P( &lt;U-t&gt;lwi_I) can be esti­ mated from the relative frequencies in the training corpus whose infrequent words are replaced with their corresponding unknown word tags based on their part of speeches 2 • Table 1 shows examples of word bigrams including unknown word tags.</S>
			<S sid ="51" ssid = "22">Here, a word is represented by a list of surface form, pronunciation, and part of speech, which are delimited by a slash &apos;/&apos;.</S>
			<S sid ="52" ssid = "23">The first 2 Throughout in this paper, we use the term &quot;infrequent words&quot; to represent words that appeared only once in the corpus.</S>
			<S sid ="53" ssid = "24">They are also called &quot;hapax legomena&quot; or &quot;hapax words&quot;.</S>
			<S sid ="54" ssid = "25">It is well known that the characteristics of hapax where p is the inverse of the number of characters in the character set.</S>
			<S sid ="55" ssid = "26">If we assume JIS-X-0208 is used as the Japanese character set, p = 1/6879.</S>
			<S sid ="56" ssid = "27">Since the Poisson distribution is a single parame­ ter distribution with lower bound, it is appropriate to use it as a first order approximation to the word length distribution.</S>
			<S sid ="57" ssid = "28">But the Brown model has two problems.</S>
			<S sid ="58" ssid = "29">It assigns a certain amount of probability mass to zero-length words, and it is too simple to express morphology.</S>
			<S sid ="59" ssid = "30">For Japanese word segmentation and OCR error correction, (Nagata, 1996) proposed a modified ver­ sion of the Brown model.</S>
			<S sid ="60" ssid = "31">Nagata also assumed the word length probability obeys the Poisson distribu­ tion.</S>
			<S sid ="61" ssid = "32">But he moved the lower bound from zero to one.</S>
			<S sid ="62" ssid = "33">legomena are similar to those of unknown words (Baayen and Sproat, 1996).</S>
			<S sid ="63" ssid = "34">P(ki&lt;UNK&gt;) (A 1)k-1 - e-&lt;&gt;.- ) (6) (k- 1)!</S>
			<S sid ="64" ssid = "35">Instead of zerogram, He approximated the word spelling probability P(c1 ..</S>
			<S sid ="65" ssid = "36">.ckJk, &lt;UNK&gt;) by the product of word-based character bigram probabili­ ties, regardless of word length.</S>
			<S sid ="66" ssid = "37">P(cl···ckJk,&lt;VNK&gt;) P(cd&lt;bow&gt;) f1 =2 P(ciJci-l)P( &lt;eow&gt;Jck) (7) where &lt;bow&gt; and &lt;eow&gt; are special symbols that indicate the beginning and the end of a word.</S>
			<S sid ="67" ssid = "38">3.2 Correction of Word Spelling.</S>
			<S sid ="68" ssid = "39">Probabilities We find that Equation (7) assigns too little proba­ bilities to long words (5 or more characters).</S>
			<S sid ="69" ssid = "40">This is because the lefthand side of Equation (7) represents the probability of the string c1 ... ck in the set of all strings whose length are k, while the righthand side 0..</S>
			<S sid ="70" ssid = "41">0.5 0.45 0.4 0.35 0.3 0.25 0.2 0.15 0.1 0.05 0 0 Word Length Distribution Probs from Raw Counts (hapax words) _..,_ EsUmates by Poisson (hapax words) -+--·</S>
	</SECTION>
	<SECTION title="6 	10" number = "4">
			<S sid ="71" ssid = "1">Wor Character represents the probability of the string in the set of all possible strings (from length zero to infinity).</S>
			<S sid ="72" ssid = "2">Let Pb (c1 ...Ck I&lt;UNK&gt;) be the probability of character string c1 ...Ck estimated from the char­ acter bigram model.</S>
			<S sid ="73" ssid = "3">d Length Figure 1: Word length distribution of unknown words and its estimate by Poisson distribution Pb(cl ... cki&lt;UNK&gt;) = 0.5 UnknoWn Word Length Distribution kanji-+­ P(c1 J&lt;bow&gt;) f1 =2 P(ciJci-l)P( &lt;eow&gt;Jck) (8) Let Pb(kJ&lt;VNK&gt;) be the sum of the probabilities of all strings which are generated by the character bigram model and whose length are k. More appro­ priate estimate for P(c1 ..</S>
			<S sid ="74" ssid = "4">.ckJk, &lt;UNK&gt;) is, Pb(c1 ... ckJ&lt;UNK&gt;) P(cl···ckJk,&lt;VNK&gt;) Pb(kJ&lt;VNK&gt;) (9) But how can we estimate Pb(kl&lt;VNK&gt;)?</S>
			<S sid ="75" ssid = "5">It is difficult to compute it directly, but we can get a rea­ sonable estimate by considering the unigram case.</S>
			<S sid ="76" ssid = "6">If strings are generated by the character unigram model, the sum of the probabilities of all length k strings equals to the probability of the event that the end of word symbol &lt;eow&gt; is selected after a 0..</S>
			<S sid ="77" ssid = "7">0.45 0.4 0.35 0.3 0.25 0.2 0.15 0.1 0.05 0 0 2 4 6 Word Character Length katakana -+--· 10 character other than &lt;eow&gt; is selected k - 1 times.</S>
			<S sid ="78" ssid = "8">Pb(kl&lt;VNK&gt;)(1- P( &lt;eow&gt; ))k-l P( &lt;eow&gt;) (10) Throughout in this paper, we used Equation (9) to compute the word spelling probabilities.</S>
			<S sid ="79" ssid = "9">3.3 Japanese Orthography and Word.</S>
			<S sid ="80" ssid = "10">Length Distribution In word segmentation, one of the major problems of the word length model of Equation (6) is the decom­ position of unknown words.</S>
			<S sid ="81" ssid = "11">When a substring of an unknown word coincides with other word in the dic­ tionary, it is very likely to be decomposed into the dictionary word and the remaining substring.</S>
			<S sid ="82" ssid = "12">We find the reason of the decomposition is that the word Figure 2: Word length distribution of kanji words and katakana words length model does not reflect the variation of the word length distribution resulting from the Japanese orthography.</S>
			<S sid ="83" ssid = "13">Figure 1shows the word length distribution of in­ frequent words in the EDR corpus, and the estimate of word length distribution by Equation (6) whose parameter (.A = 4.8) is the average word length of infrequent words.</S>
			<S sid ="84" ssid = "14">The empirical and the estimated distributions agree fairly well.</S>
			<S sid ="85" ssid = "15">But the estimates by Poisson are smaller than empirical probabilities for shorter words ( &lt;= 4 characters), and larger for longer words (&gt;characters).</S>
			<S sid ="86" ssid = "16">This is because we rep Table 2: Character type configuration of infrequent words in the EDR corpus Table 3: Examples of common character bigrams for each part of speech in the infrequent words pa rt of sp ee ch ch ar ac ter bi gr a m fre qu en cy no un nu m be r a dj e ct iv al v er b v er b ad je cti ve ad ve rb &lt; e o w &gt; &lt;b o w &gt; 1 S &quot; J &lt; e o w &gt; I t &lt; e o w &gt; L &lt; e o w &gt; &lt; e o w &gt; 13 43 4 8 4 3 2 7 2 1 3 69 63 resented all unknown words by one length model.</S>
			<S sid ="87" ssid = "17">Figure 2 shows the word length distribution of words consists of only kanji characters and words consists of only katakana characters.</S>
			<S sid ="88" ssid = "18">It shows that the length of kanji words distributes around 3 char­ acters, while that of katakana words distributes around 5 characters.</S>
			<S sid ="89" ssid = "19">The empirical word length dis­ tribution of Figure 1 is, in fact, a weighted sum of these two distributions.</S>
			<S sid ="90" ssid = "20">In the Japanese writing system, there are at least five different types of characters other than punc­ tuation marks: kanji, hiragana, katakana, Roman alphabet, and Arabic numeral.</S>
			<S sid ="91" ssid = "21">Kanji which means &apos;Chinese character&apos; is used for both Chinese origin words and Japanese words semantically equivalent to Chinese characters.</S>
			<S sid ="92" ssid = "22">Hiragana and katakana are syllabaries: The former is used primarily for gram­ matical function words, such as particles and inflec­ tional endings, while the latter is used primarily to transliterate Western origin words.</S>
			<S sid ="93" ssid = "23">Roman alphabet is also used for Western origin words and acronyms.</S>
			<S sid ="94" ssid = "24">Arabic numeral is used for numbers.</S>
			<S sid ="95" ssid = "25">Most Japanese words are written in kanji, while more recent loan words are written in katakana.</S>
			<S sid ="96" ssid = "26">K atakana words are likely to be used for techni­ cal terms, especially in relatively new fields like computer science.</S>
			<S sid ="97" ssid = "27">Kanji words are shorter than katakana words because kanji is based on a large (&gt; 6,000) alphabet of ideograms while katakana is based on a small ( &lt; 100) alphabet of phonograms.</S>
			<S sid ="98" ssid = "28">Table 2 shows the distribution of character type sequences that constitute the infrequent words in the EDR corpus.</S>
			<S sid ="99" ssid = "29">It shows approximately 65% of words are constituted by a single character type.</S>
			<S sid ="100" ssid = "30">Among the words that are constituted by more than two character types, only the kanjihiragana and hiraganakanji sequences are morphemes and others are compound words in a strict sense although they are identified as words in the EDR corpus 3 . Therefore, we classified Japanese words into 9 word types based on the character types that consti­ tute a word: &lt;sym&gt;, &lt;num&gt;, &lt;alpha&gt;, &lt;hira&gt;, &lt;kata&gt;, and &lt;kan&gt; represent a sequence of sym­ bols, numbers, alphabets, hiraganas, katakanas, and kanjis, respectively.</S>
			<S sid ="101" ssid = "31">&lt;kanhira&gt; and &lt;hirakan&gt; represent a sequence of kanjis followed by hiraganas and that of hiraganas followed by kanjis, respec­ tively.</S>
			<S sid ="102" ssid = "32">The rest are classified as &lt;mise&gt;.</S>
			<S sid ="103" ssid = "33">The resulting unknown word model is as follows.</S>
			<S sid ="104" ssid = "34">We first select the word type, then we select the length and spelling.</S>
			<S sid ="105" ssid = "35">P(c1 ... cki&lt;UNK&gt;) = P( &lt;WT&gt;I&lt;UNK&gt; )P(ki&lt;WT&gt;, &lt;UNK&gt;) P(c1 ... ckik, &lt;WT&gt;, &lt;UNK&gt;) (11 ) 3.4 Part of Speech and Word.</S>
			<S sid ="106" ssid = "36">Morphology It is obvious that the beginnings and endings of words play an important role in tagging part of speech.</S>
			<S sid ="107" ssid = "37">Table 3 shows examples of common char­ acter bigrams for each part of speech in the infre­ quent words of the EDR corpus.</S>
			<S sid ="108" ssid = "38">The first example in Table 3 shows that words ending in &apos; -&apos; are likely to be nouns.</S>
			<S sid ="109" ssid = "39">This symbol typically appears at the end of transliterated Western origin words written in katakana.</S>
			<S sid ="110" ssid = "40">It is natural to make a model for each part of speech.</S>
			<S sid ="111" ssid = "41">The resulting unknown word model is as follows.</S>
			<S sid ="112" ssid = "42">P(c1 ... cki&lt;U-t&gt;) = P(ki&lt;U-t&gt; )P(c1 ... ckik, &lt;U-t&gt;) (12) By introducing the distinction of word type to the model of Equation(12),we can derive a more sophis­ ticated unknown word model that reflects both word 3 When a Chinese character is used to represent a seman­ tically equivalent Japanese verb, its root is written in the Chinese character and its inflectional suffix is written in hi­ ragana.</S>
			<S sid ="113" ssid = "43">This results in kanjihiragana sequence.</S>
			<S sid ="114" ssid = "44">When a Chinese character is too difficult to read, it is transliterated in hiragana.</S>
			<S sid ="115" ssid = "45">This results in either hiraganakanji or kanji­ hiragana sequence.</S>
			<S sid ="116" ssid = "46">type and part of speech information.</S>
			<S sid ="117" ssid = "47">This is the un­ known word model we propose in this paper.</S>
			<S sid ="118" ssid = "48">It first selects the word type given the part of speech, then the word length and spelling.</S>
			<S sid ="119" ssid = "49">P(c1 ... cki&lt;U-t&gt;) = P( &lt;WT&gt;I&lt;U-t&gt; )P(ki&lt;WT&gt;, &lt;U-t&gt;) P(c1 ... ckik, &lt;WT&gt;, &lt;U-t&gt;) (13) Table 4: The amount of training and test sets The first factor in the righthand side of Equa­ tion (13) is estimated from the relative frequency of the corresponding events in the training corpus.</S>
			<S sid ="120" ssid = "50">- ) = C( &lt;WT&gt;, &lt;U-t&gt;) t&gt; C(&lt;U-t&gt;) (14) Where ad(c;, &lt;WT&gt;, &lt;U-t&gt;) +ad(c;ic;-1, &lt;WT&gt;, &lt;U-t&gt;) +a3f(ci) + a4f(cilci1) + as(1/V) (17) Here, C (·) represents the counts in the corpus.</S>
			<S sid ="121" ssid = "51">To estimate the probabilities of the combinations of word type and part of speech that did not appeared in the training corpus, we used the Witten-Bell method (Witten and Bell, 1991) to obtain an esti­ mate for the sum of the probabilities of unobserved events.</S>
			<S sid ="122" ssid = "52">We then redistributed this evenly among all unobserved events 4 . The second factor of Equation (13) is estimated from the Poisson distribution whose parameter A&lt;WT&gt;,&lt;U-t&gt; is the average length of words whose word type is &lt;WT&gt; and part of speech is &lt;U-t&gt;.</S>
			<S sid ="123" ssid = "53">P(ki&lt;WT&gt;, &lt;U-t&gt;) = (.&gt;.&lt;WT&gt;.&lt;U-t&gt; -1)k-t e-(&gt;.&lt;WT&gt; &lt;U-t&gt; -1) (k-1)!</S>
			<S sid ="124" ssid = "54">&apos; If the combinations of word type and part of speech that did not appeared in the training corpus, we used the average word length of all words.</S>
			<S sid ="125" ssid = "55">To compute the third factor of Equation (13), we have to estimate the character bigram probabilities that are classified by word type and part of speech.</S>
			<S sid ="126" ssid = "56">Basically, they are estimated from the relative fre­ quency of the character bigrams for each word type and part of speech.</S>
			<S sid ="127" ssid = "57">f(c;ic;_1, &lt;WT&gt;, &lt;U-t&gt;) = C(&lt;WT&gt;,&lt;U-t&gt;,c;-t,c;) C( &lt;WT&gt;,&lt;U-t&gt;,c;-t) However, if we divide the corpus by the combina­ tion of word type and part of speech, the amount of each training data becomes very small.</S>
			<S sid ="128" ssid = "58">Therefore, we linearly interpolated the following five probabili­ ties (Jelinek and Mercer, 1980).</S>
			<S sid ="129" ssid = "59">P(e;ic;-1,&lt;WT&gt;,&lt;U-t&gt;) = 4 The Witten-Bell method estimates the probability of ob­ serving novel events to be r/(n+r), where n is the total num­ ber of events seen previously, and r is the number of symbols that are distinct.</S>
			<S sid ="130" ssid = "60">The probability of the event observed c times is cf(n + r).</S>
			<S sid ="131" ssid = "61">a1 +a2+a3+a4+as = 1.</S>
			<S sid ="132" ssid = "62">f(ci, &lt;WT&gt;, &lt;U-t&gt;) and f(c;lc;-1, &lt;WT&gt;, &lt;U-t&gt;) are the relative frequen­ cies of the character unigram and bigram for each word type and part of speech.</S>
			<S sid ="133" ssid = "63">f(c;) and f(c;jc;_1) are the relative frequencies of the character unigram and bigram.</S>
			<S sid ="134" ssid = "64">V is the number of characters (not to­ kens but types) appeared in the corpus.</S>
			<S sid ="135" ssid = "65">4 Experiments.</S>
			<S sid ="136" ssid = "66">4.1 Training and Test Data for the.</S>
			<S sid ="137" ssid = "67">Language Model We used the EDR Japanese Corpus Version 1.0 (EDR, 1991) to train the language model.</S>
			<S sid ="138" ssid = "68">It is a manually word segmented and tagged corpus of ap­ proximately 5.1 million words (208 thousand sen­ tences).</S>
			<S sid ="139" ssid = "69">It contains a variety of Japanese sentences taken from newspapers, magazines, dictionaries, en­ cyclopedias, textbooks, etc..</S>
			<S sid ="140" ssid = "70">In this experiment, we randomly selected two sets of 100 thousand sentences.</S>
			<S sid ="141" ssid = "71">The first 100 thousand sentences are used for training the language model.</S>
			<S sid ="142" ssid = "72">The second 100 thousand sentences are used for test­ ing.</S>
			<S sid ="143" ssid = "73">The remaining 8 thousand sentences are used as a heldout set for smoothing the parameters.</S>
			<S sid ="144" ssid = "74">For the evaluation of the word segmentation ac­ curacy, we randomly selected 5 thousand sentences from the test set of 100 thousand sentences.</S>
			<S sid ="145" ssid = "75">We call the first test set (100 thousand sentences) &quot;test set-1&quot; and the second test set (5 thousand sentences) &quot;test set-2&quot;.</S>
			<S sid ="146" ssid = "76">Table 4 shows the number of sentences, words, and characters of the training and test sets.</S>
			<S sid ="147" ssid = "77">There were 94,680 distinct words in the training test.</S>
			<S sid ="148" ssid = "78">We discarded the words whose frequency was one, and made a dictionary of 45,027 words.</S>
			<S sid ="149" ssid = "79">Af­ ter replacing the words whose frequency was one with the corresponding unknown word tags, there were 474,155 distinct word bigrams.</S>
			<S sid ="150" ssid = "80">We discarded the bigrams with frequency one, and the remaining 175,527 bigrams were used in the word segmentation model.</S>
			<S sid ="151" ssid = "81">As for the unknown word model, word-based char­ acter bigrams are computed from the words with Table 5: Cross entropy (CE) per word and character perplexity (PP) of each unknown word model Part of Speech Estimation Accuracy 0.95 0.9 frequency one (49,653 words).</S>
			<S sid ="152" ssid = "82">There were 3,120 dis­ tinct character unigrams and 55,486 distinct char­ acter bigrams.</S>
			<S sid ="153" ssid = "83">We discarded the bigram with fre­ quency one and remaining 20,775 bigrams were used.</S>
			<S sid ="154" ssid = "84">There were 12,633 distinct character unigrams and 80,058 distinct character bigrams when we classified them for each word type and part of speech.</S>
			<S sid ="155" ssid = "85">We discarded the bigrams with frequency one and re­ 0.85 0.7 POS + WT + Poisson + bigram -+­ POS + Poisson + bigram -+--· maining 26,633 bigrams were used in the unknown word model.</S>
			<S sid ="156" ssid = "86">Average word lengths for each word type and part of speech were also computed from the words with frequency one in the training set.</S>
			<S sid ="157" ssid = "87">4.2 Cross Entropy and Perplexity.</S>
			<S sid ="158" ssid = "88">Table 5 shows the cross entropy per word and char­ acter perplexity of three unknown word model.</S>
			<S sid ="159" ssid = "89">The first model is Equation (5), which is the combina . tion of Poisson distribution and character zerogram (Poisson + zerogram).</S>
			<S sid ="160" ssid = "90">The second model is the combination of Poisson distribution (Equation (6)) and character bigram (Equation (7)) (Poisson + hi­ gram).</S>
			<S sid ="161" ssid = "91">The third model is Equation (11), which is a set of word models trained for each word type (WT +Poisson+ bigram).</S>
			<S sid ="162" ssid = "92">Cross entropy was computed over the words in test set-1 that were not found in the dictionary of the word segmentation model (56,121 words).</S>
			<S sid ="163" ssid = "93">Character perplexity is more intu­ itive than cross entropy because it shows the average number of equally probable characters out of 6,879 characters in JIS-X-0208.</S>
			<S sid ="164" ssid = "94">Table 5 shows that by changing the word spelling model from zerogram to bigram, character perplex­ ity is greatly reduced.</S>
			<S sid ="165" ssid = "95">It also shows that by making a separate model for each word type, character per­ plexity is reduced by an additional 45% (128 --+ 71).</S>
			<S sid ="166" ssid = "96">This shows that the word type information is useful for modeling the morphology of Japanese words.</S>
			<S sid ="167" ssid = "97">4.3 Part of Speech Prediction Accuracy.</S>
			<S sid ="168" ssid = "98">without Context Figure 3 shows the part of speech prediction accu­ racy of two unknown word model without context.</S>
			<S sid ="169" ssid = "99">It shows the accuracies up to the top 10 candidates.</S>
			<S sid ="170" ssid = "100">The first model is Equation (12), which is a set of word models trained for each part of speech (POS + Poisson + bigram).</S>
			<S sid ="171" ssid = "101">The second model is Equa­ tion (13), which is a set of word models trained for o.s51 ---:23 _.-J4L----&apos;-5--6.L...----&apos;7----&apos;-8--9&apos;-- J10 Rank Figure 3: Accuracy of part of speech estimation each part of speech and word type (POS + WT + Poisson + bigram).</S>
			<S sid ="172" ssid = "102">The test words are the same 56,121 words used to compute the cross entropy.</S>
			<S sid ="173" ssid = "103">Since these unknown word models give the prob­ ability of spelling for each part of speech P(wit), we used the empirical part of speech probability P(t) to compute the joint probability P(w, t).</S>
			<S sid ="174" ssid = "104">The part of speech t that gives the highest joint probability is selected.</S>
			<S sid ="175" ssid = "105">i = argmp.xP(w, t) = P(t)P(wit) (18) The part of speech prediction accuracy of the first and the second model was 67.5% and 74.4%, respec­ tively.</S>
			<S sid ="176" ssid = "106">As Figure 3 shows, word type information improves the prediction accuracy significantly.</S>
			<S sid ="177" ssid = "107">4.4 Word Segmentation Accuracy.</S>
			<S sid ="178" ssid = "108">Word segmentation accuracy is expressed in terms of recall and precision as is done in the previous research (Sproat et al., 1996).</S>
			<S sid ="179" ssid = "109">Let the number of words in the manually segmented corpus be Std, the number of words in the output of the word segmenter be Sys, and the number of matched words be M. Recall is defined as M/Std, and precision is defined as M/Sys.</S>
			<S sid ="180" ssid = "110">Since it is inconvenient to use both recall and precision all the time, we also use the F-measure to indicate the overall performance.</S>
			<S sid ="181" ssid = "111">It is calculated by F = (!3 2 + 1.0) X p X R (32 X p + R (19) where Pis precision, R is recall, and (3 is the relative importance given to recall over precision.</S>
			<S sid ="182" ssid = "112">We set Table 6: Word segmentation accuracy of all words r e c pr ec F Po iss on +b igr a m W T +P oi ss on +b igr a m P O S + Po iss on +b igr a m P O S + W T + Po iss on + bi gr a m 94 .5 94 .4 94 .4 94 .6 93 .1 93 .8 93 .6 93 .7 93 .8 94 .1 94 .0 94 .1 Table 7: Word segmentation accuracy of unknown words r e c pr ec F Po iss on + bi gr a m W T + P oi ss o n + b i g r a m P O S + P o is s o n + b i g r a m P O S + W T + P o is s o n + bi g ra m 31 .8 45 .5 39 .7 42.</S>
			<S sid ="183" ssid = "113">0 65 .0 62 .0 61 .5 66 .4 42.</S>
			<S sid ="184" ssid = "114">7 52 .5 48 .3 51.</S>
			<S sid ="185" ssid = "115">4 f3 = 1.0 throughout this experiment.</S>
			<S sid ="186" ssid = "116">That is, we put equal importance on recall and precision.</S>
			<S sid ="187" ssid = "117">Table 6 shows the word segmentation accuracy of four unknown word models over test set-2.</S>
			<S sid ="188" ssid = "118">Com­ pared to the baseline model (Poisson+ bigram), by using word type and part of speech information, the precision of the proposed model (POS + WT + Pois­ son + bigram) is improved by a modest 0.6%.</S>
			<S sid ="189" ssid = "119">The impact of the proposed model is small because the out-of-vocabulary rate of test set-2 is only 3.1%.</S>
			<S sid ="190" ssid = "120">To closely investigate the effect of the proposed unknown word model, we computed the word seg­ mentation accuracy of unknown words.</S>
			<S sid ="191" ssid = "121">Table 7 shows the results.</S>
			<S sid ="192" ssid = "122">The accuracy of the proposed model (POS + WT + Poisson + bigram) is signif­ icantly higher than the baseline model (Poisson + bigram).</S>
			<S sid ="193" ssid = "123">Recall is improved from 31.8% to 42.0% and precision is improved from 65.0% to 66.4%.</S>
			<S sid ="194" ssid = "124">Here, recall is the percentage of correctly seg­ mented unknown words in the system output to the all unknown words in the test sentences.</S>
			<S sid ="195" ssid = "125">Precision is the percentage of correctly segmented unknown words in the system&apos;s output to the all words that system identified as unknown words.</S>
			<S sid ="196" ssid = "126">Table 8 shows the tagging accuracy of unknown words.</S>
			<S sid ="197" ssid = "127">Notice that the baseline model (Poisson + bigram) cannot predict part of speech.</S>
			<S sid ="198" ssid = "128">To roughly estimate the amount of improvement brought by the proposed model, we applied a simple tagging strat­ egy to the output of the baseline model.</S>
			<S sid ="199" ssid = "129">That is, words that include numbers are tagged as numbers, and others are tagged as nouns.</S>
			<S sid ="200" ssid = "130">Table 8 shows that by using word type and part of speech information, recall is improved from 28.1% to 40.6% and precision is improved from 57.3% to 64.1%.</S>
			<S sid ="201" ssid = "131">Other than the usual recall/precision measures, we defined another precision (prec2 in Table 8), which roughly correspond to the tagging accuracy in English where word segmentation is trivial.</S>
			<S sid ="202" ssid = "132">Prec2 is defined as the percentage of correctly tagged un­ known words to the correctly segmented unknown words.</S>
			<S sid ="203" ssid = "133">Table 8 shows that tagging precision is im­ proved from 88.2% to 96.6%.</S>
			<S sid ="204" ssid = "134">The tagging accuracy in context (96.6%) is significantly higher than that without context (74.4%).</S>
			<S sid ="205" ssid = "135">This shows that the word bigrams using unknown word tags for each part of speech are useful to predict the part of speech.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "5">
			<S sid ="206" ssid = "1">Since English uses spaces between words, unknown words can be identified by simple dictionary lookup.</S>
			<S sid ="207" ssid = "2">So the topic of interest is part of speech estimation.</S>
			<S sid ="208" ssid = "3">Some statistical model to estimate the part of speech of unknown words from the case of the first letter and the prefix and suffix is proposed (Weischedel et al., 1993; Brill, 1995; Ratnaparkhi, 1996; Mikheev, 1997).</S>
			<S sid ="209" ssid = "4">On the contrary, since Asian languages like Japanese and Chinese do not put spaces between words, previous work on unknown word problem is focused on word segmentation; there are few studies estimating part of speech of unknown words in Asian languages.</S>
			<S sid ="210" ssid = "5">The cues used for estimating the part of speech of unknown words for Japanese in this paper are ba­ sically the same for English, namely, the prefix and suffix of the unknown word as well as the previous and following part of speech.</S>
			<S sid ="211" ssid = "6">The contribution of this paper is in showing the fact that different char­ acter sets behave differently in Japanese and a better word model can be made by using this fact.</S>
			<S sid ="212" ssid = "7">By introducing different length models based on character sets, the number of decomposition errors of unknown words are significantly reduced.</S>
			<S sid ="213" ssid = "8">In other words, the tendency of over-segmentation is cor­ rected.</S>
			<S sid ="214" ssid = "9">However, the spelling model, especially the character bigrams in Equation (17) are hard to es­ timate because of the data sparseness.</S>
			<S sid ="215" ssid = "10">This is the main reason of the remaining under-segmented and over-segmented errors.</S>
			<S sid ="216" ssid = "11">To improve the unknown word model, feature­ based approach such as the maximum entropy method (Ratnaparkhi, 1996) might be useful, be­ cause we don&apos;t have to divide the training data into several disjoint sets (like we did by part of speech and word type) and we can incorporate more lin­ guistic and morphological knowledge into the same probabilistic framework.</S>
			<S sid ="217" ssid = "12">We are thinking of re­ implementing our unknown word model using the maximum entropy method as the next step of our research.</S>
			<S sid ="218" ssid = "13">Table 8: Part of speech tagging accuracy of unknown words (the last column represents the percentage of correctly tagged unknown words in the correctly segmented unknown words) r e c pr ec F pr ec 2 Po iss on +b igr a m W T + P o is s o n + b i g r a m P O S + P o is s o n + b i g r a m P O S + W T + P o is s o n + b i g r a m 28 .1 37 .7 37 .5 40 .6 57 .3 51 .5 58 .1 64 .1 37 .7 43 .5 45 .6 49 .7 8 8 . 2 8 7 . 9 9 4 . 3 9 6 . 6</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "6">
			<S sid ="219" ssid = "1">We present a statistical model of Japanese unknown words using word morphology and word context.</S>
			<S sid ="220" ssid = "2">We find that Japanese words are better modeled by clas­ sifying words based on the character sets (kanji, hi­ ragana, katakana, etc.) and its changes.</S>
			<S sid ="221" ssid = "3">This is because the different character sets behave differ­ ently in many ways (historical etymology, ideogram vs. phonogram, etc.).</S>
			<S sid ="222" ssid = "4">Both word segmentation ac­ curacy and part of speech tagging accuracy are im­ proved by treating them differently.</S>
	</SECTION>
</PAPER>
