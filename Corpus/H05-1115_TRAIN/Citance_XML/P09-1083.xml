<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">Opinion Question Answering (Opinion QA), which aims to find the authors’ sentimental opinions on a specific target, is more challenging than traditional fact- based question answering problems.</S>
		<S sid ="2" ssid = "2">To extract the opinion oriented answers, we need to consider both topic relevance and opinion sentiment issues.</S>
		<S sid ="3" ssid = "3">Current solutions to this problem are mostly ad-hoc combinations of question topic information and opinion information.</S>
		<S sid ="4" ssid = "4">In this paper, we propose an Opinion PageRank model and an Opinion HITS model to fully explore the information from different relations among questions and answers, answers and answers, and topics and opinions.</S>
		<S sid ="5" ssid = "5">By fully exploiting these relations, the experiment results show that our proposed algorithms outperform several state of the art baselines on benchmark data set.</S>
		<S sid ="6" ssid = "6">A gain of over 10% in F scores is achieved as compared to many other systems.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="7" ssid = "7">Question Answering (QA), which aims to provide answers to human-generated questions automatically, is an important research area in natural language processing (NLP) and much progress has been made on this topic in previous years.</S>
			<S sid ="8" ssid = "8">However, the objective of most state-of-the-art QA systems is to find answers to factual questions, such as “What is the longest river in the United States?” and “Who is Andrew Carnegie?” In fact, rather than factual information, people would also like to know about others’ opinions, thoughts and feelings toward some specific objects, people and events.</S>
			<S sid ="9" ssid = "9">Some examples of these questions are: “How is Bush’s decision not to ratify the Kyoto Protocol looked upon by Japan and other US al lies?”(Stoyanov et al., 2005) and “Why do people like Subway Sandwiches?” from TAC 2008 (Dang, 2008).</S>
			<S sid ="10" ssid = "10">Systems designed to deal with such questions are called opinion QA systems.</S>
			<S sid ="11" ssid = "11">Researchers (Stoyanov et al., 2005) have found that opinion questions have very different characteristics when compared with fact-based questions: opinion questions are often much longer, more likely to represent partial answers rather than complete answers and vary much more widely.</S>
			<S sid ="12" ssid = "12">These features make opinion QA a harder problem to tackle than fact-based QA.</S>
			<S sid ="13" ssid = "13">Also as shown in (Stoyanov et al., 2005), directly applying previous systems designed for fact-based QA onto opinion QA tasks would not achieve good performances.</S>
			<S sid ="14" ssid = "14">Similar to other complex QA tasks (Chen et al., 2006; Cui et al., 2007), the problem of opinion QA can be viewed as a sentence ranking problem.</S>
			<S sid ="15" ssid = "15">The Opinion QA task needs to consider not only the topic relevance of a sentence (to identify whether this sentence matches the topic of the question) but also the sentiment of a sentence (to identify the opinion polarity of a sentence).</S>
			<S sid ="16" ssid = "16">Current solutions to opinion QA tasks are generally in ad hoc styles: the topic score and the opinion score are usually separately calculated and then combined via a linear combination (Varma et al., 2008) or just filter out the candidate without matching the question sentiment (Stoyanov et al., 2005).</S>
			<S sid ="17" ssid = "17">However, topic and opinion are not independent in reality.</S>
			<S sid ="18" ssid = "18">The opinion words are closely associated with their contexts.</S>
			<S sid ="19" ssid = "19">Another problem is that existing algorithms compute the score for each answer candidate individually, in other words, they do not consider the relations between answer candidates.</S>
			<S sid ="20" ssid = "20">The quality of a answer candidate is not only determined by the relevance to the question, but also by other candidates.</S>
			<S sid ="21" ssid = "21">For example, the good answer may be mentioned by many candidates.</S>
			<S sid ="22" ssid = "22">In this paper, we propose two models to address the above limitations of previous sentence 737 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 737–745, Suntec, Singapore, 27 August 2009.</S>
			<S sid ="23" ssid = "23">Qc 2009 ACL and AFNLP ranking models.</S>
			<S sid ="24" ssid = "24">We incorporate both the topic relevance information and the opinion sentiment information into our sentence ranking procedure.</S>
			<S sid ="25" ssid = "25">Meanwhile, our sentence ranking models could naturally consider the relationships between different answer candidates.</S>
			<S sid ="26" ssid = "26">More specifically, our first model, called Opinion PageRank, incorporates opinion sentiment information into the graph model as a condition.</S>
			<S sid ="27" ssid = "27">The second model, called Opinion HITS model, considers the sentences as authorities and both question topic information and opinion sentiment information as hubs.</S>
			<S sid ="28" ssid = "28">The experiment results on the TAC QA data set demonstrate the effectiveness of the proposed Random Walk based methods.</S>
			<S sid ="29" ssid = "29">Our proposed method performs better than the best method in the TAC 2008 competition.</S>
			<S sid ="30" ssid = "30">The rest of this paper is organized as follows: Section 2 introduces some related works.</S>
			<S sid ="31" ssid = "31">We will discuss our proposed models in Section 3.</S>
			<S sid ="32" ssid = "32">In Section 4, we present an overview of our opinion QA system.</S>
			<S sid ="33" ssid = "33">The experiment results are shown in Section 5.</S>
			<S sid ="34" ssid = "34">Finally, Section 6 concludes this paper and provides possible directions for future work.</S>
	</SECTION>
	<SECTION title="Related Work. " number = "2">
			<S sid ="35" ssid = "1">Few previous studies have been done on opinion QA.</S>
			<S sid ="36" ssid = "2">To our best knowledge, (Stoyanov et al., 2005) first created an opinion QA corpus OpQA.</S>
			<S sid ="37" ssid = "3">They find that opinion QA is a more challenging task than factual question answering, and they point out that traditional fact-based QA approaches may have difficulty on opinion QA tasks if unchanged.</S>
			<S sid ="38" ssid = "4">(Somasundaran et al., 2007) argues that making finer grained distinction of subjective types (sentiment and arguing) further improves the QA system.</S>
			<S sid ="39" ssid = "5">For non-English opinion QA, (Ku et al., 2007) creates a Chinese opinion QA corpus.</S>
			<S sid ="40" ssid = "6">They classify opinion questions into six types and construct three components to retrieve opinion answers.</S>
			<S sid ="41" ssid = "7">Relevant answers are further processed by focus detection, opinion scope identification and polarity detection.</S>
			<S sid ="42" ssid = "8">Some works on opinion mining are motivated by opinion question answering.</S>
			<S sid ="43" ssid = "9">(Yu and Hatzivassiloglou, 2003) discusses a necessary component for an opinion question answering system: separating opinions from fact at both the document and sentence level.</S>
			<S sid ="44" ssid = "10">(SooMin and Hovy, 2005) addresses another important component of opinion question answering: finding opinion holders.</S>
			<S sid ="45" ssid = "11">More recently, TAC 2008 QA track (evolved from TREC) focuses on finding answers to opinion questions (Dang, 2008).</S>
			<S sid ="46" ssid = "12">Opinion questions retrieve sentences or passages as answers which are relevant for both question topic and question sentiment.</S>
			<S sid ="47" ssid = "13">Most TAC participants employ a strategy of calculating two types of scores for answer candidates, which are the topic score measure and the opinion score measure (the opinion information expressed in the answer candidate).</S>
			<S sid ="48" ssid = "14">However, most approaches simply combined these two scores by a weighted sum, or removed candidates that didn’t match the polarity of questions, in order to extract the opinion answers.</S>
			<S sid ="49" ssid = "15">Algorithms based on Markov Random Walk have been proposed to solve different kinds of ranking problems, most of which are inspired by the PageRank algorithm (Page et al., 1998) and the HITS algorithm (Kleinberg, 1999).</S>
			<S sid ="50" ssid = "16">These two algorithms were initially applied to the task of Web search and some of their variants have been proved successful in a number of applications, including fact-based QA and text summarization (Erkan and Radev, 2004; Mihalcea and Tarau, 2004; Otter- bacher et al., 2005; Wan and Yang, 2008).</S>
			<S sid ="51" ssid = "17">Generally, such models would first construct a directed or undirected graph to represent the relationship between sentences and then certain graph-based ranking methods are applied on the graph to compute the ranking score for each sentence.</S>
			<S sid ="52" ssid = "18">Sentences with high scores are then added into the answer set or the summary.</S>
			<S sid ="53" ssid = "19">However, to the best of our knowledge, all previous Markov Random Walk-based sentence ranking models only make use of topic relevance information, i.e. whether this sentence is relevant to the fact we are looking for, thus they are limited to fact based QA tasks.</S>
			<S sid ="54" ssid = "20">To solve the opinion QA problems, we need to consider both topic and sentiment in a nontrivial manner.</S>
	</SECTION>
	<SECTION title="Our Models for Opinion. " number = "3">
			<S sid ="55" ssid = "1">Sentence Ranking In this section, we formulate the opinion question answering problem as a topic and sentiment based sentence ranking task.</S>
			<S sid ="56" ssid = "2">In order to naturally integrate the topic and opinion information into the graph based sentence ranking framework, we propose two random walk based models for solving the problem, i.e. an Opinion PageRank model and an Opinion HITS model.</S>
			<S sid ="57" ssid = "3">3.1 Opinion PageRank Model.</S>
			<S sid ="58" ssid = "4">In order to rank sentence for opinion question answering, two aspects should be taken into account.</S>
			<S sid ="59" ssid = "5">First, the answer candidate is relevant to the question topic; second, the answer candidate is suitable for question sentiment.</S>
			<S sid ="60" ssid = "6">Considering Question Topic: We first introduce how to incorporate the question topic into the Markov Random Walk model, which is similar as the Topic-sensitive LexRank (Otterbacher et al., 2005).</S>
			<S sid ="61" ssid = "7">Given the set Vs = {vi} containing all the sentences to be ranked, we construct a graph where each node represents a sentence and each edge weight between sentence vi and sentence vj is induced from sentence similarity measure as fol Figure 1: Opinion PageRank first layer contains all the sentiment words from a lexicon to represent the opinion information, and the second layer denotes the sentence relationship lows: ( ) = f (i→j) k=1 f (i→k) , where f (i → j) in the topic sensitive Markov Random Walk model discussed above.</S>
			<S sid ="62" ssid = "8">The dashed lines between these represents the similarity between sentence vi and sentence vj , here is cosine similarity (BaezaYates and RibeiroNeto, 1999).</S>
			<S sid ="63" ssid = "9">We define f (i → i) = 0 to avoid self transition.</S>
			<S sid ="64" ssid = "10">Note that p(i → j) is usually not equal to p(j → i).</S>
			<S sid ="65" ssid = "11">We also compute the similarity rel(vi|q) of a sentence vi to the question topic q using the cosine measure.</S>
			<S sid ="66" ssid = "12">This relevance score is then normalized as follows to make the sum of all relevance values of the sentences equal to 1: rel′(vi q) = rel(vi|q) . k=1 rel(vk|q) two layers indicate the conditional influence between the opinion information and the sentences to be ranked.</S>
			<S sid ="67" ssid = "13">Formally, the new representation for the two- layer graph is denoted as G∗ = (Vs, Vo, Ess, Eso), where Vs = {vi} is the set of sentences and Vo = {oj} is the set of sentiment words representing the opinion information; Ess = {eij|vi, vj ∈ Vs} corresponds to all links between sentences and Eso = {eij|vi ∈ Vs, oj ∈ Vo} corresponds to the opinion correlation between a sentence and the sentiment words.</S>
			<S sid ="68" ssid = "14">For further discussions, we The saliency score Score(vi) for sentence vi can be calculated by mixing topic relevance score and scores of all other sentences linked with it as let π(oj ) ∈ [0, 1] denote the sentiment strength of word oj , and let ω(vi, oj ) ∈ [0, 1] denote the strength of the correlation between sentence vi and follows: Score( ) = ), j/=i Score(vj ) · p(j → word oj . We incorporate the two factors into the transition probability from vi to vj and the newi)+(1 −µ)rel′(vi|q), where µ is the damping fac transition probability p(i → j|Op(v ), Op(v )) is tor as in the PageRank algorithm.</S>
			<S sid ="69" ssid = "15">i j The matrix form is: p˜ = µM˜ T p˜ + (1 − defined as f (i→j|Op(vi),Op(vj )) P|Vs| f (i→k|Op(vi) ,Op(vk )) when ), f /= µ)α , where p˜ = [Score(vi)]is the vec 0, and defined as 0 otherwise, where Op(vi) is de tor of saliency scores for the sentences; M˜ = noted as the opinion information of sentence vi, and f (i → j|Op(vi), Op(vj )) is the new similar |Vs|×|Vs| is the graph with each entry ity score between two sentences vi and vj , condi corresponding to the transition probability; α = tioned on the opinion information expressed by the [rel′(vi|q)] is the vector containing the rel sentiment words they contain.</S>
			<S sid ="70" ssid = "16">We propose to compute the conditional similarity score by linearlyevance scores of all the sentences to the ques tion.</S>
			<S sid ="71" ssid = "17">The above process can be considered as a Markov chain by taking the sentences as the states and the corresponding transition matrix is given by A′ = µM˜ T + (1 − µ) eα T .Considering Topics and Sentiments To combining the scores conditioned on the source opinion (i.e. f (i → j|Op(vi))) and the destination opinion (i.e. f (i → j|Op(vj ))) as follows: f (i → j|Op(vi), Op(vj )) = λ · f (i → j|Op(vi)) + (1 − λ) · f (i → j|Op(vj )) X gether: In order to incorporate the opinion information and topic information for opinion sentence = λ · ok∈Op(vi) f (i → j) · π(ok) · ω(ok, vi) ranking in an unified framework, we propose an Opinion PageRank model (Figure 1) based on a + (1 − λ) · X ok′ ∈Op(vj )) (i → j) · π(ok′ ) · ω(ok′ , vj ) (1) two-layer link graph (Liu and Ma, 2005; Wan and Yang, 2008).</S>
			<S sid ="72" ssid = "18">In our opinion PageRank model, thewhere λ ∈ [0, 1] is the combination weight con trolling the relative contributions from the source opinion and the destination opinion.</S>
			<S sid ="73" ssid = "19">In this study, for simplicity, we define π(oj ) as 1, if oj exists in the sentiment lexicon, otherwise 0.</S>
			<S sid ="74" ssid = "20">And ω(vi, oj ) is described as an indicative function.</S>
			<S sid ="75" ssid = "21">In other words, if word oj appears in the sentence vi, ω(vi, oj ) is equal to 1.</S>
			<S sid ="76" ssid = "22">Otherwise, its value is 0.</S>
			<S sid ="77" ssid = "23">Then the new row-normalized matrix M˜ ∗ is defined as follows: M˜ ∗ = p(i → j|Op(i), Opj).</S>
			<S sid ="78" ssid = "24">The final sentence score for Opinion PageR- ank model is then denoted by: Score(vi) = µ · Figure 2: Opinion HITS model ), ˜ j/=i Score(vj ) · M∗ + (1 − µ) · rel′(si|q).</S>
			<S sid ="79" ssid = "25">The matrix form is: p˜ = µM˜ ∗T p˜ + (1 − µ) · α . The final transition matrix is then denoted as: A∗ = µM˜ ∗T +(1−µ) eα T and the sentence scores are obtained by the principle eigenvector of the new transition matrix A∗.</S>
			<S sid ="80" ssid = "26">3.2 Opinion HITS Model.</S>
			<S sid ="81" ssid = "27">correlations between sentence and opinion words.</S>
			<S sid ="82" ssid = "28">Each edge eij is associated with a weight owij denoting the strength of the relationship between the sentence vi and the opinion word oj . The weight owij is 1 if the sentence vi contains.</S>
			<S sid ="83" ssid = "29">word oj , otherwise 0.</S>
			<S sid ="84" ssid = "30">Est denotes the relationship between sentence and topic word.</S>
			<S sid ="85" ssid = "31">Its weight twij is calculated by tf · idf (Otterbacher et al., 2005).</S>
			<S sid ="86" ssid = "32">The word’s sentiment score is fixed in Opinion PageRank.</S>
			<S sid ="87" ssid = "33">This may encounter problem when We define two matrixes O = (Oij ) and the sentiment score definition is not suitable for |Vs|×|Vt| as follows, for Oij = owij , the specific question.</S>
			<S sid ="88" ssid = "34">We propose another opinion sentence ranking model based on the popular graph ranking algorithm HITS (Kleinberg, 1999).</S>
			<S sid ="89" ssid = "35">This model can dynamically learn the word sentiment score towards a specific question.</S>
			<S sid ="90" ssid = "36">HITS algorithm distinguishes the hubs and authorities in the objects.</S>
			<S sid ="91" ssid = "37">A hub object has links to many authorities, and an authority object has high-quality content and there are many hubs linking to it.</S>
			<S sid ="92" ssid = "38">The hub scores and authority scores are computed in a recursive way.</S>
			<S sid ="93" ssid = "39">Our proposed opinion HITS algorithm contains three layers.</S>
			<S sid ="94" ssid = "40">The upper level contains all the sentiment words from a lexicon, which represent their opinion information.</S>
			<S sid ="95" ssid = "41">The lower level contains all the words, which represent their topic information.</S>
			<S sid ="96" ssid = "42">The middle level contains all the opinion sentences to be ranked.</S>
			<S sid ="97" ssid = "43">We consider both the opinion layer and topic layer as hubs and the sentences as authorities.</S>
			<S sid ="98" ssid = "44">Figure 2 gives the bipartite graph representation, where the upper opin and if sentence i contains word j, therefore owij is assigned 1, otherwise owij is 0.</S>
			<S sid ="99" ssid = "45">Tij = twij = tfj · idfj (Otterbacher et al., 2005).</S>
			<S sid ="100" ssid = "46">Our new opinion HITS model is different from the basic HITS algorithm in two aspects.</S>
			<S sid ="101" ssid = "47">First, we consider the topic relevance when computing the sentence authority score based on the topic hub level as follows: Authsen(vi) ∝ ), twij · topic score(j)·hubtopic(j), where topic score(j) is empirically defined as 1, if the word j is in the topic set (we will discuss in next section), and 0.1 otherwise.</S>
			<S sid ="102" ssid = "48">Second, in our opinion HITS model, there are two aspects to boost the sentence authority score: we simultaneously consider both topic information and opinion information as hubs.</S>
			<S sid ="103" ssid = "49">The final scores for authority sentence, hub topic and hub opinion in our opinion HITS model are defined as: Auth(n+1)(vi) = (2) ion layer is merged with lower topic layer together as the hubs, and the middle sentence layer is con γ · X twij &gt;0 twij · topic score(j) · Hubtopic(tj ) sidered as the authority.</S>
			<S sid ="104" ssid = "50">Formally, the representation for the bipartite graph is denoted as G# = (Vs, Vo, Vt, Eso, Est), + (1 − γ) · X owij&gt;0 owij · Hubopinion(oj ) where Vs = {vi} is the set of sentences.</S>
			<S sid ="105" ssid = "51">Vo = Hub(n+1)(ti) = X twki · Auth(n)(vi) (3){oj} is the set of all the sentiment words repre senting opinion information, Vt = {tj} is the set of all the words representing topic information.</S>
			<S sid ="106" ssid = "52">topic twki&gt;0 Eso = {eij|vi ∈ Vs, oj ∈ Vo} corresponds to the Hub(n+1) (oi) = X owki&gt;0 owki · Auth(n)(vi) (4) Figure 3: Opinion Question Answering System The matrix form is: types of features, including a set of pattern features, and then design a classifier to identify sentiment polarity for each question (similar as (Yu and Hatzivassiloglou, 2003)).</S>
			<S sid ="107" ssid = "53">2).Topic Set Expansion: The opinion question asks opinions about a particular target.</S>
			<S sid ="108" ssid = "54">Semantic role labeling based (Carreras and Marquez, 2005) and rule based techniques can be employed to extract this target as topic word.</S>
			<S sid ="109" ssid = "55">We also expand the topic word with several external knowledge bases: Since all the entity synonyms are redirected into the same page in Wikipedia (Rodrigo et al., 2007), we collect these redirection synonym words to expand topic set.</S>
			<S sid ="110" ssid = "56">We also collect some related lists as topic words.</S>
			<S sid ="111" ssid = "57">For example, given question “What reasons did people give for liking Ed Norton’s movies?”, we a(n+1) = γ · T · e · tT · I · h(n) + (1 − γ) · O · h(n) (5) collect all the Norton’s movies from IMDB as this h(n+1) T h(n+1) T o = O s t (n) · (n) · a o (6) (7) question’s topic words.</S>
			<S sid ="112" ssid = "58">Docume nt Retrieval: The PRISE search engine, supported by NIST (Dang, 2008), is em where e is a |Vt|×1 vector with all elements equal to 1 and I is a |Vt| × |Vt| identity matrix, ts = ployed to retrieve the documents with topic word.Answer Candidate Extraction: We split re [topic score(j)] is the score vector for topic trieved documents into sentences, and extract sen words, a(n) = [Auth(n)(v )] is the vector sen i |Vs|×1 tences containi ng topic words.</S>
			<S sid ="113" ssid = "59">In order to imauthority scores for the sentence in the nth itera prove recall, we carry out the following process to tion, and the same as h(n) = [Hub(n) (tj )] , handle the problem of coreference resolution: We h(n) t (n) topic |Vt| ×1 clas sify the topi c wor d into fou r cate gori es: mal e, o = [Hubopinion(tj )] . In order to guaran-.</S>
			<S sid ="114" ssid = "60">tee the convergence of the iterative form, authority score and hub score are normalized after each iteration.</S>
			<S sid ="115" ssid = "61">For computation of the final scores, the initial scores of all nodes, including sentences, topic words and opinion words, are set to 1 and the above iterative steps are used to compute the new scores until convergence.</S>
			<S sid ="116" ssid = "62">Usually the convergence of the iteration algorithm is achieved when the difference between the scores computed at two successive iterations for any nodes falls below a given threshold (10e6 in this study).</S>
			<S sid ="117" ssid = "63">We use the authority scores as the saliency scores in the Opinion HITS model.</S>
			<S sid ="118" ssid = "64">The sentences are then ranked by their saliency scores.</S>
	</SECTION>
	<SECTION title="System Description. " number = "4">
			<S sid ="119" ssid = "1">In this section, we introduce the opinion question answering system based on the proposed graph methods.</S>
			<S sid ="120" ssid = "2">Figure 3 shows five main modules: Question Analysis: It mainly includes two components.</S>
			<S sid ="121" ssid = "3">1).Sentiment Classification: We classify all opinion questions into two categories: positive type or negative type.</S>
			<S sid ="122" ssid = "4">We extract severalfemale, group and other.</S>
			<S sid ="123" ssid = "5">Several pronouns are de fined for each category, such as ”he”, ”him”, ”his” for male category.</S>
			<S sid ="124" ssid = "6">If a sentence is determined to contain the topic word, and its next sentence contains the corresponding pronouns, then the next sentence is also extracted as an answer candidate, similar as (Chen et al., 2006).</S>
			<S sid ="125" ssid = "7">Answer Ranking: The answer candidates are ranked by our proposed Opinion PageRank method or Opinion HITS method.</S>
			<S sid ="126" ssid = "8">Answer Selection by Removing Redundancy: We incrementally add the top ranked sentence into the answer set, if its cosine similarity with every extracted answer doesn’t exceed a predefined threshold, until the number of selected sentence (here is 40) is reached.</S>
	</SECTION>
	<SECTION title="Experiments. " number = "5">
			<S sid ="127" ssid = "1">5.1 Experiment Step.</S>
			<S sid ="128" ssid = "2">5.1.1 Dataset We employ the dataset from the TAC 2008 QA track.</S>
			<S sid ="129" ssid = "3">The task contains a total of 87 squishy opinion questions.1 These questions have simple forms, and can be easily divided into positive type or negative type, for example “Why do people like Mythbusters?” and “What were the specific actions or reasons given for a negative attitude towards Mahmoud Ahmadinejad?”.</S>
			<S sid ="130" ssid = "4">The initial topic word for each question (called target in TAC) is also provided.</S>
			<S sid ="131" ssid = "5">Since our work in this paper focuses on sentence ranking for opinion QA, these characteristics of TAC data make it easy to process question analysis.</S>
			<S sid ="132" ssid = "6">Answers for all questions must be retrieved from the TREC Blog06 collection (Craig Macdonald and Iadh Ounis, 2006).</S>
			<S sid ="133" ssid = "7">The collection is a large sample of the blog sphere, crawled over an eleven-week period from December 6, 2005 until February 21, 2006.</S>
			<S sid ="134" ssid = "8">We retrieve the top 50 documents for each question.</S>
			<S sid ="135" ssid = "9">5.1.2 Evaluation Metrics We adopt the evaluation metrics used in the TAC squishy opinion QA task (Dang, 2008).</S>
			<S sid ="136" ssid = "10">The TAC assessors create a list of acceptable information nuggets for each question.</S>
			<S sid ="137" ssid = "11">Each nugget will be assigned a normalized weight based on the number of assessors who judged it to be vital.</S>
			<S sid ="138" ssid = "12">We use these nuggets and corresponding weights to assess our approach.</S>
			<S sid ="139" ssid = "13">Three human assessors complete the evaluation process.</S>
			<S sid ="140" ssid = "14">Every question is scored using nugget recall (NR) and an approximation to nugget precision (NP) based on length.</S>
			<S sid ="141" ssid = "15">The final score will be calculated using F measure with TAC official value β = 3 (Dang, 2008).</S>
			<S sid ="142" ssid = "16">This means recall is 3 times as important as precision: 2 The topic score is computed by the cosine similarity between question topic words and answer candidate.</S>
			<S sid ="143" ssid = "17">The opinion score is calculated using the number of opinion words normalized by the total number of words in candidate sentence.</S>
			<S sid ="144" ssid = "18">5.2 Performance Evaluation.</S>
			<S sid ="145" ssid = "19">5.2.1 Performance on Sentimental Lexicons Table 1: Sentiment lexicon description For lexicon-based opinion analysis, the selection of opinion thesaurus plays an important role in the final performance.</S>
			<S sid ="146" ssid = "20">HowNet2 is a knowledge database of the Chinese language, and provides an online word list with tags of positive and negative polarity.</S>
			<S sid ="147" ssid = "21">We use the English translation of those sentiment words as the sentimental lexicon.</S>
			<S sid ="148" ssid = "22">SentiWordNet (Esuli and Sebastiani, 2006) is another popular lexical resource for opinion mining.</S>
			<S sid ="149" ssid = "23">Table 1 shows the detail information of our used sen F (β = 3) = (3 + 1) · NP · NR 32 · NP + NR timent lexicons.</S>
			<S sid ="150" ssid = "24">In our models, the positive opinion words are used only for positive questions, and where NP is the sum of weights of nuggets re turned in response over the total sum of weights of all nuggets in nugget list, and NP = 1 − (length − allowance)/(length) if length is no less than allowance and 0 otherwise.</S>
			<S sid ="151" ssid = "25">Here allowance = 100 × (♯nuggets returned) andlength equals to the number of nonwhite char acters in strings.</S>
			<S sid ="152" ssid = "26">We will use average F Score to evaluate the performance for each system.</S>
			<S sid ="153" ssid = "27">5.1.3 Baseline The baseline combines the topic score and opinion score with a linear weight for each answer candidate, similar to the previous ad-hoc algorithms: final score = (1 − α) × opinion score + α × topic score (8) 13 questions were dropped from the evaluation due to no correct answers found in the corpus negative opinion words just for negative questions.</S>
			<S sid ="154" ssid = "28">We initially set parameter λ in Opinion PageRank as 0 as (Liu and Ma, 2005), and other parameters simply as 0.5, including µ in Opinion PageRank, γ in Opinion HITS, and α in baseline.</S>
			<S sid ="155" ssid = "29">The experiment results are shown in Figure 4.</S>
			<S sid ="156" ssid = "30">We can make three conclusions from Figure 4: 1.</S>
			<S sid ="157" ssid = "31">Opinion PageRank and Opinion HITS are.</S>
			<S sid ="158" ssid = "32">both effective.</S>
			<S sid ="159" ssid = "33">The best results of Opinion PageRank and Opinion HITS respectively achieve around 35.4% (0.199 vs 0.145), and 34.7% (0.195 vs 0.145) improvements in terms of F score over the best baseline result.</S>
			<S sid ="160" ssid = "34">We believe this is because our proposed models not only incorporate the topic information and opinion information, but also con 2http://www.keenage.com/zhiwang/e zhiwang.html Figure 4: Sentiment Lexicon Performance sider the relationship between different answers.</S>
			<S sid ="161" ssid = "35">The experiment results demonstrate the effectiveness of these relations.</S>
			<S sid ="162" ssid = "36">2.</S>
			<S sid ="163" ssid = "37">Opinion PageRank and Opinion HITS are comparable.</S>
			<S sid ="164" ssid = "38">Among five sentimental lexicons, Opinion PageRank achieves the best results when using HowNet and Union lexicons, and Opinion HITS achieves the best results using the other three lexicons.</S>
			<S sid ="165" ssid = "39">This may be because when the sentiment lexicon is defined appropriately for the specific question set, the opinion PageRank model performs better.</S>
			<S sid ="166" ssid = "40">While when the sentiment lexicon is not suitable for these questions, the opinion HITS model may dynamically learn a temporal sentiment lexicon and can yield a satisfied performance.</S>
			<S sid ="167" ssid = "41">3.</S>
			<S sid ="168" ssid = "42">Hownet achieves the best overall performance among five sentiment lexicons.</S>
			<S sid ="169" ssid = "43">In HowNet, English translations of the Chinese sentiment words are annotated by non- native speakers; hence most of them are common and popular terms, which maybe more suitable for the Blog environment (Zhang and Ye, 2008).</S>
			<S sid ="170" ssid = "44">We will use HowNet as the sentiment thesaurus in the following experiments.</S>
			<S sid ="171" ssid = "45">In baseline, the parameter α shows the relative contributions for topic score and opinion score.</S>
			<S sid ="172" ssid = "46">We vary α from 0 to 1 with an interval of 0.1, and find that the best baseline result 0.170 is achieved when α=0.1.</S>
			<S sid ="173" ssid = "47">This is because the topic information has been considered during candidate extraction, the system considering more opinion information (lower α) achieves better.</S>
			<S sid ="174" ssid = "48">We will use this best result as baseline score in following experiments.</S>
			<S sid ="175" ssid = "49">Since F(3) score is more related with recall, F score and recall will be demonstrated.</S>
			<S sid ="176" ssid = "50">In the next two sections, we will present the performances of the parameters in each model.</S>
			<S sid ="177" ssid = "51">For simplicity, we denote Opinion PageRank as PR, Opinion HITS as HITS, baseline as Base, Recall as r, F score as F. Figure 5: Opinion PageRank Performance with varying parameter λ (µ = 0.5) Figure 6: Opinion PageRank Performance with varying parameter µ (λ = 0.2) 5.2.2 Opinion PageRank Performance In Opinion PageRank model, the value λ combines the source opinion and the destination opinion.</S>
			<S sid ="178" ssid = "52">Figure 5 shows the experiment results on parameter λ.</S>
			<S sid ="179" ssid = "53">When we consider lower λ, the system performs better.</S>
			<S sid ="180" ssid = "54">This demonstrates that the destination opinion score contributes more than source opinion score in this task.</S>
			<S sid ="181" ssid = "55">The value of µ is a trade-off between answer reinforcement relation and topic relation to calculate the scores of each node.</S>
			<S sid ="182" ssid = "56">For lower value of µ, we give more importance to the relevance to the question than the similarity with other sentences.</S>
			<S sid ="183" ssid = "57">The experiment results are shown in Figure 6.</S>
			<S sid ="184" ssid = "58">The best result is achieved when µ = 0.8.</S>
			<S sid ="185" ssid = "59">This figure also shows the importance of reinforcement between answer candidates.</S>
			<S sid ="186" ssid = "60">If we don’t consider the sentence similarity(µ = 0), the performance drops significantly.</S>
			<S sid ="187" ssid = "61">5.2.3 Opinion HITS Performance The parameter γ combines the opinion hub score and topic hub score in the Opinion HITS model.</S>
			<S sid ="188" ssid = "62">The higher γ is, the more contribution is given HITS_r HITS_F Base_r Base_F System OpPageRank Precision 0.109 Recall 0.242 F(3) 0.200 OpHITS 0.102 0.256 0.205 System 1 0.079 0.235 0.186 System 2 0.053 0.262 0.173 System 3 0.109 0.216 0.172 Table 3: Comparison results with TAC 2008 Three Top Ranked Systems (system 13 demonstrate top 3 systems in TAC) Figure 7: Opinion HITS Performance with varying parameter γ to topic hub level, while the less contribution is given to opinion hub level.</S>
			<S sid ="189" ssid = "63">The experiment results are shown in Figure 7.</S>
			<S sid ="190" ssid = "64">Similar to baseline parameter α, since the answer candidates are extracted based on topic information, the systems considering opinion information heavily (α=0.1 in baseline, γ=0.2) perform best.</S>
			<S sid ="191" ssid = "65">Opinion HITS model ranks the sentences by authority scores.</S>
			<S sid ="192" ssid = "66">It can also rank the popular opinion words and popular topic words from the topic hub layer and opinion hub layer, towards a specific question.</S>
			<S sid ="193" ssid = "67">Take the question 1024.3 “What reasons do people give for liking Zillow?” as an example, its topic word is “Zillow”, and its sentiment polarity is positive.</S>
			<S sid ="194" ssid = "68">Based on the final hub scores, the top 10 topic words and opinion words are shown as Table 2.</S>
			<S sid ="195" ssid = "69">Table 2: Question-specific popular topic words and opinion words generated by Opinion HITS Zillow is a real estate site for users to see the value of houses or homes.</S>
			<S sid ="196" ssid = "70">People like it because it is easily used, accurate and sometimes free.</S>
			<S sid ="197" ssid = "71">From the Table 2, we can see that the top topic words are the most related with question topic, and the top opinion words are question-specific sentiment words, such as “accurate”, “easily”, “free”, not just general opinion words, like “great”, “excellent” and “good”.</S>
			<S sid ="198" ssid = "72">5.2.4 Comparisons with TAC Systems We are also interested in the performance comparison with the systems in TAC QA 2008.</S>
			<S sid ="199" ssid = "73">From Table 3, we can see Opinion PageRank and Opinion HITS respectively achieve around 10% improvement compared with the best result in TAC 2008, which demonstrates that our algorithm is indeed performing much better than the state-of-the-art opinion QA methods.</S>
	</SECTION>
	<SECTION title="Conclusion and Future Works. " number = "6">
			<S sid ="200" ssid = "1">In this paper, we proposed two graph based sentence ranking methods for opinion question answering.</S>
			<S sid ="201" ssid = "2">Our models, called Opinion PageRank and Opinion HITS, could naturally incorporate topic relevance information and the opinion sentiment information.</S>
			<S sid ="202" ssid = "3">Furthermore, the relationships between different answer candidates can be considered.</S>
			<S sid ="203" ssid = "4">We demonstrate the usefulness of these relations through our experiments.</S>
			<S sid ="204" ssid = "5">The experiment results also show that our proposed methods outperform TAC 2008 QA Task top ranked systems by about.</S>
			<S sid ="205" ssid = "6">10% in terms of F score.</S>
			<S sid ="206" ssid = "7">Our random walk based graph methods integrate topic information and sentiment information in a unified framework.</S>
			<S sid ="207" ssid = "8">They are not limited to the sentence ranking for opinion question answering.</S>
			<S sid ="208" ssid = "9">They can be used in general opinion document search.</S>
			<S sid ="209" ssid = "10">Moreover, these models can be more generalized to the ranking task with two types of influencing factors.</S>
			<S sid ="210" ssid = "11">Acknowledgments: Special thanks to Derek Hao Hu and Qiang Yang for their valuable comments and great help on paper preparation.</S>
			<S sid ="211" ssid = "12">We also thank Hongning Wang, Min Zhang, Xiaojun Wan and the anonymous reviewers for their useful comments, and thank Hoa Trang Dang for providing the TAC evaluation results.</S>
			<S sid ="212" ssid = "13">The work was supported by 973 project in China(2007CB311003), NSFC project(60803075), Microsoft joint project ”Opinion Summarization toward Opinion Search”, and a grant from the International Development Research Center, Canada.</S>
	</SECTION>
</PAPER>
