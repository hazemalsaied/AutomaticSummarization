<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">It is a fundamental and important task to extract key phrases from documents.</S>
		<S sid ="2" ssid = "2">Generally, phrases in a document are not independent in delivering the content of the document.</S>
		<S sid ="3" ssid = "3">In order to capture and make better use of their relationships in key phrase extraction, we suggest exploring the Wikipedia knowledge to model a document as a semantic network, where both nary and binary relationships among phrases are formulated.</S>
		<S sid ="4" ssid = "4">Based on a commonly accepted assumption that the title of a document is always elaborated to reflect the content of a document and consequently key phrases tend to have close semantics to the title, we propose a novel semi-supervised key phrase extraction approach in this paper by computing the phrase importance in the semantic network, through which the influence of title phrases is propagated to the other phrases iteratively.</S>
		<S sid ="5" ssid = "5">Experimental results demonstrate the remarkable performance of this approach.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="6" ssid = "6">Key phrases are defined as the phrases that express the main content of a document.</S>
			<S sid ="7" ssid = "7">Guided by the given key phrases, people can easily understand what a document describes, saving a great amount of time reading the whole text.</S>
			<S sid ="8" ssid = "8">Consequently, automatic key phrase extraction is in high demand.</S>
			<S sid ="9" ssid = "9">Meanwhile, it is also fundamental to many other natural language processing applications, such as information retrieval, text clustering and so on.</S>
			<S sid ="10" ssid = "10">Key phrase extraction can be normally cast as a ranking problem solved by either supervised or unsupervised methods.</S>
			<S sid ="11" ssid = "11">Supervised learning requires a large amount of expensive training data, whereas unsupervised learning totally ignores human knowledge.</S>
			<S sid ="12" ssid = "12">To overcome the deficiencies of these two kinds of methods, we propose a novel semi-supervised key phrase extraction approach in this paper, which explores title phrases as the source of knowledge.</S>
			<S sid ="13" ssid = "13">It is well agreed that the title has a similar role to the key phrases.</S>
			<S sid ="14" ssid = "14">They are both elaborated to reflect the content of a document.</S>
			<S sid ="15" ssid = "15">Therefore, phrases in the titles are often appropriate to be key phrases.</S>
			<S sid ="16" ssid = "16">That is why position has been a quite effective feature in the feature-based key phrase extraction methods (Witten, 1999), i.e., if a phrase is located in the title, it is ranked higher.</S>
			<S sid ="17" ssid = "17">However, one can only include a couple of most important phrases in the title prudently due to the limitation of the title length, even though many other key phrases are all pivotal to the understanding of the document.</S>
			<S sid ="18" ssid = "18">For example, when we read the title “China Tightens Grip on the Web”, we can only have a glimpse of what the document says.</S>
			<S sid ="19" ssid = "19">On the other hand, the key phrases, such as “China”, “Censorship”, “Web”, “Domain name”, “Internet”, and “CNNIC”, etc. can tell more details about the main topics of the document.</S>
			<S sid ="20" ssid = "20">In this regard, title phrases are often good key phrases but they are far from enough.</S>
			<S sid ="21" ssid = "21">If we review the above example again, we will find that the key phrase “Internet” can be inferred from the title phrase “Web”.</S>
			<S sid ="22" ssid = "22">As a matter of fact, key phrases often have close semantics to title phrases.</S>
			<S sid ="23" ssid = "23">Then a question comes to our minds: can we make use of these title phrases to infer the other key phrases?</S>
			<S sid ="24" ssid = "24">To provide a foundation of inference, a semantic network that captures the relationships among phrases is required.</S>
			<S sid ="25" ssid = "25">In the previous works (Turdakov and Velikhov, 2008), semantic networks are constructed based on the binary relations, and the semantic relatedness between a pair of phrases is formulated by the weighted edges that connects them.</S>
			<S sid ="26" ssid = "26">The deficiency of these approaches is the incapability to capture the nary relations among multiple phrases.</S>
			<S sid ="27" ssid = "27">For example, a group of 296 Proceedings of the ACL 2010 Conference Short Papers, pages 296–300, Uppsala, Sweden, 1116 July 2010.</S>
			<S sid ="28" ssid = "28">Qc 2010 Association for Computational Linguistics phrases may collectively describe an entity or an event.</S>
			<S sid ="29" ssid = "29">In this study, we propose to model a semantic network as a hyper-graph, where vertices represent phrases and weighted hyper-edges measure the semantic relatedness of both binary relations and nary relations among phrases.</S>
			<S sid ="30" ssid = "30">We explore a universal knowledge base – Wikipedia – to compute the semantic relatedness.</S>
			<S sid ="31" ssid = "31">Yet our major contribution is to develop a novel semi- supervised key phrase extraction approach by computing the phrase importance in the semantic network, through which the influence of title phrases is propagated to the other phrases iteratively.</S>
			<S sid ="32" ssid = "32">The goal of the semi-supervised learning is to design a function that is sufficiently smooth with respect to the intrinsic structure revealed by title phrases and other phrases.</S>
			<S sid ="33" ssid = "33">Based on the assumption that semantically related phrases are likely to have similar scores, the function to be estimated is required to assign title phrases a higher score and meanwhile locally smooth on the constructed hyper-graph.</S>
			<S sid ="34" ssid = "34">Zhou et al.’s work (Zhou 2005) lays down a foundation for our semi- supervised phrase ranking algorithm introduced in Section 3.</S>
			<S sid ="35" ssid = "35">Experimental results presented in Section 4 demonstrate the effectiveness of this approach.</S>
	</SECTION>
	<SECTION title="Wikipedia-based Semantic Network. " number = "2">
			<S sid ="36" ssid = "1">Construction Wikipedia1 is a free online encyclopedia, which has unarguably become the world’s largest col G=(V, E, W), where each vertex viV (1in) represents a phrase, each hyper-edge ejE (1jm) is a subset of V, representing binary relations or nary relations among phrases, and the weight w(ej) measures the semantic relatedness of ej.</S>
			<S sid ="37" ssid = "2">By applying the WSD technique proposed by (Turdakov and Velikhov, 2008), each phrase is assigned with a single Wikipedia article that describes its meaning.</S>
			<S sid ="38" ssid = "3">Intuitively, if the fraction of the links that the two articles have in common to the total number of the links in both articles is high, the two phrases corresponding to the two articles are more semantically related.</S>
			<S sid ="39" ssid = "4">Also, an article contains different types of links, which are relevant to the computation of semantic related- ness to different extent.</S>
			<S sid ="40" ssid = "5">Hence we adopt the weighted Dice metric proposed by (Turdakov 2008) to compute the semantic relatedness of each binary relation, resulting in the edge weight w(eij), where eij is an edge connecting the phrases vi and vj.</S>
			<S sid ="41" ssid = "6">To define the nary relations in the semantic network, a proper graph clustering technique is needed.</S>
			<S sid ="42" ssid = "7">We adopt the weighted Girvan Newman algorithm (Newman 2004) to cluster phrases (including title phrases) by computing their bet- weenness centrality.</S>
			<S sid ="43" ssid = "8">The advantage of this algorithm is that it need not specify a pre defined number of clusters.</S>
			<S sid ="44" ssid = "9">Then the phrases, within each cluster, are connected by a nary relation.</S>
			<S sid ="45" ssid = "10">nary relations among the phrases in the same cluster are then measured based on binary relations.</S>
			<S sid ="46" ssid = "11">The weight of a hyper-edge e is defined as: lection of encyclopedic knowledge.</S>
			<S sid ="47" ssid = "12">Articles are the basic entries in the Wikipedia, with each ar w(e)   | e |  w(eij ) eij e (1) ticle explaining one Wikipedia term.</S>
			<S sid ="48" ssid = "13">Articles contain links pointing from one article to another.</S>
			<S sid ="49" ssid = "14">Currently, there are over 3 million articles and 90 million links in English Wikipedia.</S>
			<S sid ="50" ssid = "15">In addition to providing a large vocabulary, Wikipedia articles also contain a rich body of lexical semantic information expressed via the extensive number of links.</S>
			<S sid ="51" ssid = "16">During recent years, Wikipedia has been used as a powerful tool to compute semantic re- latedness between terms in a good few of works (Turdakov 2008).</S>
			<S sid ="52" ssid = "17">We consider a document composed of the phrases that describe various aspects of entities or events with different semantic relationships.</S>
			<S sid ="53" ssid = "18">We then model a document as a semantic network formulated by a weighted hyper-graph 1 www.wikipedia.org where |e| is the number of the vertices in e, eij is an edge with two vertices included in e and  ≥ 0 is a parameter balancing the relative importance of nary hyper-edges compared with binary ones.</S>
	</SECTION>
	<SECTION title="Semi-supervised Learning from Title. " number = "3">
			<S sid ="54" ssid = "1">Given the document semantic network represented as a phrase hyper-graph, one way to make better use of the semantic information is to rank phrases with a semi-supervised learning strategy, where the title phrases are regarded as labeled samples, while the other phrases as unlabeled ones.</S>
			<S sid ="55" ssid = "2">That is, the information we have at the beginning about how to rank phrases is that the title phrases are the most important phrases.</S>
			<S sid ="56" ssid = "3">Initially, the title phrases are assigned with a positive score of 1 indicating its importance and oth er phrases are assigned zero.</S>
			<S sid ="57" ssid = "4">Then the importance scores of the phrases are learned iteratively from the title phrases through the hyper-graph.</S>
			<S sid ="58" ssid = "5">The key idea behind hyper-graph based semi- supervised ranking is that the vertices which vergence threshold  Output: The approximate phrase scores f Construct a document semantic network for all the phrases {v1,v2,…,vn} using the method described in section 2.</S>
			<S sid ="59" ssid = "6">usually belong to the same hyper-edges should Let   Dv 1/ 2 HWDe 1H T D 1/ 2 ; be assigned with similar scores.</S>
			<S sid ="60" ssid = "7">Then, we have the following two constraints: 1.</S>
			<S sid ="61" ssid = "8">The phrases which have many incident hyper-edges in common should be assigned similar scores.</S>
			<S sid ="62" ssid = "9">2.</S>
			<S sid ="63" ssid = "10">The given initial scores of the title phrases should be changed as little as possible.</S>
			<S sid ="64" ssid = "11">Given a weighted hyper-graph G, assume a ranking function f over V, which assigns each vertex v an importance score f(v).</S>
			<S sid ="65" ssid = "12">f can be thought as a vector in Euclid space R|V|.</S>
			<S sid ="66" ssid = "13">For the convenience of computation, we use an incidence matrix H to represent the hypergraph, defined as: 0, if v e Initialize the score vector y as yi  1,1  i  t , and y j  0, t  j  n ; Let , k = 0; REPEAT f k 1   f k  (1  ) y ; , ; ; UNTIL END Finally we rank phrases in descending order of the calculated importance scores and select those highest ranked phrases as key phrases.</S>
			<S sid ="67" ssid = "14">According to the number of all the candidate phrases, we choose an appropriate proportion, i.e. 10%, of h(v, e)   1, if v e (2) all the phrases as key phrases.</S>
			<S sid ="68" ssid = "15">Based on the incidence matrix, we define the degrees of the vertex v and the hyper-edge e as (3) and (4) Then, to formulate the above-mentioned constraints, let denote the initial score vector, then the importance scores of the phrases are learned iteratively by solving the following optimization problem: 2</S>
	</SECTION>
	<SECTION title="Evaluation. " number = "4">
			<S sid ="69" ssid = "1">4.1 Experiment Setup.</S>
			<S sid ="70" ssid = "2">We first collect all the Wikipedia terms to compose of a dictionary.</S>
			<S sid ="71" ssid = "3">The word sequences that occur in the dictionary are identified as phrases.</S>
			<S sid ="72" ssid = "4">Here we use a finite-state automaton to accomplish this task to avoid the imprecision of pre- processing by POS tagging or chunking.</S>
			<S sid ="73" ssid = "5">Then, we adopt the WSD technique proposed by (Turdakov and Velikhov 2008) to find the corres arg min {( f )   f R f  y } (5) 2 ponding Wikipedia article for each phrase.</S>
			<S sid ="74" ssid = "6">As mentioned in Section 2, a document semantic ( f )  1  1   w(e)  f (u)  f (v)   (6) network in the form of a hypergraph is con 2 eE  (e) {u,v}e   structed, on which Algorithm 1 is applied to rank where &gt; 0 is the parameter specifying the tradeoff between the two competitive items.</S>
			<S sid ="75" ssid = "7">Let Dv and De denote the diagonal matrices containing the vertex and the hyper-edge degrees respectively, W denote the diagonal matrix containing the hyper-edge weights, f* denote the solution of (6).</S>
			<S sid ="76" ssid = "8">Zhou has given the solution (Zhou, 2005) as.</S>
			<S sid ="77" ssid = "9">the phrases.</S>
			<S sid ="78" ssid = "10">To evaluate our proposed approach, we select 200 pieces of news from well-known English media.</S>
			<S sid ="79" ssid = "11">5 to 10 key phrases are manually labeled in each news document and the average number of the key phrases is 7.2 per document.</S>
			<S sid ="80" ssid = "12">Due to the abbreviation and synonymy phenomena, we construct a thesaurus and convert all manual and f *  f *  (1  ) y (7) automatic phrases into their canonical forms where  Dv 1/ 2 HWDe 1H T D 1/ 2 and   1/ ( 1) . when evalu ated.</S>
			<S sid ="81" ssid = "13">The traditi onal Recal l, Precis ion Using an approximation algorithm (e.g. Algorithm 1), we can finally get a vector f representing the approximate phrase scores.and F1-measure metrics are adopted for evalua tion.</S>
			<S sid ="82" ssid = "14">This section conducts two sets of experiment: (1) to examine the influence of two para meters:  and , on the key phrase extraction Algorithm 1: PhraseRank(V, T, a, b) Input: Title phrase set = {v1,v2,…,vt},the set of other phrases ={vt+1,vt+2,…,vn}, parameters  and , con- performance; (2) to compare with other well known state-of-art key phrase extraction approaches.</S>
			<S sid ="83" ssid = "15">4.2 Parameter tuning.</S>
			<S sid ="84" ssid = "16">The approach involves two parameters:  (0) is a relation factor balancing the influence of nary relations and binary relations;  (01) is a learning factor tuning the influence from the title phrases.</S>
			<S sid ="85" ssid = "17">It is hard to find a global optimized solution for the combination of these two factors.</S>
			<S sid ="86" ssid = "18">So we apply a gradient search strategy.</S>
			<S sid ="87" ssid = "19">At first, the learning factor is set to =0.8.</S>
			<S sid ="88" ssid = "20">Different values of  ranging from 0 to 3 are examined.</S>
			<S sid ="89" ssid = "21">Then, given that  is set to the value with the best performance, we conduct experiments to find an appropriate value for .</S>
			<S sid ="90" ssid = "22">4.2.1 : Relation Factor Figure 2.</S>
			<S sid ="91" ssid = "23">F1-measure with  in [0,1] 4.3 Comparison with Other Approaches.</S>
			<S sid ="92" ssid = "24">Our approach aims at inferring important key phrases from title phrases through a semantic network.</S>
			<S sid ="93" ssid = "25">Here we take a method of synonym expansion as the baseline, called WordNet ex 2First, we fix the learning factor  as 0.8 random pansion here.</S>
			<S sid ="94" ssid = "26">The WordNet expansion approach ly and evaluate the performance by varying  value from 0 to 3.</S>
			<S sid ="95" ssid = "27">When =0, it means that the weight of nary relations is zero and only binary relations are considered.</S>
			<S sid ="96" ssid = "28">As we can see from Figure 1, the performance is improved in most cases in terms of F1-measure and reaches a peak at =1.8.</S>
			<S sid ="97" ssid = "29">This justifies the rational to incorporate nary relations with binary relations in the document semantic network.</S>
			<S sid ="98" ssid = "30">Figure 1.</S>
			<S sid ="99" ssid = "31">F1-measures with  in [0 3] 4.2.2 : Learning factor Next, we set the relation factor =1.8, we inspect the performance with the learning factor  ranging from 0 to 1.</S>
			<S sid ="100" ssid = "32">=1 means that the ranking scores learn from the semantic network without any consideration of title phrases.</S>
			<S sid ="101" ssid = "33">As shown in Figure 2, we find that the performance almost keep a smooth fluctuation as  increases from 0 to 0.9, and then a diving when =1.</S>
			<S sid ="102" ssid = "34">This proves that title phrases indeed provide valuable information for learning.</S>
			<S sid ="103" ssid = "35">selects all the synonyms of the title phrases in the document as key phrases.</S>
			<S sid ="104" ssid = "36">Afterwards, our approach is evaluated against two existing approaches, which rely on the conventional semantic network and are able to capture binary relations only.</S>
			<S sid ="105" ssid = "37">One approach combines the title information into the Grineva’s community-based method (Grineva et al., 2009), called title- community approach.</S>
			<S sid ="106" ssid = "38">The title-community approach uses the GirvanNewman algorithm to cluster phrases into communities and selects those phrases in the communities containing the title phrases as key phrases.</S>
			<S sid ="107" ssid = "39">We do not limit the number of key phrases selected.</S>
			<S sid ="108" ssid = "40">The other one is based on topic-sensitive LexRank (Otterbacher et al., 2005), called title-sensitive PageRank here.</S>
			<S sid ="109" ssid = "41">The title-sensitive PageRank approach makes use of title phrases to re-weight the transitions between vertices and picks up 10% top ranked phrases as key phrases.</S>
			<S sid ="110" ssid = "42">Approach Precision Recall F1 Title-sensitive Pa- geRank (d=0.15) 34.8% 39.5% 37.0% Title-community 29.8% 56.9% 39.1% Our approach (=1.8, =0.5) 39.4% 44.6% 41.8% WordNet expansion (baseline) 7.9% 32.9% 12.5% Table 1.</S>
			<S sid ="111" ssid = "43">Comparison with other approaches Table 1 summarizes the performance on the test data.</S>
			<S sid ="112" ssid = "44">The results presented in the table show that our approach exhibits the best performance among all the four approaches.</S>
			<S sid ="113" ssid = "45">It follows that the key phrases inferred from a document semantic network are not limited to the synonyms of title phrases.</S>
			<S sid ="114" ssid = "46">As the titlesensitive PageRank ap 2 http://wordnet.princeton.edu proach totally ignores the nary relations, its performance is the worst.</S>
			<S sid ="115" ssid = "47">Based on binary relations, the title-community approach clusters phrases into communities and each community can be considered as an nary relation.</S>
			<S sid ="116" ssid = "48">However, this approach lacks of an importance propagation process.</S>
			<S sid ="117" ssid = "49">Consequently, it has the highest recall value but the lowest precision.</S>
			<S sid ="118" ssid = "50">In contrast, our approach achieves the highest precision, due to its ability to infer many correct key phrases using importance propagation among nary relations.</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "5">
			<S sid ="119" ssid = "1">This work is based on the belief that key phrases tend to have close semantics to the title phrases.</S>
			<S sid ="120" ssid = "2">In order to make better use of phrase relations in key phrase extraction, we explore the Wikipedia knowledge to model one document as a semantic network in the form of hyper-graph, through which the other phrases learned their importance scores from the title phrases iteratively.</S>
			<S sid ="121" ssid = "3">Experimental results demonstrate the effectiveness and robustness of our approach.</S>
	</SECTION>
	<SECTION title="Acknowledgments">
			<S sid ="122" ssid = "4">The work described in this paper was partially supported by NSFC programs (No: 60773173, 60875042 and 90920011), and Hong Kong RGC Projects (No: PolyU5217/07E).</S>
			<S sid ="123" ssid = "5">We thank the anonymous reviewers for their insightful comments.</S>
	</SECTION>
</PAPER>
