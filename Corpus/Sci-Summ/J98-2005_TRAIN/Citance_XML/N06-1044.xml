<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">We consider several empirical estimators for probabilistic context-free grammars, and show that the estimated grammars have the so-called consistency property, under the most general conditions.</S>
		<S sid ="2" ssid = "2">Ourestimators include the widely applied expectation maximization method, used toestimate probabilistic context-free grammars on the basis of unannotated corpora.This solves a problem left open in the literature, since for this method the consistency property has been shown only under restrictive assumptions on the rules of the source grammar.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="3" ssid = "3">Probabilistic context-free grammars are one of themost widely used formalisms in current work in statistical natural language parsing and stochastic language modeling.</S>
			<S sid ="4" ssid = "4">An important property for a proba bilistic context-free grammar is that it be consistent, that is, the grammar should assign probability of one to the set of all finite strings or parse trees that it generates.</S>
			<S sid ="5" ssid = "5">In other words, the grammar should not lose probability mass with strings or trees of infinite length.</S>
			<S sid ="6" ssid = "6">Several methods for the empirical estimation ofprobabilistic context-free grammars have been pro posed in the literature, based on the optimization of some function on the probabilities of the observed data, such as the maximization of the likelihood of a tree bank or a corpus of unannotated sentences.</S>
			<S sid ="7" ssid = "7">It has been conjectured in (Wetherell, 1980) that these methods always provide probabilistic context-freegrammars with the consistency property.</S>
			<S sid ="8" ssid = "8">A first re sult in this direction was presented in (Chaudhuri etal., 1983), by showing that a probabilistic contextfree grammar estimated by maximizing the likeli hood of a sample of parse trees is always consistent.</S>
			<S sid ="9" ssid = "9">In later work by (Sa´nchez and Benedi´, 1997)and (Chi and Geman, 1998), the result was in dependently extended to expectation maximization,which is an unsupervised method exploited to estimate probabilistic context-free grammars by find ing local maxima of the likelihood of a sample of unannotated sentences.</S>
			<S sid ="10" ssid = "10">The proof in (Sa´nchez andBenedi´, 1997) makes use of spectral analysis of expectation matrices, while the proof in (Chi and Ge man, 1998) is based on a simpler counting argument.Both these proofs assume restrictions on the un derlying context-free grammars.</S>
			<S sid ="11" ssid = "11">More specifically, in (Chi and Geman, 1998) empty rules and unaryrules are not allowed, thus excluding infinite ambi guity, that is, the possibility that some string in the input sample has an infinite number of derivations inthe grammar.</S>
			<S sid ="12" ssid = "12">The treatment of general form context free grammars has been an open problem so far.In this paper we consider several estimation meth ods for probabilistic context-free grammars, and weshow that the resulting grammars have the consis tency property.</S>
			<S sid ="13" ssid = "13">Our proofs are applicable under the most general conditions, and our results also include the expectation maximization method, thus solving the open problem discussed above.</S>
			<S sid ="14" ssid = "14">We usean alternative proof technique with respect to pre 343vious work, based on an already known renormal ization construction for probabilistic context-free grammars, which has been used in the context of language modeling.The structure of this paper is as follows.</S>
			<S sid ="15" ssid = "15">We provide some preliminary definitions in Section 2, followed in Section 3 by a brief overview of the estimation methods we investigate in this paper.</S>
			<S sid ="16" ssid = "16">In Section 4 we prove some properties of a renormalization technique for probabilistic context-free gram mars, and use this property to show our main results in Section 5.</S>
			<S sid ="17" ssid = "17">Section 6 closes with some concluding remarks.</S>
	</SECTION>
	<SECTION title="Preliminaries. " number = "2">
			<S sid ="18" ssid = "1">In this paper we use mostly standard notation, as for instance in (Hopcroft and Ullman, 1979) and (Booth and Thompson, 1973), which we summarize below.</S>
			<S sid ="19" ssid = "2">A context-free grammar (CFG) is a 4tupleG =(N,S, S,R) where N and S are finite disjoint setsof nonterminal and terminal symbols, respectively, S ? N is the start symbol and R is a finite set ofrules.</S>
			<S sid ="20" ssid = "3">Each rule has the form A?</S>
			<S sid ="21" ssid = "4">a, where A ? Nand a ?</S>
			<S sid ="22" ssid = "5">(S ?N)*.</S>
			<S sid ="23" ssid = "6">We write V for set S ?N .Each CFG G is associated with a leftmost de rive relation?, defined on triples consisting of twostrings ?, d ? V * and a rule pi ? R. We write ? pi?</S>
			<S sid ="24" ssid = "7">d if and only if ? = uA?&apos; and d = ua?&apos;, for someu ? S*, ?&apos; ?</S>
			<S sid ="25" ssid = "8">V *, and pi = (A ? a).</S>
			<S sid ="26" ssid = "9">A leftmost derivation for G is a string d = pi1 · · ·pim,m = 0, such that ?0 pi1?</S>
			<S sid ="27" ssid = "10">?1pi2?</S>
			<S sid ="28" ssid = "11">· · · pim?</S>
			<S sid ="29" ssid = "12">?m, forsome ?0, . . .</S>
			<S sid ="30" ssid = "13">, ?m ? V *; d = e (where e denotesthe empty string) is also a leftmost derivation.</S>
			<S sid ="31" ssid = "14">In the remainder of this paper, we will let the term derivation always refer to leftmost derivation.</S>
			<S sid ="32" ssid = "15">If ?0pi1?</S>
			<S sid ="33" ssid = "16">· · · pim?</S>
			<S sid ="34" ssid = "17">?m for some ?0, . . .</S>
			<S sid ="35" ssid = "18">, ?m ? V*, then we say that d = pi1 · · ·pim derives ?m from ?0 and we write ?0d?</S>
			<S sid ="36" ssid = "19">?m; d = e derives any ?0 ? V * from itself.</S>
			<S sid ="37" ssid = "20">A (leftmost) derivation d such that Sd?</S>
			<S sid ="38" ssid = "21">w, w ? S*, is called a complete derivation.</S>
			<S sid ="39" ssid = "22">If d isa complete derivation, we write y(d) to denote the (unique) string w ? S* such that Sd?</S>
			<S sid ="40" ssid = "23">w. We define D(G) to be the set of all complete derivations for G. The language generated by G is the set of all strings derived by complete derivations, i.e., L(G) = {y(d) | d ? D(G)}.</S>
			<S sid ="41" ssid = "24">It is well-known thatthere is a one-to-one correspondence between com plete derivations and parse trees for strings in L(G).For X ? V and a ? V *, we write f(X,a) to denote the number of occurrences of X in a. For (A ? a) ? R and a derivation d, f(A ? a, d)denotes the number of occurrences of A ? a in d.We let f(A, d) = ?a f(A? a, d).</S>
			<S sid ="42" ssid = "25">A probabilistic CFG (PCFG) is a pair G =(G, pG), where G is a CFG and pG is a functionfrom R to real numbers in the interval [0, 1].</S>
			<S sid ="43" ssid = "26">Wesay that G is proper if, for every A ? N , we have ? A?a pG(A? a) = 1.</S>
			<S sid ="44" ssid = "27">(1) Function pG can be used to assign probabilities toderivations of the underlying CFG G, in the follow ing way.</S>
			<S sid ="45" ssid = "28">For d = pi1 · · ·pim ? R*,m = 0, we define pG(d) =m? i=1 pG(pii).</S>
			<S sid ="46" ssid = "29">(2) Note that pG(e) = 1.</S>
			<S sid ="47" ssid = "30">The probability of a stringw ? S* is defined as pG(w) =?</S>
			<S sid ="48" ssid = "31">y(d)=w pG(d).</S>
			<S sid ="49" ssid = "32">(3) A PCFG is consistent if ? w pG(w) = 1.</S>
			<S sid ="50" ssid = "33">(4)Consistency implies that the PCFG defines a proba bility distribution over both sets D(G) and L(G).If a PCFG is proper, then consistency means that no probability mass is lost in derivations of infinitelength.</S>
			<S sid ="51" ssid = "34">All PCFGs in this paper are implicitly as sumed to be proper, unless otherwise stated.</S>
	</SECTION>
	<SECTION title="Estimation of PCFGs. " number = "3">
			<S sid ="52" ssid = "1">In this section we give a brief overview of some esti mation methods for PCFGs.</S>
			<S sid ="53" ssid = "2">These methods will be later investigated to show that they always provide consistent PCFGs.In natural language processing applications, estimation of a PCFG is usually carried out on the ba sis of a tree bank, which in this paper we assume to be a sample, that is, a finite multiset, of complete derivations.</S>
			<S sid ="54" ssid = "3">Let D be such a sample, and let D be 344 the underlying set of derivations.</S>
			<S sid ="55" ssid = "4">For d ? D, welet f(d,D) be the multiplicity of d in D, that is, thenumber of occurrences of d in D. We define f(A? a,D) =?</S>
			<S sid ="56" ssid = "5">d?D f(d,D) · f(A? a, d), (5) and let f(A,D) =?</S>
			<S sid ="57" ssid = "6">a f(A? a,D).Consider a CFG G = (N,S,R, S) defined by all and only the nonterminals, terminals and rulesobserved in D. The criterion of maximum likeli hood estimation (MLE) prescribes the construction of a PCFG G = (G, pG) such that pG maximizes thelikelihood of D, defined as pG(D) =?</S>
			<S sid ="58" ssid = "7">d?D pG(d)f(d,D), (6) subject to the properness conditions?a pG(A ?a) = 1 for eachA ? N . The maximization problemabove has a unique solution, provided by the estima tor (see for instance (Chi and Geman, 1998)) pG(A? a) =f(A? a,D) f(A,D).</S>
			<S sid ="59" ssid = "8">(7) We refer to this as the supervised MLE method.In applications in which a tree bank is not avail able, one might still use the MLE criterion to train a PCFG in an unsupervised way, on the basis of asample of unannotated sentences, also called a cor pus.</S>
			<S sid ="60" ssid = "9">Let us call C such a sample and C the underlying set of sentences.</S>
			<S sid ="61" ssid = "10">For w ? C, we let f(w, C) bethe multiplicity of w in C.Assume a CFG G = (N,S,R, S) that is able to generate all of the sentences in C, and possiblymore.</S>
			<S sid ="62" ssid = "11">The MLE criterion prescribes the construc tion of a PCFG G = (G, pG) such that pG maximizes the likelihood of C, defined as pG(C) =?</S>
			<S sid ="63" ssid = "12">w?C pG(w)f(w,C), (8)subject to the properness conditions as in the supervised case above.</S>
			<S sid ="64" ssid = "13">The above maximization prob lem provides a system of |R| nonlinear equations(see (Chi and Geman, 1998)) pG(A? a) =?w?C f(w, C) · EpG(d |w) f(A? a, d)?</S>
			<S sid ="65" ssid = "14">w?C f(w, C) · EpG(d |w) f(A, d), (9) where Ep denotes an expectation computed under distribution p, and pG(d |w) is the probability ofderivation d conditioned by sentence w (so thatpG(d |w) &gt; 0 only if y(d) = w).</S>
			<S sid ="66" ssid = "15">The solution tothe above system is not unique, because of the nonlinearity.</S>
			<S sid ="67" ssid = "16">Furthermore, each solution of (9) identifies a point where the curve in (8) has partial derivatives of zero, but this does not necessarily corre spond to a local maximum, let alone an absolute maximum.</S>
			<S sid ="68" ssid = "17">(A point with partial derivatives of zerothat is not a local maximum could be a local minimum or even a so-called saddle point.)</S>
			<S sid ="69" ssid = "18">In prac tice, this system is typically solved by means of an iterative algorithm called inside/outside (Charniak,1993), which implements the expectation maximiza tion (EM) method (Dempster et al., 1977).</S>
			<S sid ="70" ssid = "19">Startingwith an initial function pG that probabilistically extends G, a so-called growth transformation is com puted, defined as pG(A? a) =?</S>
			<S sid ="71" ssid = "20">w?C f(w, C)·?</S>
			<S sid ="72" ssid = "21">y(d)=wpG(d)pG(w) ·f(A? a, d)?</S>
			<S sid ="73" ssid = "22">w?C f(w, C)·?</S>
			<S sid ="74" ssid = "23">y(d)=wpG(d)pG(w) ·f(A, d).</S>
			<S sid ="75" ssid = "24">(10) Following (Baum, 1972), one can show that pG(C) = pG(C).</S>
			<S sid ="76" ssid = "25">Thus, by iterating the growth transformation above, we are guaranteed to reach a local maximum for (8), or possibly a saddle point.</S>
			<S sid ="77" ssid = "26">We refer to this as the unsupervised MLE method.</S>
			<S sid ="78" ssid = "27">We now discuss a third estimation method for PCFGs, which was proposed in (Corazza and Satta,2006).</S>
			<S sid ="79" ssid = "28">This method can be viewed as a generalization of the supervised MLE method to probability distributions defined over infinite sets of complete derivations.</S>
			<S sid ="80" ssid = "29">Let D be an infinite set of com plete derivations using nonterminal symbols in N , start symbol S ? N and terminal symbols in S.We assume that the set of rules that are observed in D is drawn from some finite set R. Let pD be a probability distribution defined over D, that is, a function from set D to interval [0, 1] such that?d?D pD(d) = 1.Consider the CFG G = (N,S,R, S).</S>
			<S sid ="81" ssid = "30">Note that D ? D(G).</S>
			<S sid ="82" ssid = "31">We wish to extend G to some PCFGG = (G, pG) in such a way that pD is approximated by pG (viewed as a distribution over complete derivations) as well as possible according to some criterion.</S>
			<S sid ="83" ssid = "32">One possible criterion is minimization of 345 the cross-entropy between pD and pG, defined asthe expectation, under distribution pD, of the information of the derivations in D computed under dis tribution pG, that is H(pD || pG) = EpD log1 pG(d) = -?</S>
			<S sid ="84" ssid = "33">d?D pD(d) · log pG(d).</S>
			<S sid ="85" ssid = "34">(11) We thus want to assign to the parameters pG(A ?a), A?</S>
			<S sid ="86" ssid = "35">a ? R, the values that minimize (11), subject to the conditions ?a pG(A ? a) = 1 for eachA ? N . Note that minimization of the cross-entropyabove is equivalent to minimization of the Kullback Leibler distance between pD and pG.</S>
			<S sid ="87" ssid = "36">Also note that the likelihood of an infinite set of derivations would always be zero and therefore cannot be considered here.</S>
			<S sid ="88" ssid = "37">The solution to the above minimization problem provides the estimator pG(A? a) =EpD f(A? a, d) EpD f(A, d).</S>
			<S sid ="89" ssid = "38">(12) A proof of this result appears in (Corazza and Satta, 2006), and is briefly summarized in Appendix A, in order to make this paper self-contained.</S>
			<S sid ="90" ssid = "39">We call the above estimator the cross-entropy minimization method.</S>
			<S sid ="91" ssid = "40">The cross-entropy minimization method can be viewed as a generalization of the supervised MLE method in (7), as shown in what follows.</S>
			<S sid ="92" ssid = "41">Let D andD be defined as for the supervisedMLEmethod.</S>
			<S sid ="93" ssid = "42">We define a distribution over D as pD(d) =f(d,D) |D|.</S>
			<S sid ="94" ssid = "43">(13)Distribution pD is usually called the empirical dis tribution associated withD.</S>
			<S sid ="95" ssid = "44">Applying the estimatorin (12) to pD, we obtain pG(A? a) = = ?d?D pD(d) · f(A? a, d)?</S>
			<S sid ="96" ssid = "45">d?D pD(d) · f(A, d) = ?d?D f(d,D)|D| · f(A? a, d) ?d?D f(d,D)|D| · f(A, d) = ?d?D f(d,D) · f(A? a, d)?</S>
			<S sid ="97" ssid = "46">d?D f(d,D) · f(A, d).</S>
			<S sid ="98" ssid = "47">(14)This is the supervised MLE estimator in (7).</S>
			<S sid ="99" ssid = "48">This re minds us of the well-known fact that maximizing thelikelihood of a (finite) sample through a PCFG dis tribution amounts to minimizing the cross-entropy between the empirical distribution of the sample and the PCFG distribution itself.</S>
	</SECTION>
	<SECTION title="Renormalization. " number = "4">
			<S sid ="100" ssid = "1">In this section we recall a renormalization technique for PCFGs that was used before in (Abney et al., 1999), (Chi, 1999) and (Nederhof and Satta, 2003) for different purposes, and is exploited in the next section to prove our main results.</S>
			<S sid ="101" ssid = "2">In the remainder of this section, we assume a fixed, not necessarily proper PCFG G = (G, pG), withG = (N,S, S,R).We define the renormalization of G as the PCFG R(G) = (G, pR) with pR specified by pR(A? a) = pG(A? a) · ?d,w pG(a d?</S>
			<S sid ="102" ssid = "3">w) ?d,w pG(A d?</S>
			<S sid ="103" ssid = "4">w) .</S>
			<S sid ="104" ssid = "5">(15) It is not difficult to see thatR(G) is a proper PCFG.We now show an important property of R(G), discussed before in (Nederhof and Satta, 2003) in thecontext of so-called weighted context-free gram mars.</S>
			<S sid ="105" ssid = "6">Lemma 1 For each derivation d with Ad?</S>
			<S sid ="106" ssid = "7">w, A ? N and w ? S*, we have pR(Ad?</S>
			<S sid ="107" ssid = "8">w) = pG(Ad?</S>
			<S sid ="108" ssid = "9">w) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="109" ssid = "10">w&apos;) .</S>
			<S sid ="110" ssid = "11">(16) Proof.</S>
			<S sid ="111" ssid = "12">The proof is by induction on the length of d, written |d|.</S>
			<S sid ="112" ssid = "13">If |d| = 1 we must have d = (A ? w),and thus pR(d) = pR(A ? w).</S>
			<S sid ="113" ssid = "14">In this case, thestatement of the lemma directly follows from (15).</S>
			<S sid ="114" ssid = "15">Assume now |d| &gt; 1 and let pi = (A ? a)be the first rule used in d. Note that there must be at least one nonterminal symbol in a. We can then write a as u0A1u1A2 · · ·uq1Aquq, for q = 1,Ai ? N , 1 = i = q, and uj ? S *, 0 =j = q. In words, A1, . . .</S>
			<S sid ="115" ssid = "16">, Aq are all of the occurrences of nonterminals in a, as they appear from left to right.</S>
			<S sid ="116" ssid = "17">Consequently, we can write d in the form d = pi · d1 · · · dq for some derivations di, 1 = i = q, with Aidi?</S>
			<S sid ="117" ssid = "18">wi, |di| = 1 and with 346 w = u0w1u1w2 · · ·uq1wquq.</S>
			<S sid ="118" ssid = "19">Below we use the fact that pR(uje?</S>
			<S sid ="119" ssid = "20">uj) = pG(uj e?</S>
			<S sid ="120" ssid = "21">uj) = 1 for each j with 0 = j = q, and further using the definition of pR and the inductive hypothesis, we can write pR(Ad?</S>
			<S sid ="121" ssid = "22">w) = = pR(A? a) ·q? i=1 pR(Aidi?</S>
			<S sid ="122" ssid = "23">wi) = pG(A? a) · ?d&apos;,w&apos; pG(a d&apos;?</S>
			<S sid ="123" ssid = "24">w&apos;) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="124" ssid = "25">w&apos;) · ·q? i=1 pR(Aidi?</S>
			<S sid ="125" ssid = "26">wi) = pG(A? a) · ?d&apos;,w&apos; pG(a d&apos;?</S>
			<S sid ="126" ssid = "27">w&apos;) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="127" ssid = "28">w&apos;) · ·q? i=1 pG(Aidi?</S>
			<S sid ="128" ssid = "29">wi) ?d&apos;,w&apos; pG(Ai d&apos;?</S>
			<S sid ="129" ssid = "30">w&apos;) = pG(A? a) · ?d&apos;,w&apos; pG(a d&apos;?</S>
			<S sid ="130" ssid = "31">w&apos;) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="131" ssid = "32">w&apos;) · · ?qi=1 pG(Ai di?</S>
			<S sid ="132" ssid = "33">wi)?qi=1 ?d&apos;,w&apos; pG(Ai d&apos;?</S>
			<S sid ="133" ssid = "34">w&apos;) = pG(A? a) · ?d&apos;,w&apos; pG(a d&apos;?</S>
			<S sid ="134" ssid = "35">w&apos;) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="135" ssid = "36">w&apos;) · · ?qi=1 pG(Ai di?</S>
			<S sid ="136" ssid = "37">wi)?</S>
			<S sid ="137" ssid = "38">d&apos;,w&apos; pG(ad&apos;?</S>
			<S sid ="138" ssid = "39">w&apos;) = pG(A? a) · ?qi=1 pG(Ai di?</S>
			<S sid ="139" ssid = "40">wi)?</S>
			<S sid ="140" ssid = "41">d&apos;,w&apos; pG(Ad&apos;?</S>
			<S sid ="141" ssid = "42">w&apos;) · =pG(A d?</S>
			<S sid ="142" ssid = "43">w) ?d&apos;,w&apos; pG(A d&apos;?</S>
			<S sid ="143" ssid = "44">w&apos;) .</S>
			<S sid ="144" ssid = "45">(17) As an easy corollary of Lemma 1, we have that R(G) is a consistent PCFG, as we can write ? d,w pR(Sd?</S>
			<S sid ="145" ssid = "46">w) = =?</S>
			<S sid ="146" ssid = "47">d,w pG(Sd?</S>
			<S sid ="147" ssid = "48">w) ?d&apos;,w&apos; pG(S d&apos;?</S>
			<S sid ="148" ssid = "49">w&apos;) = ?d,w pG(S d?</S>
			<S sid ="149" ssid = "50">w) ?d&apos;,w&apos; pG(S d&apos;?</S>
			<S sid ="150" ssid = "51">w&apos;) = 1.</S>
			<S sid ="151" ssid = "52">(18)</S>
	</SECTION>
	<SECTION title="Consistency. " number = "5">
			<S sid ="152" ssid = "1">In this section we prove the main results of this paper, namely that all of the estimation methods discussed in Section 3 always provide consistent PCFGs.</S>
			<S sid ="153" ssid = "2">We start with a technical lemma, central to our results, showing that a PCFG that minimizes the cross-entropy with a distribution over any set of derivations must be consistent.</S>
			<S sid ="154" ssid = "3">Lemma 2 Let G = (G, pG) be a proper PCFGand let pD be a probability distribution defined over some set D ? D(G).</S>
			<S sid ="155" ssid = "4">If G minimizes functionH(pD || pG), then G is consistent.</S>
			<S sid ="156" ssid = "5">Proof.</S>
			<S sid ="157" ssid = "6">LetG = (N,S, S,R), and assume that G isnot consistent.</S>
			<S sid ="158" ssid = "7">We establish a contradiction.</S>
			<S sid ="159" ssid = "8">Since G is not consistent, we must have?</S>
			<S sid ="160" ssid = "9">d,w pG(Sd?</S>
			<S sid ="161" ssid = "10">w) &lt; 1.</S>
			<S sid ="162" ssid = "11">Let then R(G) = (G, pR) be the renormalization.</S>
			<S sid ="163" ssid = "12">of G, defined as in (15).</S>
			<S sid ="164" ssid = "13">For any derivation Sd?</S>
			<S sid ="165" ssid = "14">w, w ? S*, with d in D, we can use Lemma 1 andwrite pR(Sd?</S>
			<S sid ="166" ssid = "15">w) = =1 ?d&apos;,w&apos; pG(S d&apos;?</S>
			<S sid ="167" ssid = "16">w&apos;) · pG(Sd?</S>
			<S sid ="168" ssid = "17">w) &gt; pG(Sd?</S>
			<S sid ="169" ssid = "18">w).</S>
			<S sid ="170" ssid = "19">(19) In words, every complete derivation d in D has a probability in R(G) that is strictly greater than inG.</S>
			<S sid ="171" ssid = "20">But this means H(pD || pR) &lt; H(pD || pG),against our hypothesis.</S>
			<S sid ="172" ssid = "21">Therefore, G is consistentand pG is a probability distribution over set D(G).Thus function H(pD || pG) can be interpreted as thecross-entropy.</S>
			<S sid ="173" ssid = "22">(Observe that in the statement of the lemma we have avoided the term cross-entropy, since cross-entropies are only defined for probability distributions.)</S>
			<S sid ="174" ssid = "23">Lemma 2 directly implies that the cross-entropyminimization method in (12) always provides a con sistent PCFG, since it minimizes cross-entropy for a distribution defined over a subset ofD(G).</S>
			<S sid ="175" ssid = "24">We havealready seen in Section 3 that the supervised MLEmethod is a special case of the cross-entropy min imization method.</S>
			<S sid ="176" ssid = "25">Thus we can also conclude that a PCFG trained with the supervised MLE method is 347 always consistent.</S>
			<S sid ="177" ssid = "26">This provides an alternative proof of a property that was first shown in (Chaudhuri et al., 1983), as discussed in Section 1.We now prove the same result for the unsupervised MLE method, without any restrictive assump tion on the rules of our CFGs.</S>
			<S sid ="178" ssid = "27">This solves a problem that was left open in the literature (Chi and Geman,1998); see again Section 1 for discussion.</S>
			<S sid ="179" ssid = "28">Let C andC be defined as in Section 3.</S>
			<S sid ="180" ssid = "29">We define the empiri cal distribution of C as pC(w) =f(w, C) |C|.</S>
			<S sid ="181" ssid = "30">(20) Let G = (N,S, S,R) be a CFG such that C ?L(G).</S>
			<S sid ="182" ssid = "31">Let D(C) be the set of all complete derivations for G that generate sentences in C, that is, D(C) = {d | d ? D(G), y(d) ? C}.Further, assume some probabilistic extension G = (G, pG) of G, such that pG(d) &gt; 0 for every d ?D(C).</S>
			<S sid ="183" ssid = "32">We define a distribution over D(C) by pD(C)(d) = pC(y(d)) ·pG(d) pG(y(d)).</S>
			<S sid ="184" ssid = "33">(21) It is not difficult to verify that?</S>
			<S sid ="185" ssid = "34">d?D(C) pD(C)(d) = 1.</S>
			<S sid ="186" ssid = "35">(22) We now apply to G the estimator in (12), in orderto obtain a new PCFG G = (G, pG) that minimizesthe cross-entropy between pD(C) and pG. According to Lemma 2, we have that G is a consistent PCFG.Distribution pG is specified by pG(A? a) = = ?d?D(C) pD(C)(d)·f(A? a, d)?</S>
			<S sid ="187" ssid = "36">d?D(C) pD(C)(d)·f(A, d) = ?d?D(C) f(y(d),C)|C| · pG(d)pG(y(d)) ·f(A? a, d)?</S>
			<S sid ="188" ssid = "37">d?D(C)f(y(d),C) |C| ·pG(d) pG(y(d))·f(A, d) = ?w?C f(w, C)· ?y(d)=w pG(d)pG(w) ·f(A? a, d)?</S>
			<S sid ="189" ssid = "38">w?C f(w, C)·?</S>
			<S sid ="190" ssid = "39">y(d)=wpG(d)pG(w) ·f(A, d) = ?w?C f(w, C)·EpG(d |w)f(A? a, d)?</S>
			<S sid ="191" ssid = "40">w?C f(w, C)·EpG(d |w)f(A, d).</S>
			<S sid ="192" ssid = "41">(23)Since distribution pG was arbitrarily chosen, sub ject to the only restriction that pG(d) &gt; 0 for every d ? D(C), we have that (23) is the growth estimator (10) already discussed in Section 3.</S>
			<S sid ="193" ssid = "42">In fact, for each w ? L(G) and d ? D(G), we have pG(d |w) =pG(d)pG(w) . We conclude with the desired.</S>
			<S sid ="194" ssid = "43">result, namely that a general form PCFG obtained at any iteration of the EM method for the unsupervised MLE is always consistent.</S>
	</SECTION>
	<SECTION title="Conclusions. " number = "6">
			<S sid ="195" ssid = "1">In this paper we have investigated a number ofmethods for the empirical estimation of probabilis tic context-free grammars, and have shown that the resulting grammars have the so-called consistencyproperty.</S>
			<S sid ="196" ssid = "2">This property guarantees that all the prob ability mass of the grammar is used for the finite strings it derives.</S>
			<S sid ="197" ssid = "3">Thus if the grammar is used in combination with other probabilistic models, as for instance in a speech processing system, consistencyallows us to combine or compare scores from differ ent modules in a sound way.</S>
			<S sid ="198" ssid = "4">To obtain our results, we have used a novel prooftechnique that exploits an already known construction for the renormalization of probabilistic context free grammars.</S>
			<S sid ="199" ssid = "5">Our proof technique seems moreintuitive than arguments previously used in the lit erature to prove the consistency property, based on counting arguments or on spectral analysis.</S>
			<S sid ="200" ssid = "6">It is not difficult to see that our proof technique can also be used with probabilistic rewriting formalisms whose underlying derivations can be characterized by means of context-free rewriting.</S>
			<S sid ="201" ssid = "7">This is for instance the case with probabilistic tree-adjoining grammars (Schabes, 1992; Sarkar, 1998), for which consistency results have not yet been shown in the literature.</S>
			<S sid ="202" ssid = "8">A Cross-entropy minimization In order to make this paper self-contained, we sketch a proof of the claim in Section 3 that the estimator in (12) minimizes the cross entropy in (11).</S>
			<S sid ="203" ssid = "9">A full proof appears in (Corazza and Satta, 2006).</S>
			<S sid ="204" ssid = "10">Let D, pD and G = (N,S,R, S) be defined asin Section 3.</S>
			<S sid ="205" ssid = "11">We want to find a proper PCFG G =(G, pG) such that the cross-entropy H(pD || pG) isminimal.</S>
			<S sid ="206" ssid = "12">We use Lagrange multipliers ?A for each A ? N and define the form ? =?</S>
			<S sid ="207" ssid = "13">A?N ?A · (?</S>
			<S sid ="208" ssid = "14">a pG(A? a)- 1) + 348 -?</S>
			<S sid ="209" ssid = "15">d?D pD(d) · log pG(d).</S>
			<S sid ="210" ssid = "16">(24) We now consider all the partial derivatives of?.</S>
			<S sid ="211" ssid = "17">Foreach A ? N we have ??</S>
			<S sid ="212" ssid = "18">??A=?</S>
			<S sid ="213" ssid = "19">a pG(A? a)- 1.</S>
			<S sid ="214" ssid = "20">(25) For each (A? a) ? R we have ??</S>
			<S sid ="215" ssid = "21">?pG(A? a)= = ?A -?</S>
			<S sid ="216" ssid = "22">?pG(A? a) ? d?D pD(d) · log pG(d) = ?A -?</S>
			<S sid ="217" ssid = "23">d?D pD(d) ·?</S>
			<S sid ="218" ssid = "24">?pG(A? a)log pG(d) = ?A -?</S>
			<S sid ="219" ssid = "25">d?D pD(d) ·?</S>
			<S sid ="220" ssid = "26">?pG(A? a) log?</S>
			<S sid ="221" ssid = "27">(B?ß)?R pG(B ? ß)f(B?ß,d) = ?A -?</S>
			<S sid ="222" ssid = "28">d?D pD(d) ·?</S>
			<S sid ="223" ssid = "29">?pG(A? a)?</S>
			<S sid ="224" ssid = "30">(B?ß)?R f(B ? ß, d) · log pG(B ? ß) = ?A -?</S>
			<S sid ="225" ssid = "31">d?D pD(d) ·?</S>
			<S sid ="226" ssid = "32">(B?ß)?R f(B ? ß, d) · ? ?pG(A? a)log pG(B ? ß) = ?A -?</S>
			<S sid ="227" ssid = "33">d?D pD(d) · f(A? a, d) · ·1 ln(2)· 1 pG(A? a) = ?A -1 ln(2)· 1 pG(A? a)· ·?</S>
			<S sid ="228" ssid = "34">d?D pD(d) · f(A? a, d) = ?A -1 ln(2)· 1 pG(A? a)· · EpD f(A? a, d).</S>
			<S sid ="229" ssid = "35">(26) By setting to zero all of the above partial derivatives, we obtain a system of |N |+|R| equations, which wemust solve.</S>
			<S sid ="230" ssid = "36">From ??</S>
			<S sid ="231" ssid = "37">?pG(A?a)= 0 we obtain ?A · ln(2) · pG(A? a) = EpDf(A? a, d).</S>
			<S sid ="232" ssid = "38">(27) We sum over all strings a such that (A ? a) ? R,deriving ?A · ln(2) ·?</S>
			<S sid ="233" ssid = "39">a pG(A? a) = =?</S>
			<S sid ="234" ssid = "40">a EpD f(A? a, d) =?</S>
			<S sid ="235" ssid = "41">a ? d?D pD(d) · f(A? a, d) =?</S>
			<S sid ="236" ssid = "42">d?D pD(d) ·?</S>
			<S sid ="237" ssid = "43">a f(A? a, d) =?</S>
			<S sid ="238" ssid = "44">d?D pD(d) · f(A, d) = EpD f(A, d).</S>
			<S sid ="239" ssid = "45">(28) From each equation ????A = 0 we obtain?a pG(A ? a) = 1 for each A ? N (our original constraints).</S>
			<S sid ="240" ssid = "46">Combining this with (28) we obtain ?A · ln(2) = EpD f(A, d).</S>
			<S sid ="241" ssid = "47">(29) Replacing (29) into (27) we obtain, for every rule (A? a) ? R, pG(A? a) =EpD f(A? a, d) EpD f(A, d).</S>
			<S sid ="242" ssid = "48">(30) This is the estimator introduced in Section 3.</S>
	</SECTION>
</PAPER>
