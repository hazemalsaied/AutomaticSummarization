<PAPER>
	<ABSTRACT>
		<S sid ="1" ssid = "1">This paper demonstrates the substantial empirical success of classi.er combination for the word sense disambiguation task.</S>
		<S sid ="2" ssid = "2">It investigates more than 10 classi.er combination methods, including second order classi.er stacking, over 6 major structurally different base classi.ers (enhanced Naïve Bayes, cosine, Bayes Ratio, decision lists, transformation-based learning and maximum variance boosted mix­ture models).</S>
		<S sid ="3" ssid = "3">The paper also includes in-depth per­formance analysis sensitive to properties of the fea­ture space and component classi.ers.</S>
		<S sid ="4" ssid = "4">When eval­uated on the standard SENSEVAL1 and 2 data sets on 4 languages (English, Spanish, Basque, and Swedish), classi.er combination performance ex­ceeds the best published results on these data sets.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number = "1">
			<S sid ="5" ssid = "5">Classi.er combination has been extensively stud­ied in the last decade, and has been shown to be successful in improving the performance of diverse NLP applications, including POS tagging (Brill and Wu, 1998; van Halteren et al., 2001), base noun phrase chunking (Sang et al., 2000), parsing (Hen­derson and Brill, 1999) and word sense disambigua­tion (Kilgarriff and Rosenzweig, 2000; Stevenson and Wilks, 2001).</S>
			<S sid ="6" ssid = "6">There are several reasons why classi.er combination is useful.</S>
			<S sid ="7" ssid = "7">First, by consulting the output of multiple classi.ers, the system will im­prove its robustness.</S>
			<S sid ="8" ssid = "8">Second, it is possible that the problem can be decomposed into orthogonal feature spaces (e.g. linguistic constraints and word occur­rence statistics) and it is often better to train dif­ferent classi.ers in each of the feature spaces and then combine their output, instead of designing a complex system that handles the multimodal infor­mation.</S>
			<S sid ="9" ssid = "9">Third, it has been shown by Perrone and Cooper (1993) that it is possible to reduce the clas­si.cation error by a factor of .(Nis the number of classi.ers) by combination, if the classi.ers’ errors are uncorrelated and unbiased.</S>
			<S sid ="10" ssid = "10">The target task studied here is word sense disam­biguation in the SENSEVAL evaluation framework (Kilgarriff and Palmer, 2000; Edmonds and Cotton, 2001) with comparative tests in English, Spanish, Swedish and Basque lexical-sample sense tagging over a combined sample of 37730 instances of 234 polysemous words.</S>
			<S sid ="11" ssid = "11">This paper offers a detailed comparative evalu­ation and description of the problem of classi.er combination over a structurally and procedurally diverse set of six both well established and orig­inal classi.ers: extended Naïve Bayes, BayesRa­tio, Cosine, non-hierarchical Decision Lists, Trans­formation Based Learning (TBL), and the MMVC classi.ers, brie.y described in Section 4.</S>
			<S sid ="12" ssid = "12">These systems have different space-searching strategies, ranging from discriminant functions (BayesRatio) to data likelihood (Bayes, Cosine) to decision rules (TBL, Decision Lists), and therefore are amenable to combination.</S>
	</SECTION>
	<SECTION title="Previous Work. " number = "2">
			<S sid ="13" ssid = "1">Related work in classi.er combination is discussed throughout this article.</S>
			<S sid ="14" ssid = "2">For the speci.c task of word sense disambiguation, the .rst empirical study was presented in Kilgarriff and Rosenzweig (2000), where the authors combined the output of the par­ticipating SENSEVAL1 systems via simple (non­weighted) voting, using either Absolute Majority, Relative Majority, or Unanimous voting.</S>
			<S sid ="15" ssid = "3">Steven­son and Wilks (2001) presented a classi.er com­bination framework where 3 disambiguation meth­ods (simulated annealing, subject codes and selec­tional restrictions) were combined using the TiMBL memory-based approach (Daelemans et al., 1999).</S>
			<S sid ="16" ssid = "4">Pedersen (2000) presents experiments with an en­semble of Naïve Bayes classi.ers, which outper­form all previous published results on two ambigu­ous words (line and interest).</S>
	</SECTION>
	<SECTION title="The WSD Feature Space. " number = "3">
			<S sid ="17" ssid = "1">The feature space is a critical factor in classi.er de­sign, given the need to fuel the diverse strengths of the component classi.ers.</S>
			<S sid ="18" ssid = "2">Thus its quality is of­ten highly correlated with performance.</S>
			<S sid ="19" ssid = "3">For this An ancient stone church stands amid the .elds, the sound of bells ...</S>
			<S sid ="20" ssid = "4">Feat.</S>
			<S sid ="21" ssid = "5">Type Word POS Lemma Context ancient JJ ancient/J Context stone NN stone/N Context church NNP church/N Context stands VBZ stand/V Context amid IN amid/I Context .elds NN .eld/N Context ...</S>
			<S sid ="22" ssid = "6">Syntactic (predicate-argument) features SubjectTo stands_Sbj VBZ stand_Sbj/V Modi.er stone_mod JJ ancient_mod/J Ngram collocational features -1 bigram stone_L JJ ancient_L/J +1 bigram stands_R VBZ stand_R/V ±1 trigram stone •stands JJ•VBZ stone/J•stands/V ...</S>
			<S sid ="23" ssid = "7">Figure 1: Example sentence and extracted features from the SENSEVAL2 word church reason, we used a rich feature space based on raw words, lemmas and part-of-speech (POS) tags in a variety of positional and syntactical relationships to the target word.</S>
			<S sid ="24" ssid = "8">These positions include traditional unordered bag-of-word context, local bigram and trigram collocations and several syntactic relation­ships based on predicate-argument structure.</S>
			<S sid ="25" ssid = "9">Their use is illustrated on a sample English sentence for the target word church in Figure 1.</S>
			<S sid ="26" ssid = "10">While an exten­sive evaluation of feature type to WSD performance is beyond the scope of this paper, Section 6 sketches an analysis of the individual feature contribution to each of the classi.er types.</S>
			<S sid ="27" ssid = "11">3.1 Part-of-Speech Tagging and Lemmatization.</S>
			<S sid ="28" ssid = "12">Part-of-speech tagger availability varied across the languages that are studied here.</S>
			<S sid ="29" ssid = "13">An electronically available transformation-based POS tagger (Ngai and Florian, 2001) was trained on standard labeled data for English (Penn Treebank), Swedish (SUC­1 corpus), and Basque.</S>
			<S sid ="30" ssid = "14">For Spanish, an minimally supervised tagger (Cucerzan and Yarowsky, 2000) was used.</S>
			<S sid ="31" ssid = "15">Lemmatization was performed using an existing trie-based supervised models for English, and a combination of supervised and unsupervised methods (Yarowsky and Wicentowski, 2000) for all the other languages.</S>
			<S sid ="32" ssid = "16">3.2 Syntactic Features.</S>
			<S sid ="33" ssid = "17">The syntactic features extracted for a target word depend on the word’s part of speech: • verbs: the head noun of the verb’s object, par­ticle/preposition and prepositional object; • nouns: the headword of any verb-object, subject-verb or noun-noun relationships iden­ti.ed for the target word; •adjectives: the head noun modi.ed by the ad­jective.</S>
			<S sid ="34" ssid = "18">The extraction process was performed using heuris­tic patterns and regular expressions over the parts-of-speech surrounding the target word1.</S>
	</SECTION>
	<SECTION title="Classi.er Models for Word Sense Disambiguation. " number = "4">
			<S sid ="35" ssid = "1">This section brie.y introduces the 6 classi.er mod­els used in this study.</S>
			<S sid ="36" ssid = "2">Among these models, the Naïve Bayes variants (NB henceforth) (Pedersen, 1998; Manning and Schütze, 1999) and Cosine dif­fer slightly from off-the-shelf versions, and only the differences will be described.</S>
			<S sid ="37" ssid = "3">4.1 Vector-based Models: Enhanced Naïve Bayes and Cosine Models.</S>
			<S sid ="38" ssid = "4">Many of the systems used in this research share a common vector representation, which captures traditional bag-of-words, extended ngram and predicate-argument features in a single data struc­ture.</S>
			<S sid ="39" ssid = "5">In these models, a vector is created for each (dj)&apos;1&apos; document in the collection: d=j&apos;.dj= jWj, where jis the number of times the feature fjappears in document d, Nis the number of words in dand Wjis a weight associated with the feature 2 fj.</S>
			<S sid ="40" ssid = "6">Confusion between the same word participat­ing in multiple feature roles is avoided by append­ing the feature values with their positional type (e.g. stands_Sbj, ancient_L are distinct from stands and ancient in unmarked bag-of-words context).</S>
			<S sid ="41" ssid = "7">The notable difference between the extended models and others described in the literature, aside from the use of more sophisticated features than the traditional bag-of-words, is the variable weight­ing of feature types noted above.</S>
			<S sid ="42" ssid = "8">These differences yield a boost in the NB performance (relative to ba­sic Naïve Bayes) of between 3.5% (Basque) and 10% (Spanish), with an average improvement of 7.25% over the four languages.</S>
			<S sid ="43" ssid = "9">4.2 The BayesRatio Model.</S>
			<S sid ="44" ssid = "10">The BayesRatio model (BR henceforth) is a vector-based model using the likelihood ratio framework described in Gale et al.</S>
			<S sid ="45" ssid = "11">(1992): 1The feature extraction on the in English data was per­formed by .rst identifying text chunks, and then using heuris­tics on the chunks to extract the syntactic information.</S>
			<S sid ="46" ssid = "12">2The weight Wjdepends on the type of the feature kj: for the bag-of-word features, this weight is inversely proportional to the distance between the target word and the feature, while for predicate-argument and extended ngram features it is a em­pirically estimated weight (on a per language basis).</S>
			<S sid ="47" ssid = "13">P(sld) P(s)P(kls) sA=argmax=argmax P(•sld) P(•s)P(kl•s) /Ed where s is the selected sense, ddenotes documents and fdenotes features.</S>
			<S sid ="48" ssid = "14">By utilizing the binary ra­tio for k-way modeling of feature probabilities, this approach performs well on tasks where the data is sparse.</S>
			<S sid ="49" ssid = "15">4.3 The MMVC Model.</S>
			<S sid ="50" ssid = "16">The Mixture Maximum Variance Correction classi­.er (MMVC henceforth) (Cucerzan and Yarowsky, 2002) is a two step classi.er.</S>
			<S sid ="51" ssid = "17">First, the sense proba­bility is computed as a linear mixture P(sld)=P(slffd)P(fld).P(slf)P(fld) = /Ed/Ed where the probability P(slw)is estimated from data and P(wld)is computed as a weighted normal­ized similarity between the word wand the target word x(also taking into account the distance in the document between wand x).</S>
			<S sid ="52" ssid = "18">In a second pass, the sense whose variance exceeds a theoretically moti­vated threshold is selected as the .nal sense label (for details, see Cucerzan and Yarowsky (2002)).</S>
			<S sid ="53" ssid = "19">4.4 The Discriminative Models.</S>
			<S sid ="54" ssid = "20">Two discriminative models are used in the exper­iments presented in Section 5 -a transformation-based learning system (TBL henceforth) (Brill, 1995; Ngai and Florian, 2001) and a non-hierarchical decision lists system (DL henceforth) (Yarowsky, 1996).</S>
			<S sid ="55" ssid = "21">For prediction, these systems utilize local n-grams around the target word (up to 3 words/lemma/POS to the left/right), bag-of-words and lemma/collocation (±20 words around the tar­get word, grouped by different window sizes) and the syntactic features listed in Section 3.2.</S>
			<S sid ="56" ssid = "22">The TBL system was modi.ed to include redun­dant rules that do not improve absolute accuracy on training data in the traditional greedy training al­gorithm, but are nonetheless positively correlated with a particular sense.</S>
			<S sid ="57" ssid = "23">The bene.t of this approach is that predictive but redundant features in training context may appear by themselves in new test con­texts, improving coverage and increasing TBL base model performance by 12%.</S>
	</SECTION>
	<SECTION title="Models for Classi.er Combination. " number = "5">
			<S sid ="58" ssid = "1">One necessary property for success in combining classi.ers is that the errors produced by the com­ponent classi.ers should not be positively corre­lated.</S>
			<S sid ="59" ssid = "2">On one extreme, if the classi.er outputs are DecisionLists TBL BayesRatio Bayes Cosine MMVC 0.0 0.2 0.4 0.6 0.8 1.0 Figure 2: Empirically-derived classi.er similarity strongly correlated, they will have a very high inter-agreement rate and there is little to be gained from the joint output.</S>
			<S sid ="60" ssid = "3">On the other extreme, Perrone and Cooper (1993) show that, if the errors made by the classi.ers are uncorrelated and unbiased, then by considering a classi.er that selects the class that maximizes the posterior class probability average N 1 c=argmaxP( )=argmaxPk( )(1) N k..</S>
			<S sid ="61" ssid = "4">the error is reduced by a factor of . This case is mostly of theoretical interest, since in practice all the classi.ers will tend to make errors on the “harder” samples.</S>
			<S sid ="62" ssid = "5">Figure 3(a) shows the classi.er inter-agreement among the six classi.ers presented in Section 4, on the English data.</S>
			<S sid ="63" ssid = "6">Only two of them, BayesRatio and cosine, have an agreement rate of over 80%3, while the agreement rate can be as low as 63% (BayesRa­tio and TBL).</S>
			<S sid ="64" ssid = "7">The average agreement is 71.7%.</S>
			<S sid ="65" ssid = "8">The fact that the classi.ers’ output are not strongly cor­related suggests that the differences in performance among them can be systematically exploited to im­prove the overall classi.cation.</S>
			<S sid ="66" ssid = "9">All individual clas­si.ers have high stand-alone performance; each is individually competitive with the best single SEN­SEVAL2 systems and are fortuitously diverse in rel­ative performance, as shown in Table 3(b).</S>
			<S sid ="67" ssid = "10">A den­dogram of the similarity between the classi.ers is shown in Figure 2, derived using maximum linkage hierarchical agglomerative clustering.</S>
			<S sid ="68" ssid = "11">5.1 Major Types of Classi.er Combination.</S>
			<S sid ="69" ssid = "12">There are three major types of classi.er combina­tion (Xu et al., 1992).</S>
			<S sid ="70" ssid = "13">The most general type is the case where the classi.ers output a posterior class probability distribution for each sample (which can be interpolated).</S>
			<S sid ="71" ssid = "14">In the second case, systems only output a set of labels, together with a ordering of preference (likelihood).</S>
			<S sid ="72" ssid = "15">In the third and most re­strictive case, the classi.cations consist of just a sin­gle label, without rank or probability.</S>
			<S sid ="73" ssid = "16">Combining classi.ers in each one of these cases has different properties; the remainder of this section examines models appropriate to each situation.</S>
			<S sid ="74" ssid = "17">3The performance is measured using 5-fold cross validation on training data.</S>
			<S sid ="75" ssid = "18">Bayes Cosine System SENSEVAL1 SENSEVAL2 EN EN ES EU SV Baseline 63.2 48.3 45.9 62.7 46.2 NB 80.4 65.7 67.9 71.2 66.7 BR 79.8 65.3 69.0 69.6 68.0 Cosine 74.0 62.2 65.9 66.0 66.4 DL 79.9 63.2 65.1 70.7 61.5 TBL 80.7 64.4 64.7 69.4 62.7 MMVC 81.1 66.7 66.7 69.7 61.9 Bayes Cosine BayesRatio DL TBL MMVC (b) Individual classi.er performance; best performers are (a) Classi.er inter-agreement on SENSEVAL2 shown in bold English data Figure 3: Individual Classi.er Properties (cross-validation on SENSEVAL training data) 5.2 Combining the Posterior Sense Probability Distributions.</S>
			<S sid ="76" ssid = "19">One of the simplest ways to combine the poste­rior probability distributions is via direct averaging (Equation (1)).</S>
			<S sid ="77" ssid = "20">Surprisingly, this method obtains reasonably good results, despite its simplicity and the fact that is not theoretically motivated under a Bayes framework.</S>
			<S sid ="78" ssid = "21">Its success is highly dependent on the condition that the classi.ers’ errors are un­correlated (Tumer and Gosh, 1995).</S>
			<S sid ="79" ssid = "22">The averaging method is a particular case of weighted mixture:4 N P(slxfd)=P(klxfd)·Pk(slxfd)= k..</S>
			<S sid ="80" ssid = "23">N ,k(xfd)·Pk(slxfd)(2) k..</S>
			<S sid ="81" ssid = "24">where Ak(dd)is the weight assigned to the clas­si.er kin the mixture and Pk(slxd)is the poste­rior probability distribution output by classi.er k; for Ak(xd)=we obtain Equation (1).</S>
			<S sid ="82" ssid = "25">The mixture interpolation coef.cients can be computed at different levels of granularity.</S>
			<S sid ="83" ssid = "26">For instance, one can make the assumption that P(klxd)=P(klx)and then the coef.cients will be computed at word level; if P(klxd)=P(k) then the coef.cients will be estimated on the entire data.</S>
			<S sid ="84" ssid = "27">One way to estimate these parameters is by linear regression (Fuhr, 1989): estimate the coef.cients that minimize the mean square error (MSE) . N min e(xfd)-,k(xfd)·P(·lxfd) xdk..</S>
			<S sid ="85" ssid = "28">(3) where C(xd)is the target vector of the cor­rect classi.cation of word xin document d: 4Note that we are computing a probability conditioned both on the target word xand the document d, because the docu­ments are associated with a particular target word x; this for­malization works mainly for the lexical choice task.</S>
			<S sid ="86" ssid = "29">C(xd)(s)=Æ(ssx,d)dard sense of xin dand Æ { Æ(x y)= , sx,dbeing the goldstan­the Kronecker function: .if x =y if x=y As shown in Fuhr (1989), Perrone and Cooper (1993), the solution to the optimization problem (3) can be obtained by solving a linear set of equations.</S>
			<S sid ="87" ssid = "30">The resulting classi.er will have a lower square er­ror than the average classi.er (since the average classi.er is a particular case of weighted mixture).</S>
			<S sid ="88" ssid = "31">Another common method to compute the Apa­rameters is by using the Expectation-Maximization (EM) algorithm (Dempster et al., 1977).</S>
			<S sid ="89" ssid = "32">One can estimate the coef.cients such as to max­ imize the log-likelihood of the data, L = xd.xlogP(sx,dlxfd).</S>
			<S sid ="90" ssid = "33">In this particular opti­mization problem, the search space is convex, and therefore a solution exists and is unique, and it can be obtained by the usual EM algorithm (see Berger (1996) for a detailed description).</S>
			<S sid ="91" ssid = "34">An alternative method for estimating the parame­ters Akis to approximate them with the performance of the kth classi.er (a performance-based combiner) (van Halteren et al., 1998; Sang et al., 2000) Ak(xd)=P(Ck_is_correctlxd)(4) therefore giving more weight to classi.ers that have a smaller classi.cation error (the method will be re­ferred to as PB).</S>
			<S sid ="92" ssid = "35">The probabilities in Equation (4) are estimated directly from data, using the maxi­mum likelihood principle.</S>
			<S sid ="93" ssid = "36">5.3 Combination based on Order Statistics.</S>
			<S sid ="94" ssid = "37">In cases where there are reasons to believe that the posterior probability distribution output by a clas­si.er is poorly estimated5, but that the relative or­dering of senses matches the truth, a combination 5For instance, in sparse classi.cation spaces, the Naïve Bayes classi.er will assign a probability very close to 1 to the most likely sense, and close to 0 for the other ones.</S>
			<S sid ="95" ssid = "38">strategy based on the relative ranking of sense pos­terior probabilities is more appropriate.</S>
			<S sid ="96" ssid = "39">The sense posterior probability can be computed as Ak(xk)rrnkk(slxd) P(slxd)= k Ak(xk)rrnkk(s&apos;lx d)(5) s&apos;k where the rank of a sense sis inversely proportional to the number of senses that are (strictly) more prob­able than sense s: ( {(r} r &apos;&apos; rankk(slx,d)= slPkslx,dPk(slx,d) + . This method will tend to prefer senses that appear closer to the top of the likelihood list for most of the classi.ers, therefore being more robust both in cases where one classi.er makes a large error and in cases where some classi.ers consistently overestimate the posterior sense probability of the most likely sense.</S>
			<S sid ="97" ssid = "40">5.4 The Classi.er Republic: Voting.</S>
			<S sid ="98" ssid = "41">Some classi.cation methods frequently used in NLP directly minimize the classi.cation error and do not usually provide a probability distribution over classes/senses (e.g. TBL and decision lists).</S>
			<S sid ="99" ssid = "42">There are also situations where the user does not have access to the probability distribution, such as when the available classi.er is a black-box that only outputs the best classi.cation.</S>
			<S sid ="100" ssid = "43">A very common technique for combination in such a case is by vot­ing (Brill and Wu, 1998; van Halteren et al., 1998; Sang et al., 2000).</S>
			<S sid ="101" ssid = "44">In the simplest model, each clas­si.er votes for its classi.cation and the sense that receives the most number of votes wins.</S>
			<S sid ="102" ssid = "45">The behav­ior is identical to selecting the sense with the highest posterior probability, computed as Ak(xd)·Æ(ss k(xd)) P(slxd)= k (xd)·Æ(t(x Aks kd))(6) yk where Æis the Kronecker function and s k(xd)is the classi.cation of the kth classi.er.</S>
			<S sid ="103" ssid = "46">The Akco­ef.cients can be either equal (in a perfect classi.er democracy), or they can be estimated with any of the techniques presented in Section 5.2.</S>
			<S sid ="104" ssid = "47">Section 6 presents an empirical evaluation of these tech­niques.</S>
			<S sid ="105" ssid = "48">Van Halteren et al.</S>
			<S sid ="106" ssid = "49">(1998) introduce a modi.ed version of voting called TagPair.</S>
			<S sid ="107" ssid = "50">Under this model, the conditional probability that the word sense is s given that classi.er ioutputs sand classi.er jout­puts s2, P(sls i(xd)=ss j(xd)=s2), is com­puted on development data, and the posterior prob­ability is estimated as N P(slx,d)eÆ(s,sAk(x,d))+Æ(s,sA j(x,d)) (7) k..</S>
			<S sid ="108" ssid = "51">j where sc;,j(xfd)=argmaxtP(tlsc;(xfd)fscj(xfd)).</S>
			<S sid ="109" ssid = "52">Each classi.er votes for its classi.cation and every pair of classi.ers votes for the sense that is most likely given the joint classi.cation.</S>
			<S sid ="110" ssid = "53">In the experi­ments presented in van Halteren et al.</S>
			<S sid ="111" ssid = "54">(1998), this method was the best performer among the presented methods.</S>
			<S sid ="112" ssid = "55">Van Halteren et al.</S>
			<S sid ="113" ssid = "56">(2001) extend this method to arbitrarily long conditioning sequences, obtaining the best published POS tagging results on four corpora.</S>
	</SECTION>
	<SECTION title="Empirical Evaluation. " number = "6">
			<S sid ="114" ssid = "1">To empirically test the combination methods pre­sented in the previous section, we ran experiments on the SENSEVAL1 English data and data from four SENSEVAL2 lexical sample tasks: English(EN), Spanish(ES), Basque(EU) and Swedish(SV).</S>
			<S sid ="115" ssid = "2">Un­less explicitly stated otherwise, all the results in the following section were obtained by performing 5­fold cross-validation6.</S>
			<S sid ="116" ssid = "3">To avoid the potential for over-optimization, a single .nal evaluation system was run once on the otherwise untouched test data, as presented in Section 6.3.</S>
			<S sid ="117" ssid = "4">The data consists of contexts associated with a speci.c word to be sense tagged (target word); the context size varies from 1 sentence (Spanish) to 5 sentences (English, Swedish).</S>
			<S sid ="118" ssid = "5">Table 1 presents some statistics collected on the training data for the .ve data sets.</S>
			<S sid ="119" ssid = "6">Some of the tasks are quite challeng­ing (e.g. SENSEVAL2 English task) – as illustrated by the mean participating systems’ accuracies in Ta­ble 5.</S>
			<S sid ="120" ssid = "7">Outlining the claim that feature selection is im­portant for WSD, Table 2 presents the marginal loss in performance of either only using one of the po­sitional feature classes or excluding one of the po­sitional feature classes relative to the algorithm’s full performance using all available feature classes.</S>
			<S sid ="121" ssid = "8">It is interesting to note that the feature-attractive methods (NB,BR,Cosine) depend heavily on the BagOfWords features, while discriminative methods are most dependent on LocalContext features.</S>
			<S sid ="122" ssid = "9">For an extensive evaluation of factors in.uencing the WSD performance (including representational fea­tures), we refer the readers to Yarowsky and Florian (2002).</S>
			<S sid ="123" ssid = "10">6.1 Combination Performance.</S>
			<S sid ="124" ssid = "11">Table 3 shows the .negrained sense accuracy (per­cent of exact correct senses) results of running the 6When parameters needed to be estimated, a 31-1 split was used: the systems were trained on three parts, parameters esti­mated on the fourth (in a round-robin fashion) and performance tested on the .fth; special care was taken such that no “test” data was used in training classi.ers or parameter estimation.</S>
			<S sid ="125" ssid = "12">SE1 SENSEVAL2 EN EN ES EU SV #words 42 73 39 40 40 #samples 12479 8611 4480 3444 8716 avg #senses/word 11.3 10.7 4.9 4.8 11.1 avg #samples/sense 26.21 9.96 23.4 17.9 19.5 Table 1: Training set characteristics Performance drop relative to full system (%) NB Cosine BR TBL DL BoW Ftrs Only -6.44.84.86.03.2 Local Ftrs Only -18.411.56.11.53.3 Syntactic Ftrs Only -28.114.95.45.44.8 No BoW Ftrs14.78.15.30.5* -2.0 No Local Ftrs3.50.8* -2.22.94.5 No Syntactic Ftrs1.10.8* -1.31.02.3 Table 2: Individual feature type contribution to perfor­mance.</S>
			<S sid ="126" ssid = "13">Fields marked with *indicate that the difference in performance was not statistically signi.cant at a 0.01 level (paired McNemar test).</S>
			<S sid ="127" ssid = "14">classi.er combination methods for 5 classi.ers, NB (Naïve Bayes), BR (BayesRatio), TBL, DL and MMVC, including the average classi.er accuracy and the best classi.cation accuracy.</S>
			<S sid ="128" ssid = "15">Before examin­ing the results, it is worth mentioning that the meth­ods which estimate parameters are doing so on a smaller training size (3/5, to be precise), and this can have an effect on how well the parameters are estimated.</S>
			<S sid ="129" ssid = "16">After the parameters are estimated, how­ever, the interpolation is done between probability distributions that are computed on 4/5 of the train­ing data, similarly to the methods that do not esti­mate any parameters.</S>
			<S sid ="130" ssid = "17">The unweighted averaging model of probability interpolation (Equation (1)) performs well, obtain­ing over 1% mean absolute performance over the best classi.er7, the difference in performance is statistically signi.cant in all cases except Swedish and Spanish.</S>
			<S sid ="131" ssid = "18">Of the classi.er combination tech­niques, rank-based combination and performance-based voting perform best.</S>
			<S sid ="132" ssid = "19">Their mean 2% absolute improvement over the single best classi.er is signif­icant in all languages.</S>
			<S sid ="133" ssid = "20">Also, their accuracy improve­ment relative to uniform-weight probability interpo­lation is statistically signi.cant in aggregate and for all languages except Basque (where there is gener­ally a small difference among all classi.ers).</S>
			<S sid ="134" ssid = "21">To ensure that we bene.t from the performance improvement of each of the stronger combination methods and also to increase robustness, a .nal av­eraging method is applied to the output of the best performing combiners (creating a stacked classi­.er).</S>
			<S sid ="135" ssid = "22">The last line in Table 3 shows the results ob­tained by averaging the rank-based, EM-vote and 7The best individual classi.er differs with language, as shown in Figure 3(b).</S>
			<S sid ="136" ssid = "23">Method SE1 SENSEVAL2 EN EN ES EU SV Individual Classi.ers Mean Acc 79.5 65.0 66.6 70.4 65.9 Best Acc 81.1 66.7 68.8 71.2 68.0 Probability Interpolation Averaging 82.7 68.0 69.3 72.2 68.16 MSE 82.8 68.1 69.7 71.0 69.2 EM 82.7 68.4 69.6 72.1 69.1 PB 82.8 68.0 69.4 72.2 68.7 Rank-based Combination rank 83.1 68.6 71.0 72.1 70.3 Count-based Combination (Voting) Simple Vote 82.8 68.1 70.9 72.1 70.0 TagPair 82.9 68.3 70.9 72.1 70.0 EM 83.0 68.4 70.5 71.7 70.0 PB 83.1 68.5 70.8 72.0 70.3 Stacking (Meta-Combination) Prob.</S>
			<S sid ="137" ssid = "24">Interp.</S>
			<S sid ="138" ssid = "25">83.2 68.6 71.0 72.3 70.4 Table 3: Classi.er combination accuracy over 5 base classi.ers: NB, BR, TBL, DL, MMVC.</S>
			<S sid ="139" ssid = "26">Best perform­ing methods are shown in bold.</S>
			<S sid ="140" ssid = "27">Estimation Level word POS ALL Interp Accuracy 68.1 68.2 68.0 68.4 CrossEntropy 1.623 1.635 1.646 1.632 Table 4: Accuracy for different EM-weighted probability interpolation models for SENSEVAL2 PB-vote methods’ output.</S>
			<S sid ="141" ssid = "28">The difference in perfor­mance between the stacked classi.er and the best classi.er is statistically signi.cant for all data sets at a signi.cance level of at least -5, as measured by a paired McNemar test.</S>
			<S sid ="142" ssid = "29">One interesting observation is that for all meth­ods of A-parameter estimation (EM, PB and uniform weighting) the count-based and rank-based strate­gies that ignore relative probability magnitudes out­perform their equivalent combination models using probability interpolation.</S>
			<S sid ="143" ssid = "30">This is especially the case when the base classi.er scores have substantially different ranges or variances; using relative ranks effectively normalizes for such differences in model behavior.</S>
			<S sid ="144" ssid = "31">For the three methods that estimate the interpo­lation weights – MSE, EM and PB – three vari­ants were investigated.</S>
			<S sid ="145" ssid = "32">These were distinguished by the granularity at which the weights are estimated: at word level (Ak(xd)=Ak(x)), at POS level (Ak(xd)=Ak(Pas(x))) and over the entire train­ing set (Ak(xd)=Ak).</S>
			<S sid ="146" ssid = "33">Table 4 displays the results obtained by estimating the parameters using EM at different sample granularities for the SENSEVAL2 English data.</S>
			<S sid ="147" ssid = "34">The number in the last column is ob­tained by interpolating the .rst three systems.</S>
			<S sid ="148" ssid = "35">Also displayed is cross-entropy, a measure of how well English Spanish Swedish Basque Senseval2 dataset (a) Performance drop when eliminating one classi.er (marginal performance contribution) 1020 40 50 80 Percent of available training data (b) Performance drop when eliminating one classifer, versus training data size Figure 4: Individual basic classi.ers’ contribution to the .nal classi.er combination performance.</S>
			<S sid ="149" ssid = "36">the combination classi.er estimates the sense prob s abilities, C=-) P(slxd).</S>
			<S sid ="150" ssid = "37">x,dP(sx,d 6.2 Individual Systems Contribution to Combination.</S>
			<S sid ="151" ssid = "38">An interesting issue pertaining to classi.er combi­nation is what is the marginal contribution to .nal combined performance of the individual classi.er.</S>
			<S sid ="152" ssid = "39">A suitable measure of this contribution is the dif­ference in performance between a combination sys­tem’s behavior with and without the particular clas­si.er.</S>
			<S sid ="153" ssid = "40">The more negative the accuracy difference on omission, the more valuable the classi.er is to the ensemble system.</S>
			<S sid ="154" ssid = "41">Figure 4(a) displays the drop in performance ob­tained by eliminating in turn each classi.er from the 6-way combination, across four languages, while Figure 4(b) shows the contribution of each classi.er on the SENSEVAL2 English data for different train­ing sizes (10%-80%)8.</S>
			<S sid ="155" ssid = "42">Note that the classi.ers with the greatest marginal contribution to the combined system performance are not always the best single performing classi.ers (Table 3(b)), but those with the most effective original exploitation of the com­mon feature space.</S>
			<S sid ="156" ssid = "43">On average, the classi.er that contributes the most to the combined system’s per­formance is the TBL classi.er, with an average im­provement of .66%across the 4 languages.</S>
			<S sid ="157" ssid = "44">Also, note that TBL and DL offer the greatest marginal contribution on smaller training sizes (Figure 4(b)).</S>
			<S sid ="158" ssid = "45">6.3 Performance on Test Data.</S>
			<S sid ="159" ssid = "46">At all points in this article, experiments have been based strictly on the original SENSEVAL1 and SEN­SEVAL2 training sets via cross-validation.</S>
			<S sid ="160" ssid = "47">The of­.cial SENSEVAL1 and SENSEVAL2 test sets were 8The latter graph is obtained by sampling repeatedly a prespeci.ed ratio of training samples from 3 of the 5 cross-validation splits, and testing on the other 2.</S>
			<S sid ="161" ssid = "48">unused and unexamined during experimentation to avoid any possibility of indirect optimization on this data.</S>
			<S sid ="162" ssid = "49">But to provide results more readily compara­ble to the of.cial benchmarks, a single consensus system was created for each language using linear average stacking on the top three classi.er combi­nation methods in Table 3 for conservative robust­ness.</S>
			<S sid ="163" ssid = "50">The .nal frozen consensus system for each language was applied once to the SENSEVAL test sets.</S>
			<S sid ="164" ssid = "51">The .negrained results are shown in Table 5.</S>
			<S sid ="165" ssid = "52">For each language, the single new stacked com­bination system outperforms the best previously re­ported SENSEVAL results on the identical test data9.</S>
			<S sid ="166" ssid = "53">As far as we know, they represent the best published results for any of these .ve SENSEVAL tasks..</S>
	</SECTION>
	<SECTION title="Conclusion. " number = "7">
			<S sid ="167" ssid = "1">In conclusion, we have presented a comparative evaluation study of combining six structurally and procedurally different classi.ers utilizing a rich common feature space.</S>
			<S sid ="168" ssid = "2">Various classi.er combi­nation methods, including count-based, rank-based and probability-based combinations are described and evaluated.</S>
			<S sid ="169" ssid = "3">The experiments encompass super­vised lexical sample tasks in four diverse languages: English, Spanish, Swedish, and Basque.</S>
			<S sid ="170" ssid = "4">9To evaluate systems on the full disambiguation task, it is appropriate to compare them on their accuracy at 100% test-data coverage, which is equivalent to system recall in the of.­cial SENSEVAL scores.</S>
			<S sid ="171" ssid = "5">However, it can also be useful to con­sider performance on only the subset of data for which a sys­tem is con.dent enough to answer, measured by the secondary measure precision.</S>
			<S sid ="172" ssid = "6">One useful byproduct of the CBV method is the con.dence it assigns to each sample, which we measured by the number of classi.ers that voted for the sample.</S>
			<S sid ="173" ssid = "7">If one restricts system output to only those test instances where all participating classi.ers agree, consensus system performance is 83.4% precision at a recall of 43%, for an F-measure of 56.7 on the SENSEVAL2 English lexical sample task.</S>
			<S sid ="174" ssid = "8">This outper­forms the two supervised SENSEVAL2 systems that only had partial coverage, which exhibited 82.9% precision at a recall of 28% (F=41.9) and 66.5% precision at 34.4% recall (F=47.9).</S>
			<S sid ="175" ssid = "9">SENSEVAL1 English SENSEVAL2 Sense Classi.cation Accuracy English Spanish Swedish Basque Mean Of.cial SENSEVAL Systems Accuracy 73.1.2.9 55.7.5.3 59.6.5.0 58.4.6.6 74.4.1.8 Best Previously Published SENSEVAL Accuracy 77.1% 64.2% 71.2% 70.1% 75.7% Best Individual Classi.er Accuracy 77.1% 62.5% 69.6% 68.6% 75.6% New (Stacking) Accuracy 79.7% 66.5% 72.4% 71.9% 76.7% Table 5: Final Performance (Frozen Systems) on SENSEVAL Lexical Sample WSD Test Data The experiments show substantial variation in single classi.er performance across different lan­guages and data sizes.</S>
			<S sid ="176" ssid = "10">They also show that this variation can be successfully exploited by 10 differ­ent classi.er combination methods (and their meta-voting consensus), each of which outperforms both the single best classi.er system and standard classi­.er combination models on each of the 4 focus lan­guages.</S>
			<S sid ="177" ssid = "11">Furthermore, when the stacking consensus systems were frozen and applied once to the other­wise untouched test sets, they substantially outper­formed all previously known SENSEVAL1 and SEN­SEVAL2 results on 4 languages, obtaining the best published results on these data sets.</S>
	</SECTION>
	<SECTION title="Acknowledgements. " number = "8">
			<S sid ="178" ssid = "1">The authors would like to thank Noah Smith for his comments on an earlier version of this paper, and the anonymous reviewers for their useful comments.</S>
			<S sid ="179" ssid = "2">This work was supported by NSF grant IIS9985033 and ONR/MURI contract N0001401-10685.</S>
	</SECTION>
</PAPER>
